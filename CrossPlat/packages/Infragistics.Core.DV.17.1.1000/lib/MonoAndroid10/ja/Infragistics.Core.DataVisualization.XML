<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Infragistics.Core.DataVisualization</name>
    </assembly>
    <members>
      <member name="T:Infragistics.Core.Controls.SRProvider">
        <summary>文字列リソースを提供します。</summary>
      </member>
      <member name="M:Infragistics.Core.Controls.SRProvider.#ctor">
        <summary>SRProvider コンストラクター。</summary>
      </member>
      <member name="P:Infragistics.Core.Controls.SRProvider.OPD_DefaultInteraction">
        <summary>XamOverviewPlusDetailPane のデフォルト インタラクション ボタン ツールチップのデフォルト値。</summary>
      </member>
      <member name="P:Infragistics.Core.Controls.SRProvider.OPD_ScaleToFit">
        <summary>XamOverviewPlusDetailPane のスケール ツー フィット ボタン ツールチップのデフォルト値。</summary>
      </member>
      <member name="P:Infragistics.Core.Controls.SRProvider.OPD_ZoomTo100">
        <summary>XamOverviewPlusDetailPane ズーム ツー 100% ボタン ツールチップのデフォルト値。</summary>
      </member>
      <member name="P:Infragistics.Core.Controls.SRProvider.OPD_ScaleToFit_SeriesViewer">
        <summary>SeriesViewer スタイルの XamOverviewPlusDetailPane のスケール ツー フィット ボタン ツールチップのデフォルト値。</summary>
      </member>
      <member name="P:Infragistics.Core.Controls.SRProvider.PieChart_Others">
        <summary>円チャートの「その他」スライスのラベルのデフォルト値。</summary>
      </member>
      <member name="P:Infragistics.Core.Controls.SRProvider.FinancialSeries_Open">
        <summary>FinancialSeries の Open 文字列のデフォルト値。</summary>
      </member>
      <member name="P:Infragistics.Core.Controls.SRProvider.FinancialSeries_Close">
        <summary>FinancialSeries の Close 文字列のデフォルト値。</summary>
      </member>
      <member name="P:Infragistics.Core.Controls.SRProvider.FinancialSeries_Low">
        <summary>FinancialSeries の Low 文字列のデフォルト値。</summary>
      </member>
      <member name="P:Infragistics.Core.Controls.SRProvider.FinancialSeries_High">
        <summary>FinancialSeries の High 文字列のデフォルト値。</summary>
      </member>
      <member name="P:Infragistics.Core.Controls.SRProvider.FinancialSeries_Volume">
        <summary>FinancialSeries の Volume 文字列のデフォルト値。</summary>
      </member>
      <member name="P:Infragistics.Core.Controls.SRProvider.BubbleSeries_Radius">
        <summary>BubbleSeries の Radius の文字列のデフォルト値。</summary>
      </member>
      <member name="T:Infragistics.Core.Controls.TypefaceManager">
        <summary>
          フォント ファミリで読み込む Skia の Typeface を制御するために使用できます。<remarks>UI スレッドのみから使用します。</remarks>
        </summary>
      </member>
      <member name="P:Infragistics.Core.Controls.TypefaceManager.Instance">
        <summary>TypefaceManager のデフォルト インスタンスを取得します。</summary>
      </member>
      <member name="M:Infragistics.Core.Controls.TypefaceManager.RegisterTypeface(System.String,SkiaSharp.SKTypeface)">
        <summary>特定のファミリ名として規格以外の書体を登録します。特定のファミリ名の解決をオーバーライドするために使用できます。</summary>
        <param name="familyName">登録するフォント ファミリ名。</param>
        <param name="typeface">登録する SKIA 書体。</param>
      </member>
      <member name="M:Infragistics.Core.Controls.TypefaceManager.RegisterTypeface(System.String,SkiaSharp.SKTypefaceStyle,SkiaSharp.SKTypeface)">
        <summary>特定のファミリ名として規格以外の書体およびスタイル設定を登録します。特定のファミリ名の解決をオーバーライドするために使用できます。</summary>
        <param name="familyName">登録するフォント ファミリ名。</param>
        <param name="style">提供された familyName に登録するフォント スタイル。</param>
        <param name="typeface">登録する SKIA 書体。</param>
      </member>
      <member name="M:Infragistics.Core.Controls.TypefaceManager.OverrideDefaultTypeface(SkiaSharp.SKTypeface)">
        <summary>SKIA に基づくコンポーネントが特定の書体と使用するデフォルトの書体をオーバーライドします。</summary>
        <param name="typeface">使用する書体</param>
      </member>
      <member name="M:Infragistics.Core.Controls.TypefaceManager.OverrideDefaultTypeface(SkiaSharp.SKTypefaceStyle,SkiaSharp.SKTypeface)">
        <summary>SKIA に基づくコンポーネントが使用するデフォルトの書体を特定の書体でオーバーライドします。</summary>
        <param name="style">デフォルトの書体をオーバーライドするスタイル設定。</param>
        <param name="typeface">使用する書体。</param>
      </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider">
            <summary>イン メモリ データのローカル データ ソース データ プロバイダーを表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.#ctor">
            <summary>DataSourceLocalDataProvider を構築します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.ItemsSource">
            <summary>プロバイダーのローカル データを取得または設定します。</summary>
        </member>
        <member name="E:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.SchemaChanged">
            <summary>プロバイダーのスキーマが変更されたことを示します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.GetItemAtIndex(System.Int32)">
            <summary>指定したインデックスにある項目を取得します。</summary>
            <param name="index">項目を取得するインデックス。</param>
            <returns>指定されたインデックスにある項目。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.GetItemValue(System.Object,System.String)">
            <summary>項目から名前付き値を取得します。</summary>
            <param name="item">値を取得する項目。</param>
            <param name="valueName">取得するプロパティ パス。</param>
            <returns>取得した値。</returns>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.ActualCount">
            <summary>プロバイダーの項目の合計数。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.ActualSchema">
            <summary>プロバイダーの解決済みスキーマ。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.OnPropertyChanged(System.String,System.Object,System.Object)">
            <summary>プロパティを変更すると呼び出されます。</summary>
            <param name="propertyName">変更されたプロパティの名前。</param>
            <param name="oldValue">プロパティの古い値。</param>
            <param name="newValue">プロパティの新しい値。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.List">
            <summary>プロバイダーに割り当てられるリスト (ある場合) を取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.PropertyUpdatedOverride(System.String,System.Object,System.Object)">
            <summary>プロバイダーのプロパティが更新されたときに呼び出されます。</summary>
            <param name="propertyName">更新されたプロパティの名前。</param>
            <param name="oldValue">プロパティの古い値。</param>
            <param name="newValue">プロパティの新しい値。</param>
        </member>
        <member name="E:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.PropertyChanged">
            <summary>プロパティ値が変更したことを示します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.ExecutionContext">
            <summary>プロバイダーが通知の送信で使用する実行コンテキストを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.MustSyncListWithChanges">
            <summary>プロバイダーは List を同期化する必要があるかどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.NotifySetItem(System.Int32,System.Object,System.Object)">
            <summary>項目が基本データのインデックスに設定されたことをプロバイダーに手動的に通知します。データが監視可能な型の場合に必要がありません。</summary>
            <param name="index">項目が設定されたインデックス。</param>
            <param name="oldItem">インデックスにある以前の項目。</param>
            <param name="newItem">インデックスにある新しい項目。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.NotifyClearItems">
            <summary>基本データがクリアまたはリセットされたことをプロバイダーに手動的に通知します。データが監視可能な型の場合に必要がありません。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.NotifyInsertItem(System.Int32,System.Object)">
            <summary>項目が基本データのインデックスに挿入されたことをプロバイダーに手動的に通知します。データが監視可能な型の場合に必要がありません。</summary>
            <param name="index">項目が挿入されたインデックス。</param>
            <param name="newItem">インデックスにある新しい項目。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.NotifyRemoveItem(System.Int32,System.Object)">
            <summary>項目が基本データのインデックスから削除されたことをプロバイダーに手動的に通知します。データが監視可能な型の場合に必要がありません。</summary>
            <param name="index">項目が削除されたインデックス。</param>
            <param name="oldItem">インデックスにある以前の項目。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.UpdateNotifier">
            <summary>データ プロバイダーが通知を送信するへの notifier を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.DeferAutoRefresh">
            <summary>データ プロバイダーの自動更新を遅延するかどうかを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.IsSortingSupported">
            <summary>このレベルにプロバイダーが並べ替えをサポートするかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.IsFilteringSupported">
            <summary>このレベルにプロバイダーがフィルターをサポートするかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.SortDescriptions">
            <summary>プロバイダーに割り当てられる現在の並べ替え説明を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.FilterExpressions">
            <summary>プロバイダーに割り当てられる現在のフィルター説明を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.NotifyUsingSourceIndexes">
            <summary>元のソース インデックスを使用してこのプロバイダーに手動的な通知を送信するかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.PropertiesRequested">
            <summary>データ プロバイダーが必要なしのプロパティのフィルター アウトをサポートする場合、必要なプロパティのセットを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.IsItemIndexLookupSupported">
            <summary>このレベルで項目のルックアップがサポートされるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.IsKeyIndexLookupSupported">
            <summary>このレベルでキーのルックアップがサポートされるかどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.QueueAutoRefresh">
            <summary>自動更新の実行をキューします。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.RefreshInternalOverride">
            <summary>更新ロジックを提供するためにオーバーライドされます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.FlushAutoRefresh">
            <summary>自動更新を同期に実行することになります。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.Refresh">
            <summary>データ プロバイダーを同期に更新します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.IndexOfItem(System.Object)">
            <summary>指定した項目のインデックスを取得します。</summary>
            <param name="item">インデックスを取得する項目。</param>
            <returns>項目のインデックス。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceLocalDataProvider.IndexOfKey(System.Object[])">
            <summary>指定したキーのインデックスを取得します。</summary>
            <param name="key">インデックスを取得するキー。</param>
            <returns>要求されたインデックス。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataIntentAttribute">
            <summary>データ インテントを指定する属性を表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataIntentAttribute.Intent">
            <summary>属性のデータ インテントを取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DataIntentAttribute">
            <summary>フィールドまたはプロパティにデータ インテントを指定可能な属性。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataIntentAttribute.#ctor(System.String)">
            <summary>DataIntentAttribute を構築します。</summary>
            <param name="intent">使用するデータ インテント。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataIntentAttribute.Intent">
            <summary>属性のデータ インテントを取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.BaseDataSource">
            <summary>データ ソースの実装が拡張可能な IDataSource の基本実装を提供します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.ActualCount">
            <summary>データソース内の項目の実際数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.ActualPrimaryKey">
            <summary>データソースの現在の実際のプライマリ キーを取得します。可能な場合、自動検出されます。それ以外の場合、ユーザーにより提供されるかオーバーライドされます。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.ActualSchema">
            <summary>データ ソースの解決されたスキーマを取得します。項目で利用可能なプロパティを表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.DeferAutoRefresh">
            <summary>データ ソースの自動更新機能が遅延されているかどうかを取得または設定します。True に設定した場合、データ ソースはほとんどの設定変更に対応しません。代わりに処理を遅延します。この値を false に設定すると、新しい更新操作をキューします。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.ExecutionContext">
            <summary>データ ソースが非同期操作と同期するか、遅延された操作を遅延するために使用する実行コンテキストを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.FilterExpressions">
            <summary>フィルター式に追加するコレクションを取得します。このコレクションでフィルター式を変更すると、データ ソースに適用されるフィルターを変更します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.FirstVisibleIndexRequested">
            <summary>現在の最初の表示可能なインデックスにするデータ ソースのインデックス コンシューマーを取得または設定します。たとえば、グリッドは現在表示可能な一番上の行を示し、変更に基づいて更新します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.IsFilteringSupported">
            <summary>データ ソースでフィルターがサポートされているかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.IsItemIndexLookupSupported">
            <summary>提供された項目のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.IsKeyIndexLookupSupported">
            <summary>提供されたプライマリ キー値のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.IsSortingSupported">
            <summary>データ ソースでの並べ替えがサポートされているかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.IsVirtual">
            <summary>現在のデータ ソースが仮想データ ソースかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.LastVisibleIndexRequested">
            <summary>現在の最後の表示可能なインデックスになりたいデータ ソースのインデックス コンシューマーを取得または設定します。たとえば、グリッドは現在表示可能な一番上の行を示し、変更に基づいて更新します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.NotifyUsingSourceIndexes">
            <summary>データ ソースの変更を手動的に通知する場合、実際のソース データに対するインデックス、またはデータ ソースが保存されているビューに対するインデックスを使用するかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.PrimaryKey">
            <summary>ユーザーがデータ ソースの項目のプライマリ キーを指定したことを示すプロパティ参照のリストを取得または設定します。データ ソースのコンシューマーは通常データ ソースの項目を一意的に識別する必要があります。この目的のためにプライマリ キーを指定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.PropertiesRequested">
            <summary>データ ソースのコンシューマーが要求されたプロパティへのプロパティ参照のリストを取得または設定します。指定された場合、このデータ ソースの型のデフォルト動作の代わりに、データ ソースがそのプロパティのみを要求するか、そのプロパティが含まれることを確認します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.SortDescriptions">
            <summary>並べ替え説明に追加するコレクションを取得します。このコレクションで並べ替え説明を変更すると、データ ソースに適用される並べ替えを変更します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.BaseDataSource.UpdateNotifier">
            <summary>さまざまな変更があったことを示すためにデータ ソースがメソッドを呼び出す IDataSourceUpdateNotifier を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.FlushAutoRefresh">
            <summary>キューされたデータ ソースの更新が続行する前に適用されたことを確認するために呼び出されます。データ ソースで設定の変更結果を同期的に表示するときのみ必要です。注: 仮想データ ソースの場合、データ ソースがその他の同期要求のデータ実装を待っている場合があります。この呼び出しはその要求の完了を待ちません。適切な要求が設定変更から送信されていることのみを確認します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.GetItemAtIndex(System.Int32)">
            <summary>データ ソースに指定したインデックスにある項目を返します。このインデックスは、元のソースの基本インデックスではなく、データ ソースのデータの現在ビューに基づきます。</summary>
            <param name="index">要求された項目のインデックス。</param>
            <returns>要求されたインデックスにある項目。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.GetItemProperty(System.Object,System.String)">
            <summary>データ ソースに含まれる項目の名前付きプロパティの値を展開します。</summary>
            <param name="item">プロパティ値を展開する項目。</param>
            <param name="propertyName">値を展開するプロパティの名前。</param>
            <returns>指定したプロパティの値。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.GetItemPropertyAtIndex(System.Int32,System.String)">
            <summary>指定したインデックスにある項目から名前付きのプロパティ値を展開します。</summary>
            <param name="index">プロパティ値を展開する項目のインデックス。</param>
            <param name="valueName">値を展開するプロパティ値。</param>
            <returns>指定したプロパティの値。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.IndexOfItem(System.Object)">
            <summary>データ ソースに含まれている項目のインデックスを返すために呼び出されます。項目が見つからないか、この操作がサポートされていない場合は -1 を返します。</summary>
            <param name="item">インデックスを検索する項目。</param>
            <returns>インデックスまたは -1。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.IndexOfKey(System.Object[])">
            <summary>データ ソースに含まれているプライマリ キー値のインデックスを返すために呼び出されます。キーが見つからない、またはこの操作がサポートされていない場合は -1 を返します。</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.IsPlaceholderItem(System.Int32)">
            <summary>要求されたインデックスにある項目がプレースホルダー項目で、実際項目になれなかった場合に True を返します。</summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.NotifyClearItems">
            <summary>バインドされるデータがクリアされ、再検証する必要があることをデータ ソースに手動的に通知します。データ ソースにバインドされるデータが監視可能な場合、これを呼び出す必要はありません。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.NotifyInsertItem(System.Int32,System.Object)">
            <summary>バインドされるデータに項目が挿入されたことをデータ ソースに手動的に通知します。データ ソースにバインドされるデータが監視可能な場合、これを呼び出す必要はありません。</summary>
            <param name="index">挿入された項目のインデックス。</param>
            <param name="newItem">指定したインデックスにある新しい項目。このデータ ソースで IsVirtual == true の場合のみ、値を設定する必要はありません。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.NotifyRemoveItem(System.Int32,System.Object)">
            <summary>バインドされるデータに項目が削除されたことをデータ ソースに手動的に通知します。データ ソースにバインドされるデータが監視可能な場合、これを呼び出す必要はありません。</summary>
            <param name="index">削除された項目のインデックス。</param>
            <param name="oldItem">指定したインデックスにある以前の項目。このデータ ソースで IsVirtual == true の場合のみ、値を設定する必要はありません。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.NotifySetItem(System.Int32,System.Object,System.Object)">
            <summary>バインドされるデータに項目が変更されたことをデータ ソースに手動的に通知します。データ ソースにバインドされるデータが監視可能な場合、これを呼び出す必要はありません。</summary>
            <param name="index">変更された項目のインデックス。</param>
            <param name="oldItem">指定したインデックスにある以前の項目。このデータ ソースで IsVirtual == true の場合のみ、値を設定する必要はありません。</param>
            <param name="newItem">指定したインデックスにある新しい項目。このデータ ソースで IsVirtual == true の場合のみ、値を設定する必要はありません。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.QueueAutoRefresh">
            <summary>データ ソースの更新操作を手動的にキューするために呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.Refresh">
            <summary>データ ソースを同期して更新するために呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary><see cref="E:Infragistics.Core.Controls.DataSource.BaseDataSource.PropertyChanged"/> イベントを呼び出します。</summary>
            <seealso cref="T:System.ComponentModel.PropertyChangedEventArgs"/>
            <seealso cref="E:Infragistics.Core.Controls.DataSource.BaseDataSource.PropertyChanged"/>
        </member>
        <member name="E:Infragistics.Core.Controls.DataSource.BaseDataSource.PropertyChanged">
            <summary>オブジェクトでプロパティが変更されたことを示します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.BaseDataSource.OnSchemaChanged(Infragistics.Core.Controls.DataSource.DataSourceSchemaChangedEventArgs)">
            <summary><see cref="E:Infragistics.Core.Controls.DataSource.BaseDataSource.SchemaChanged"/> イベントを呼び出します。</summary>
            <seealso cref="T:Infragistics.Core.Controls.DataSource.DataSourceSchemaChangedEventArgs"/>
            <seealso cref="E:Infragistics.Core.Controls.DataSource.BaseDataSource.SchemaChanged"/>
        </member>
        <member name="E:Infragistics.Core.Controls.DataSource.BaseDataSource.SchemaChanged">
            <summary>基本になるデータのスキーマが変更されたことを示します。スキーマが生成されたまでにデータ ソースの使用準備が完了されていません。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.LocalDataSource">
            <summary>そのデータ項目に同期アクセスがあるローカル データ ソース。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.LocalDataSource.#ctor">
            <summary>新しい <see cref="T:Infragistics.Core.Controls.DataSource.LocalDataSource"/> を初期化します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.LocalDataSource.ActualDataProvider">
            <summary>このデータ ソースが使用されている解決のデータ プロバイダーを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.LocalDataSource.DataProvider">
            <summary>このデータ ソースに使用するデータ プロバイダーを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.LocalDataSource.ItemsSource">
            <summary>データ ソースのバッキング データを取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.LocalDataSource.ResolveDataProvider">
            <summary>このデータ ソースのデフォルトのデータ プロバイダーを返します。</summary>
            <returns>このデータ ソースのデフォルトのデータ プロバイダーの新しいインスタンス。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.LocalDataSource.GetEnumerator">
            <summary>このデータ ソースの項目に移動するための列挙子を返します。</summary>
            <returns>データ ソースの項目に移動するための列挙子。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.VirtualDataSource">
            <summary>すべてのデータ項目への同期アクセスがない仮想データ ソース。結果として、初期化されていない項目のためにプレースホルダーを同期して返す可能性があります。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.VirtualDataSource.#ctor">
            <summary>新しい <see cref="T:Infragistics.Core.Controls.DataSource.VirtualDataSource"/> を初期化します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.VirtualDataSource.ActualDataProvider">
            <summary>このデータ ソースと使用されている実際のデータ プロバイダーを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.VirtualDataSource.ActualPageSize">
            <summary>使用される実際の解決されたページ サイズを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.VirtualDataSource.DataProvider">
            <summary>このデータ ソースと使用する仮想データ プロバイダーを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.VirtualDataSource.MaxCachedPages">
            <summary>一番古いページが破棄される前に、データ ソースにキャッシュするデータ ページの最大数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.VirtualDataSource.PageSizeRequested">
            <summary>要求されたページ サイズを取得または設定します。基本プロバイダーまたはその接続されるサービスで使用されていない可能性があります。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.VirtualDataSource.GetUnrealizedCount">
            <summary>読み込まれていない仮想項目数を取得します。</summary>
            <returns>読み込まれていない項目数。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.VirtualDataSource.ResolveDataProviderOverride">
            <summary>このデータ ソースのデフォルトのデータ プロバイダーを提供するためにオーバーライドされます。</summary>
            <returns>このデータ ソースのデフォルトのプロバイダーのインスタンス。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.VirtualDataSource.ResolveDataProvider">
            <summary>このデータ ソースのデフォルトのデータ プロバイダーを返します。</summary>
            <returns>このデータ ソースのデフォルトのプロバイダーのインスタンス。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.VirtualDataSource.ResetCache">
            <summary>この仮想データ ソースの内部キャッシュをリセットします。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.VirtualDataSource.ResetCacheOverride">
            <summary>この仮想データ ソースのキャッシュのクリアを実装するためにオーバーライドできます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.VirtualDataSource.GetEnumerator">
            <summary>このデータ ソースの項目に移動する可能な列挙子を返します。</summary>
            <returns>このデータ ソースの項目に移動する可能な列挙子。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceDataProviderWorkerSettings">
            <summary>非同期データ プロバイダー ワーカーの設定を提供します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceDataProviderWorkerSettings.PageSizeRequested">
            <summary>ワーカーの要求されたページ サイズを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceDataProviderWorkerSettings.TimeoutMilliseconds">
            <summary>ワーカー操作の要求されたタイムアウトを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceDataProviderWorkerSettings.PageLoaded">
            <summary>ページが読み込まれたときに発生するコールバックを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceDataProviderWorkerSettings.ExecutionContext">
            <summary>コールバックが起動する上の実行コンテキストを取得または設定します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderTaskDataHolder">
            <summary>非同期データ プロバイダー ワーカーの実行中タスクについてのデータを保存します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.AsyncDataSourcePageTaskHolder">
            <summary>非同期データ プロバイダー ワーカーの実行中タスクをカプセル化します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncDataSourcePageTaskHolder.Task">
            <summary>基になるプラットフォーム タスク オブジェクトを表します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.AsyncDataSourcePageRequest">
            <summary>非同期データ ソースのアクティブ ページ要求を表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncDataSourcePageRequest.#ctor(System.Int32,System.Int32)">
            <summary>AsyncDataSourcePageRequest を構築します。</summary>
            <param name="index">要求されたページのインデックス。</param>
            <param name="retryDelay">要求が失敗した場合に使用する現在の再試行遅延。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncDataSourcePageRequest.Index">
            <summary>要求するページのインデックスを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncDataSourcePageRequest.RetryDelay">
            <summary>要求が失敗した場合に使用する、現在の再試行遅延を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncDataSourcePageRequest.TaskHolder">
            <summary>ページの要求を表すカプセル化されたタスクを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncDataSourcePageRequest.IsDone">
            <summary>要求が完了したとみなされるかどうかを取得または設定します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker">
            <summary>非同期データ プロバイダー ワーカーの基本クラスとして操作します。データ ページの非同期要求をスケジュールし、確認するフレームワークを提供します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.#ctor(Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceDataProviderWorkerSettings)">
            <summary>AsyncVirtualDataSourceProviderWorker を構築します。</summary>
            <param name="settings">ワーカーに適用する設定。</param>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.MaxSimultaneousExecutingTasks">
            <summary>許可される同期実行タスクの最大数。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.MaxRetryDelay">
            <summary>タスクの失敗で再試行する最大遅延時間。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.InitialRetryDelay">
            <summary>タスクの失敗で再試行する最初遅延時間。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.SyncLock">
            <summary>状態へのアクセスをシリアル化するために使用する同期化ロック。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.Tasks">
            <summary>ワーカーの現在アクティブな要求セットを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.PageLoaded">
            <summary>ページ要求が読み込みを完了したときに呼び出すコールバックを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.ExecutionContext">
            <summary>読み込んだページのレポートで同期する実行コンテキストを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.ActualPageSize">
            <summary>データ プロバイダーのコンシューマーが使用する設定されたページ サイズを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.ActualCount">
            <summary>データ プロバイダーと関連するレコードの実際の現在数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.ActualSchema">
            <summary>プロバイダーの現在解決された IDataSourceSchema を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.PopulatedActualPageSize">
            <summary>ページ全体が表示されることに関係なく、ActualPageSize に値が設定され、保存されるかどうかを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.IsRunning">
            <summary>ワーカーが現在実行されているかどうかを取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.AddPageRequest(System.Int32,Infragistics.Core.Controls.DataSource.DataSourcePageRequestPriority)">
            <summary>ワーカーに新しいページ要求を追加します。</summary>
            <param name="pageIndex">要求するページのインデックス。</param>
            <param name="priority">要求に使用する優先レベル。</param>
            <returns>要求が追加されたかどうか。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.SignalChangesOcurred">
            <summary>アクティブな要求の処理を続行するために、ワーカーに直ちに通知する変更があることを示すために呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.AwaitChanges">
            <summary>変更するための時間制限のある待機を実行するためにワーカーによって呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.AddPageRequestWithRetry(System.Int32,Infragistics.Core.Controls.DataSource.DataSourcePageRequestPriority,System.Int32)">
            <summary>指定した再試行遅延時間を持つページ要求を追加します。</summary>
            <param name="pageIndex">要求するページのインデックス。</param>
            <param name="priority">要求の優先レベル。</param>
            <param name="retryDelay">要求の現在の再試行遅延時間。</param>
            <returns>要求が追加されたかどうか。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.RemovePageRequest(System.Int32)">
            <summary>指定したインデックスを持つページ要求をワーカーから削除します。</summary>
            <param name="pageIndex">ワーカーから削除するページ要求のインデックス。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.IsShutdown">
            <summary>ワーカーがシャットダウンされているかどうかを取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.RemoveAllPageRequests">
            <summary>すべての保留中またはアクティブなページ要求をワーカーから削除します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.Shutdown">
            <summary>ワーカーの操作をシャットダウンします。この状態に入るとワーカーは再利用できません。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.Initialize">
            <summary>ワーカーがワーク ループを開始する前に初期化しているときに呼び出されます。ワーク ループが開始される前に追加の初期化手順を追加するオーバーライド。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.GetTaskDataHolder">
            <summary>タスクの実装固有のデータ ホルダーを提供するオーバーライド。</summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.GetTasksData(Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderTaskDataHolder)">
            <summary>タスクの実装固有のデータを生成するオーバーライド。</summary>
            <param name="holder">実装固有のデータを生成する先のデータ ホルダー。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.RemoveCompletedTaskData(Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderTaskDataHolder,System.Int32)">
            <summary>完了したタスクの実装固有のデータが削除される方法を指定するオーバーライド。</summary>
            <param name="taskDataHolder">実装固有のデータのホルダー。</param>
            <param name="completed">完了したタスクのインデックス。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.GetCompletedTaskData(Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderTaskDataHolder,System.Int32)">
            <summary>指定した完了したタスクの実装固有のデータを生成します。</summary>
            <param name="taskDataHolder">データを保存するホルダー。</param>
            <param name="completed">完了したタスクのインデックス。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.CheckAndPotentiallyWaitOnTasks(Infragistics.Core.Controls.DataSource.AsyncDataSourcePageRequest[])">
            <summary>現在のタスクの状態を確認し、可能な場合はアクティブなタスクまたはワーカー設定に変更があるまで待ちます。</summary>
            <param name="currentTasks">現在のアクティブなタスク。</param>
            <returns>処理する完了したタスクのインデックス。処理するタスクがなく、タスクが完了するまで待機できないまたは必要ない場合、-1。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.DoWork">
            <summary>ワーカーのメイン ループ。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.MakeTaskForRequest(Infragistics.Core.Controls.DataSource.AsyncDataSourcePageRequest,System.Int32)">
            <summary>要求のためにタスクが構築される方法を指定するオーバーライド。</summary>
            <param name="request">タスクを構築する要求。</param>
            <param name="retryDelay">タスクに使用する再試行遅延時間。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.ProcessCompletedTask(Infragistics.Core.Controls.DataSource.AsyncDataSourcePageTaskHolder,System.Int32,System.Int32,Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderTaskDataHolder)">
            <summary>完了したタスクが処理される方法を指定するオーバーライド。ページが正しく読み込まれた場合、これは ExecutionContext と同期化して PageLoaded コールバックを呼び出す必要があります。</summary>
            <param name="task">完了したタスク。</param>
            <param name="retryDelay">タスクが失敗した場合に適用する現在の再試行遅延。</param>
            <param name="index">完了したタスクのインデックス。</param>
            <param name="taskDataHolder">実装固有のタスク データ。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.RetryIndex(System.Int32,System.Int32)">
            <summary>指定した遅延時間と要求を再試行します。</summary>
            <param name="pageIndex">要求するページのインデックス。</param>
            <param name="currentDelay">使用する再試行遅延時間。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.AsyncVirtualDataSourceProviderWorker.IsLastPage(System.Int32)">
            <summary>提供されたインデックスがデータの最後のページを表す場合、True を返します。</summary>
            <param name="pageIndex">チェックするインデックス。</param>
            <returns>インデックスが最後のページを表す場合、True。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.FilterFactory">
            <summary>グリッドおよびデータソースと使用するフィルターの作成を支援します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.FilterFactory.Instance">
            <summary>ファクトリのシングルトン インスタンス。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Build(Infragistics.Core.Controls.DataSource.DataSourceFilterBuilderBuildCallback)">
            <summary>コールバックで使用するファクトリを提供するコールバックを呼び出します。</summary>
            <param name="callback">起動するコールバック。</param>
            <returns>コールバックから返されるフィルター式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Property(System.String)">
            <summary>プロパティ アクセス式を作成します。</summary>
            <param name="propertyName">アクセスするプロパティ名。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Literal(System.Object)">
            <summary>リテラル値式を作成します。</summary>
            <param name="value">使用するリテラル値。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Group(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>グループ式を作成します。</summary>
            <param name="expression">グループに使用する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.And(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「And」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Or(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Or」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Not(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>式がある場合、「Not」式を作成します。</summary>
            <param name="expression">「Not」式の元の式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Add(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Add」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Divide(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Divide」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Equal(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Equal」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.GreaterThan(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Greater Than」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.GreaterThanOrEqual(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Greater Than Or Equal」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.LessThan(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Less Than」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.LessThanOrEqual(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Less Than Or Equal」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Modulus(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Modulus」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Multiply(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Multiply」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.NotEqual(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Not Equal」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Subtract(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>左式と右式がある場合、「Subtract」式を作成します。</summary>
            <param name="left">式の左側。</param>
            <param name="right">式の右側。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Ceiling(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>式がある場合、「Ceiling」式を作成します。</summary>
            <param name="expression">Ceiling に適用する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Concat(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Concat 式を作成します。</summary>
            <param name="expression">文字列に解決する式。</param>
            <param name="toAppend">最初の式に連結する文字列に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Concat(Infragistics.Core.Controls.DataSource.FilterExpression,System.String)">
            <summary>Concat 式を作成します。</summary>
            <param name="expression">文字列に解決する式。</param>
            <param name="toAppend">最初の式に連結する文字列。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Contains(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Contains 式を作成します。</summary>
            <param name="wholeString">文字列に解決する式。</param>
            <param name="subString">最初の式に検索する文字列に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Contains(Infragistics.Core.Controls.DataSource.FilterExpression,System.String)">
            <summary>Contains 式を作成します。</summary>
            <param name="wholeString">文字列に解決する式。</param>
            <param name="subString">最初の式に検索する文字列。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Day(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Day 式を作成します。</summary>
            <param name="expression">日を抽出するための日付に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.EndsWith(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>EndsWith 式を作成します。</summary>
            <param name="wholeString">文字列に解決する式。</param>
            <param name="subString">最初の式の終了に検索する文字列に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.EndsWith(Infragistics.Core.Controls.DataSource.FilterExpression,System.String)">
            <summary>EndsWith 式を作成します。</summary>
            <param name="wholeString">文字列に解決する式。</param>
            <param name="subString">最初の式の終了に検索する文字列。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Floor(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Floor 式を作成します。</summary>
            <param name="expression">Floor を計算する数に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Hour(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Hour 式を作成します。</summary>
            <param name="expression">Hour を計算する datetime に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.IndexOf(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>IndexOf 式を作成します。</summary>
            <param name="target">文字列に解決する式。</param>
            <param name="toFind">最初の式に検索する文字列に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.IndexOf(Infragistics.Core.Controls.DataSource.FilterExpression,System.String)">
            <summary>IndexOf 式を作成します。</summary>
            <param name="target">文字列に解決する式。</param>
            <param name="toFind">最初の式に検索する文字列。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Length(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Length 式を作成します。</summary>
            <param name="expression">長さを計算する文字列に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Minute(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Minute 式を作成します。</summary>
            <param name="expression">Minute を計算する datetime に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Month(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Month 式を作成します。</summary>
            <param name="expression">Month を計算する datetime に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Replace(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Replace 式を作成します。</summary>
            <param name="target">文字列に解決する式。</param>
            <param name="toFind">最初の式に検索する文字列に解決する式。</param>
            <param name="replacement">最初の式の toFind インスタンスを置き換える文字列に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Replace(Infragistics.Core.Controls.DataSource.FilterExpression,System.String,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Replace 式を作成します。</summary>
            <param name="target">文字列に解決する式。</param>
            <param name="toFind">最初の式に検索する文字列。</param>
            <param name="replacement">ターゲットの toFind インスタンスを置き換える文字列に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Replace(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression,System.String)">
            <summary>Replace 式を作成します。</summary>
            <param name="target">文字列に解決する式。</param>
            <param name="toFind">最初の式に検索する文字列に解決する式。</param>
            <param name="replacement">ターゲットの toFind インスタンスを置き換える文字列。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Replace(Infragistics.Core.Controls.DataSource.FilterExpression,System.String,System.String)">
            <summary>Replace 式を作成します。</summary>
            <param name="target">文字列に解決する式。</param>
            <param name="toFind">最初の式に検索する文字列。</param>
            <param name="replacement">ターゲットの toFind インスタンスを置き換える文字列。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Round(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Round 式を作成します。</summary>
            <param name="expression">丸みと付ける数値に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Second(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Second 式を作成します。</summary>
            <param name="expression">Second を計算する datetime に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.StartsWith(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>StartsWith 式を作成します。</summary>
            <param name="wholeString">文字列に解決する式。</param>
            <param name="subString">wholeString の開始に検索する文字列に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.StartsWith(Infragistics.Core.Controls.DataSource.FilterExpression,System.String)">
            <summary>StartsWith 式を作成します。</summary>
            <param name="wholeString">文字列に解決する式。</param>
            <param name="subString">wholeString の開始に検索する文字列。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Substring(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>StartsWith 式を作成します。</summary>
            <param name="wholeString">文字列に解決する式。</param>
            <param name="startIndex">部分文字列を開始する整数に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Substring(Infragistics.Core.Controls.DataSource.FilterExpression,System.Int32)">
            <summary>StartsWith 式を作成します。</summary>
            <param name="wholeString">文字列に解決する式。</param>
            <param name="startIndex">部分文字列を開始する整数。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Substring(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>StartsWith 式を作成します。</summary>
            <param name="expression">文字列に解決する式。</param>
            <param name="startIndex">部分文字列を開始する整数に解決する式。</param>
            <param name="length">部分文字列の長さを示す整数に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Substring(Infragistics.Core.Controls.DataSource.FilterExpression,System.Int32,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>StartsWith 式を作成します。</summary>
            <param name="expression">文字列に解決する式。</param>
            <param name="startIndex">部分文字列を開始する整数。</param>
            <param name="length">部分文字列の長さを示す整数に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Substring(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression,System.Int32)">
            <summary>StartsWith 式を作成します。</summary>
            <param name="expression">文字列に解決する式。</param>
            <param name="startIndex">部分文字列を開始する整数に解決する式。</param>
            <param name="length">部分文字列の長さを示す整数。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Substring(Infragistics.Core.Controls.DataSource.FilterExpression,System.Int32,System.Int32)">
            <summary>StartsWith 式を作成します。</summary>
            <param name="expression">文字列に解決する式。</param>
            <param name="startIndex">部分文字列を開始する整数。</param>
            <param name="length">部分文字列の長さを示す整数。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.ToLower(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>ToLower 式を作成します。</summary>
            <param name="expression">ToLower を計算する文字列に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.ToUpper(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>ToUpper 式を作成します。</summary>
            <param name="expression">ToUpper を計算する文字列に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Trim(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Trim 式を作成します。</summary>
            <param name="expression">Trim を計算する文字列に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Year(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Year 式を作成します。</summary>
            <param name="expression">Year を計算する datetime に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Date(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Date 式を作成します。</summary>
            <param name="expression">Date を計算する datetime に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Time(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>Time 式を作成します。</summary>
            <param name="expression">Time を計算する datetime に解決する式。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Now">
            <summary>現在の日時を返す Now 式を作成します。</summary>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.IsOf(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType)">
            <summary>IsOf 式を作成します。</summary>
            <param name="expression">IsOf を計算するオブジェクトに解決する式。</param>
            <param name="type">チェック先の型。</param>
            <returns>式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterFactory.Cast(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType)">
            <summary>Cast 式を作成します。</summary>
            <param name="expression">Cast を計算するオブジェクトに解決する式。</param>
            <param name="type">キャスト後のタイプ。</param>
            <returns>式。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DataSourceFilterBuilderBuildCallback">
            <summary>フィルター ビルダー ファクトリと操作するコールバック。</summary>
            <param name="b">フィルターの長さを短くなるための FilterFactory のインスタンス。</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.FilterExpression">
            <summary>グリッドおよびデータ ソースと使用するフィルター式を表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Operation(System.String,Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType,System.Object)">
            <summary>演算子フィルター式を作成します。</summary>
            <param name="propertyName">演算子に適用するプロパティ。</param>
            <param name="op">使用する演算子。</param>
            <param name="value">演算子のリテラル値。</param>
            <returns>演算の結果を表す式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Operation(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>演算子フィルター式を作成します。</summary>
            <param name="left">演算の左側。</param>
            <param name="op">使用する演算子。</param>
            <param name="right">演算の右側。</param>
            <returns>演算の結果を表す式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Operation(System.String,Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>演算子フィルター式を作成します。</summary>
            <param name="propertyName">演算子に適用するプロパティ。</param>
            <param name="op">使用する演算子。</param>
            <param name="right">演算の右側。</param>
            <returns>演算の結果を表す式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Operation(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType,System.Object)">
            <summary>演算子フィルター式を作成します。</summary>
            <param name="left">演算の左側。</param>
            <param name="op">使用する演算子。</param>
            <param name="value">演算子のリテラル値。</param>
            <returns>演算の結果を表す式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Function(Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType,Infragistics.Core.Controls.DataSource.FilterExpression[])">
            <summary>関数フィルター式を作成します。</summary>
            <param name="func">適用する関数タイプ。</param>
            <param name="args">関数の引数。</param>
            <returns>関数呼び出しの結果を表す式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.UpdateBooleanReturn">
            <summary>この式にブール値の返却型があるかどうかを決定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.ResolveHasBooleanReturn">
            <summary>現在の式にブール値の返却型があるかどうかを示すオーバーライド。</summary>
            <returns>式にブール値の返却型がある場合は True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Property(System.String)">
            <summary>提供されたプロパティのためのプロパティ アクセス式を作成します。</summary>
            <param name="propertyName">式を作成するためのプロパティ名。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.NullLiteral">
            <summary>null 値のリテラル式を作成します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Literal(System.Object)">
            <summary>提供された値のためのリテラル値式を作成します。</summary>
            <param name="literal">式を作成するためのリテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.UnquotedLiteral(System.String)">
            <summary>引用を使用しない提供された値のためのリテラル値式を作成します。</summary>
            <param name="literal">式を作成するためのリテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Match(System.Object,Infragistics.Core.Controls.DataSource.IDataSourceDataProvider,Infragistics.Core.Controls.DataSource.IDataSourceSchema)">
            <summary>データ プロバイダーおよびスキーマが提供された場合、項目がフィルター式と一致するかどうかを決定します。</summary>
            <param name="item">チェックする項目。</param>
            <param name="dataProvider">項目のデータ プロバイダー。</param>
            <param name="schema">項目のスキーマ。</param>
            <returns>項目がフィルターと一致する場合は True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Evaluate(System.Object,Infragistics.Core.Controls.DataSource.IDataSourceDataProvider,Infragistics.Core.Controls.DataSource.IDataSourceSchema)">
            <summary>データ プロバイダーおよびスキーマが提供された場合、提供された項目で式を評価します。</summary>
            <param name="item">評価する項目。</param>
            <param name="dataProvider">項目のデータ プロバイダー。</param>
            <param name="schema">項目のスキーマ。</param>
            <returns>結果の値。</returns>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.FilterExpression.IsPropertyReference">
            <summary>式がプロパティ参照かどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.FilterExpression.IsOperation">
            <summary>式が演算かどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.FilterExpression.IsFunction">
            <summary>式が関数かどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.FilterExpression.IsLiteral">
            <summary>式がリテラルかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.FilterExpression.IsNull">
            <summary>式が null 値かどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Group">
            <summary>現在の式のグループ式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.And(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「And」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Or(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「Or」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Not">
            <summary>現在の式の「Not」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Add(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「Add」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Add(System.Object)">
            <summary>現在の式およびリテラル値の「Add」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Plus(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「Add」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Plus(System.Object)">
            <summary>現在の式および literalValue の「Add」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Divide(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「Divide」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Divide(System.Object)">
            <summary>現在の式および literalValue の「Divide」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.DividedBy(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「Divide」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.DividedBy(System.Object)">
            <summary>現在の式および literalValue の「Divide」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsEqualTo(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「IsEqualTo」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsEqualTo(System.Object)">
            <summary>現在の式および右の式の「IsEqualTo」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsGreaterThan(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「IsGreaterThan」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsGreaterThan(System.Object)">
            <summary>現在の式および右の式の「IsGreaterThan」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsGreaterThanOrEqualTo(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「IsGreaterThanOrEqualTo」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsGreaterThanOrEqualTo(System.Object)">
            <summary>現在の式および右の式の「IsGreaterThanOrEqualTo」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsLessThan(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「IsLessThan」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsLessThan(System.Object)">
            <summary>現在の式および右の式の「IsGreaterThanOrEqualTo」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsLessThanOrEqualTo(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「IsLessThanOrEqualTo」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsLessThanOrEqualTo(System.Object)">
            <summary>現在の式および右の式の「IsGreaterThanOrEqualTo」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Modulo(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「Modulus」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Modulo(System.Object)">
            <summary>現在の式および右の式の「Modulus」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Multiply(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「Multiply」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Multiply(System.Object)">
            <summary>現在の式および右の式の「Multiply」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Times(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「Multiply」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Times(System.Object)">
            <summary>現在の式および右の式の「Multiply」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsNotEqualTo(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「IsNotEqualTo」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsNotEqualTo(System.Object)">
            <summary>現在の式および右の式の「IsNotEqualTo」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Subtract(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「Subtract」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Subtract(System.Object)">
            <summary>現在の式および右の式の「Subtract」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Minus(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および右の式の「Subtract」式である式を返します。</summary>
            <param name="right">右側式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Minus(System.Object)">
            <summary>現在の式および右の式の「Subtract」式である式を返します。</summary>
            <param name="literalValue">右側リテラル値。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Ceiling">
            <summary>現在の式の「Ceiling」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Concat(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および toAppend の「Concat」式である式を返します。</summary>
            <param name="toAppend">現在の式に追加する文字列に解決する式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Concat(System.String)">
            <summary>現在の式および subString の「Contains」式である式を返します。</summary>
            <param name="toAppend">現在の式に追加する文字列。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Contains(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および subString の「Contains」式である式を返します。</summary>
            <param name="subString">現在の式に検索する文字列に解決する式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Contains(System.String)">
            <summary>現在の式および subString の「Contains」式である式を返します。</summary>
            <param name="subString">現在の式に検索する文字列。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Day">
            <summary>現在の式の「Day」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.EndsWith(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および subString の「EndsWith」式である式を返します。</summary>
            <param name="subString">現在の式の終了に検索する文字列に解決する式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.EndsWith(System.String)">
            <summary>現在の式および subString の「EndsWith」式である式を返します。</summary>
            <param name="subString">現在の式の終了に検索する文字列。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Floor">
            <summary>現在の式の「Floor」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Hour">
            <summary>現在の式の「Hour」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IndexOf(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式および toFind の「IndexOf」式である式を返します。</summary>
            <param name="toFind">現在の式にそのインデックスを検索する文字列に解決する式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IndexOf(System.String)">
            <summary>現在の式および toFind の「IndexOf」式である式を返します。</summary>
            <param name="toFind">現在の式にそのインデックスを検索する文字列。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Length">
            <summary>現在の式の「Length」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Minute">
            <summary>現在の式の「Minute」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Month">
            <summary>現在の式の「Month」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Replace(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式の「Replace」式である式を返します。</summary>
            <param name="toFind">現在の式に検索する文字列に解決する式。</param>
            <param name="replacement">現在の式に置き換える文字列に解決する式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Replace(System.String,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式の「Replace」式である式を返します。</summary>
            <param name="toFind">現在の式に検索する文字列。</param>
            <param name="replacement">現在の式に置き換える文字列に解決する式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Replace(Infragistics.Core.Controls.DataSource.FilterExpression,System.String)">
            <summary>現在の式の「Replace」式である式を返します。</summary>
            <param name="toFind">現在の式に検索する文字列に解決する式。</param>
            <param name="replacement">現在の式に置き換える文字列。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Replace(System.String,System.String)">
            <summary>現在の式の「Replace」式である式を返します。</summary>
            <param name="toFind">現在の式に検索する文字列。</param>
            <param name="replacement">現在の式に置き換える文字列。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Round">
            <summary>現在の式の「Round」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Second">
            <summary>現在の式の「Second」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.StartsWith(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式の「StartsWith」式である式を返します。</summary>
            <param name="subString">現在の式の開始に検索する文字列に解決する式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.StartsWith(System.String)">
            <summary>現在の式の「StartsWith」式である式を返します。</summary>
            <param name="subString">現在の式の開始に検索する文字列。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Substring(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式の「Substring」式である式を返します。</summary>
            <param name="startIndex">部分文字列が開始する位置を示す整数に解決する式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Substring(System.Int32)">
            <summary>現在の式の「Substring」式である式を返します。</summary>
            <param name="startIndex">部分文字列が開始する位置を示す整数。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Substring(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式の「Substring」式である式を返します。</summary>
            <param name="startIndex">部分文字列が開始する位置を示す整数に解決する式。</param>
            <param name="length">部分文字列の長さを示す整数に解決する式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Substring(System.Int32,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>現在の式の「Substring」式である式を返します。</summary>
            <param name="startIndex">部分文字列が開始する位置を示す整数。</param>
            <param name="length">部分文字列の長さを示す整数に解決する式。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Substring(Infragistics.Core.Controls.DataSource.FilterExpression,System.Int32)">
            <summary>現在の式の「Substring」式である式を返します。</summary>
            <param name="startIndex">部分文字列が開始する位置を示す整数に解決する式。</param>
            <param name="length">部分文字列の長さを示す整数。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Substring(System.Int32,System.Int32)">
            <summary>現在の式の「Substring」式である式を返します。</summary>
            <param name="startIndex">部分文字列が開始する位置を示す整数。</param>
            <param name="length">部分文字列の長さを示す整数。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.ToLower">
            <summary>現在の式の「ToLower」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.ToUpper">
            <summary>現在の式の「ToUpper」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Trim">
            <summary>現在の式の「Trim」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Year">
            <summary>現在の式の「Year」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Date">
            <summary>現在の式の「Date」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Time">
            <summary>現在の式の「Time」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Now">
            <summary>「Now」式である式を返します。</summary>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsOf(Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType)">
            <summary>現在の式および propertyType の「IsOf」式である式を返します。</summary>
            <param name="propertyType">チェック先のプロパティ型。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Cast(Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType)">
            <summary>現在の式および propertyType の「Cast」式である式を返します。</summary>
            <param name="propertyType">キャスト先のプロパティ型。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.IsOf(System.String)">
            <summary>現在の式および propertyType の「IsOf」式である式を返します。</summary>
            <param name="objectType">チェック先のプロパティ型。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpression.Cast(System.String)">
            <summary>現在の式および propertyType の「Cast」式である式を返します。</summary>
            <param name="objectType">チェック先のプロパティ型。</param>
            <returns>結果の式。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.OperationFilterExpression">
            <summary>その他の式に適用されている演算子であるフィルター式を表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.OperationFilterExpression.#ctor">
            <summary>演算子式を構築します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.OperationFilterExpression.#ctor(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>演算子式を構築します。</summary>
            <param name="left">左側式。</param>
            <param name="op">使用する演算子。</param>
            <param name="right">右側式。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.OperationFilterExpression.#ctor(System.String,Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType,Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>演算子式を構築します。</summary>
            <param name="propertyName">アクセスするプロパティ。</param>
            <param name="op">使用する演算子。</param>
            <param name="right">右側式。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.OperationFilterExpression.#ctor(Infragistics.Core.Controls.DataSource.FilterExpression,Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType,System.Object)">
            <summary>演算子式を構築します。</summary>
            <param name="left">左側式。</param>
            <param name="op">使用する演算子。</param>
            <param name="value">右側のリテラル値。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.OperationFilterExpression.#ctor(System.String,Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType,System.Object)">
            <summary>演算子式を構築します。</summary>
            <param name="propertyName">アクセスするプロパティ。</param>
            <param name="op">使用する演算子。</param>
            <param name="value">右側のリテラル値。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.IsOperation">
            <summary>式が演算かどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.OperationFilterExpression.ResolveHasBooleanReturn">
            <summary>式にブール値の返却型がある場合は True を返します。</summary>
            <returns>式にブール値の返却型がある場合は True。</returns>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.IsComparisonOperation">
            <summary>演算が比較演算かどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.PropertyName">
            <summary>ある場合、演算に適用するプロパティ名を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.HasPropertyName">
            <summary>演算が直接にプロパティ名に適用するかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.Value">
            <summary>ある場合、演算と関連するリテラル値を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.HasValue">
            <summary>演算に右側があるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.Left">
            <summary>左側式を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.HasLeft">
            <summary>演算に左側があるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.Right">
            <summary>右側式を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.HasRight">
            <summary>式に右側があるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.Operator">
            <summary>式に使用する演算子を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.HasOperator">
            <summary>式に演算子が設定されているかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.OperationFilterExpression.IsBooleanOperation">
            <summary>式にブール値の返却型があるかどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.OperationFilterExpression.Evaluate(System.Object,Infragistics.Core.Controls.DataSource.IDataSourceDataProvider,Infragistics.Core.Controls.DataSource.IDataSourceSchema)">
            <summary>所定の項目の式を評価します。</summary>
            <param name="item">評価する項目。</param>
            <param name="dataProvider">項目のデータ プロバイダー。</param>
            <param name="schema">項目のスキーマ。</param>
            <returns>評価された値。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.FunctionFilterExpression">
            <summary>パラメーター式に適用されている関数であるフィルター式を表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FunctionFilterExpression.#ctor">
            <summary>関数式を構築します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FunctionFilterExpression.#ctor(Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType,Infragistics.Core.Controls.DataSource.FilterExpression[])">
            <summary>関数式を構築します。</summary>
            <param name="function">使用する関数タイプ。</param>
            <param name="args">使用する引数式。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.FunctionFilterExpression.IsFunction">
            <summary>式が関数式かどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FunctionFilterExpression.ResolveHasBooleanReturn">
            <summary>関数にブール値の返却型があるかどうかを取得します。</summary>
            <returns>関数にブール値の返却型がある場合は True。</returns>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.FunctionFilterExpression.FunctionType">
            <summary>関数の関数タイプを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.FunctionFilterExpression.IsBooleanFunction">
            <summary>関数にブール値の返却型があるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.FunctionFilterExpression.FunctionArguments">
            <summary>関数の引数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.FunctionFilterExpression.HasFunctionArguments">
            <summary>式に引数が指定されるかどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FunctionFilterExpression.Evaluate(System.Object,Infragistics.Core.Controls.DataSource.IDataSourceDataProvider,Infragistics.Core.Controls.DataSource.IDataSourceSchema)">
            <summary>項目の式を評価します。</summary>
            <param name="item">評価する項目。</param>
            <param name="dataProvider">項目のデータ プロバイダー。</param>
            <param name="schema">項目のスキーマ。</param>
            <returns>評価された値。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.PropertyReferenceFilterExpression">
            <summary>プロパティ アクセスであるフィルター式を表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.PropertyReferenceFilterExpression.#ctor">
            <summary>プロパティ参照式を構築します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.PropertyReferenceFilterExpression.#ctor(System.String)">
            <summary>プロパティ参照式を構築します。</summary>
            <param name="propertyReference"></param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.PropertyReferenceFilterExpression.IsPropertyReference">
            <summary>式がプロパティ参照かどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.PropertyReferenceFilterExpression.ResolveHasBooleanReturn">
            <summary>式にブール値の返却型があるかどうかを取得します。</summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.PropertyReferenceFilterExpression.Evaluate(System.Object,Infragistics.Core.Controls.DataSource.IDataSourceDataProvider,Infragistics.Core.Controls.DataSource.IDataSourceSchema)">
            <summary>所定の項目の式を評価します。</summary>
            <param name="item">評価する項目。</param>
            <param name="dataProvider">項目のデータ プロバイダー。</param>
            <param name="schema">項目のスキーマ。</param>
            <returns>評価された値。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.LiteralFilterExpression">
            <summary>リテラル値フィルター式を表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.LiteralFilterExpression.#ctor">
            <summary>リテラル値式を構築します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.LiteralFilterExpression.#ctor(System.Object)">
            <summary>リテラル値フィルター式を構築します。</summary>
            <param name="literalValue">使用する値。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.LiteralFilterExpression.#ctor(System.String,System.Boolean)">
            <summary>リテラル値フィルター式を構築します。</summary>
            <param name="stringLiteral">使用する文字列。</param>
            <param name="leaveUnquoted">文字列が引用なしのリテラルとして使用される場合は True。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.LiteralFilterExpression.IsLiteral">
            <summary>式がリテラル値かどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.LiteralFilterExpression.IsNull">
            <summary>式が null 値かどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.LiteralFilterExpression.LiteralValue">
            <summary>使用するリテラル値を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.LiteralFilterExpression.LeaveUnquoted">
            <summary>値に引用を使用しないかどうかを取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.LiteralFilterExpression.ResolveHasBooleanReturn">
            <summary>式にブール値の返却値があるかどうかを取得します。</summary>
            <returns>式にリテラルの返却値がある場合は True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.LiteralFilterExpression.Evaluate(System.Object,Infragistics.Core.Controls.DataSource.IDataSourceDataProvider,Infragistics.Core.Controls.DataSource.IDataSourceSchema)">
            <summary>提供された項目の式を評価します。</summary>
            <param name="item">評価する項目。</param>
            <param name="dataProvider">項目のデータ プロバイダー。</param>
            <param name="schema">項目に使用するスキーマ。</param>
            <returns>評価された値。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType">
            <summary>フィルター関数式の関数型を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Contains">
            <summary>文字列がその他の文字列を含むかどうかを決定します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.EndsWith">
            <summary>文字列がその他の文字列で終わるかどうかを決定します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.StartsWith">
            <summary>文字列がその他の文字列で始まるかどうかを決定します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Length">
            <summary>文字列の長さを取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.IndexOf">
            <summary>その他の文字列で文字列のインデックスを取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Replace">
            <summary>文字列内の文字列のインスタンスを別の文字列と置き換えます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Substring">
            <summary>開始インデックスおよびオプションに長さに基づいて文字列の部分文字列を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.ToLower">
            <summary>文字列の小文字表現を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.ToUpper">
            <summary>文字列の大文字表現を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Trim">
            <summary>文字列から開始空白および終了空白を解除します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Concat">
            <summary>文字列を連結します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Day">
            <summary>日時から日を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Hour">
            <summary>日時から時を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Minute">
            <summary>日時から分を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Month">
            <summary>日時から月を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Second">
            <summary>日時から秒を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Year">
            <summary>日時から年を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Round">
            <summary>数値を丸みを付けます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Floor">
            <summary>数値を繰り下げた整数値にします。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Ceiling">
            <summary>数値を繰り上げた整数値にします。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Date">
            <summary>日時から日付を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Time">
            <summary>日時から時間を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Now">
            <summary>現在の日付/時刻を取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.IsOf">
            <summary>値が特定の型と一致するかどうかを取得します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionFunctionType.Cast">
            <summary>指定した型に変換された値を取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType">
            <summary>演算子フィルター式の演算子型を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.None">
            <summary>演算子型が指定されていません。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.Equal">
            <summary>2 つの式が等しいかどうかを決定します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.NotEqual">
            <summary>2 つの式が等しくないかどうかを決定します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.GreaterThan">
            <summary>1 つの式が別の式より大きいかどうかを決定します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.GreaterThanOrEqual">
            <summary>1 つの式が別の式以上かどうかを決定します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.LessThan">
            <summary>1 つの式が別の式より小さいかどうかを決定します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.LessThanOrEqual">
            <summary>1 つの式が別の式以下かどうかを決定します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.And">
            <summary>2 つの式に And 演算子を適用します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.Or">
            <summary>2 つの式に Or 演算子を適用します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.Not">
            <summary>単一の式に Not 演算子を適用します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.Add">
            <summary>2 つの式を追加します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.Subtract">
            <summary>1 つの式を別の式から減算します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.Multiply">
            <summary>2 つの式をかけ算します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.Divide">
            <summary>1 つの式を別の式で除算します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.Modulo">
            <summary>1 つの式を別の式でモジューラスを実行します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.FilterExpressionOperatorType.Grouping">
            <summary>式をグループ化します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.FilterExpressionCollection">
            <summary>フィルター式のコレクションを表します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.FilterExpressionVisitor">
            <summary>フィルター式を処理のために移動します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpressionVisitor.Visit(Infragistics.Core.Controls.DataSource.FilterExpression)">
            <summary>式に移動します。</summary>
            <param name="expression">移動する式。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpressionVisitor.VisitOperationExpression(Infragistics.Core.Controls.DataSource.OperationFilterExpression)">
            <summary>演算子式に移動します。</summary>
            <param name="expression">移動する式。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpressionVisitor.VisitFunctionExpression(Infragistics.Core.Controls.DataSource.FunctionFilterExpression)">
            <summary>関数式に移動します。</summary>
            <param name="expression">移動する式。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpressionVisitor.VisitLiteralExpression(Infragistics.Core.Controls.DataSource.LiteralFilterExpression)">
            <summary>リテラル式に移動します。</summary>
            <param name="expression">移動する式。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.FilterExpressionVisitor.VisitPropertyReferenceExpression(Infragistics.Core.Controls.DataSource.PropertyReferenceFilterExpression)">
            <summary>プロパティ参照式に移動します。</summary>
            <param name="expression">移動する式。</param>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataSource">
            <summary>データに詳細なアクセスが必要なコンポーネントで使用するデータ ソースを表します。</summary>
        </member>
        <member name="E:Infragistics.Core.Controls.DataSource.IDataSource.SchemaChanged">
            <summary>データ ソースのスキーマが変更されたときを示します。生成されたスキーマがあるまでスキーマ ソースが無効です。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSource.IsPlaceholderItem(System.Int32)">
            <summary>要求されたインデックスにある項目がプレースホルダー項目で、実際項目になれなかった場合に True を返します。</summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSource.GetItemPropertyAtIndex(System.Int32,System.String)">
            <summary>指定したインデックスにある項目から名前付きのプロパティ値を展開します。</summary>
            <param name="index">プロパティ値を展開する項目のインデックス。</param>
            <param name="valueName">値を展開するプロパティ値。</param>
            <returns>指定したプロパティの値。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSource.GetItemProperty(System.Object,System.String)">
            <summary>データ ソースに含まれる項目の名前付きプロパティの値を展開します。</summary>
            <param name="item">プロパティ値を展開する項目。</param>
            <param name="propertyName">値を展開するプロパティの名前。</param>
            <returns>指定したプロパティの値。</returns>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.UpdateNotifier">
            <summary>さまざまな変更があったことを示すためにデータ ソースがメソッドを呼び出す DataSource 更新通知を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.ExecutionContext">
            <summary>データ ソースが非同期操作と同期するか、遅延された操作を遅延するために使用する実行コンテキストを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.ActualSchema">
            <summary>データ ソースの解決されたスキーマを取得します。項目で利用可能なプロパティを表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.FirstVisibleIndexRequested">
            <summary>現在の最初の表示可能なインデックスにするデータ ソースのインデックス コンシューマーを取得または設定します。たとえば、グリッドは現在表示可能な一番上の行を示し、変更に基づいて更新します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.LastVisibleIndexRequested">
            <summary>現在の最後の表示可能なインデックスになりたいデータ ソースのインデックス コンシューマーを取得または設定します。たとえば、グリッドは現在表示可能な一番上の行を示し、変更に基づいて更新します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.IsVirtual">
            <summary>現在のデータ ソースが仮想データ ソースかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.IsSortingSupported">
            <summary>データ ソースでの並べ替えがサポートされているかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.SortDescriptions">
            <summary>並べ替え説明に追加するコレクションを取得します。このコレクションで並べ替え説明を変更すると、データ ソースに適用される並べ替えを変更します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.IsFilteringSupported">
            <summary>データ ソースでフィルターがサポートされているかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.NotifyUsingSourceIndexes">
            <summary>データ ソースの変更を手動的に通知する場合、実際のソース データに対するインデックス、またはデータ ソースが保存されているビューに対するインデックスを使用するかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.FilterExpressions">
            <summary>フィルター式に追加するコレクションを取得します。このコレクションでフィルター式を変更すると、データ ソースに適用されるフィルターを変更します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSource.QueueAutoRefresh">
            <summary>データ ソースの更新操作を手動的にキューするために呼び出されます。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.DeferAutoRefresh">
            <summary>データ ソースの自動更新機能が遅延されているかどうかを取得または設定します。True に設定した場合、データ ソースはほとんどの設定変更に対応しません。代わりに処理を遅延します。この値を false に設定すると、新しい更新操作をキューします。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSource.FlushAutoRefresh">
            <summary>キューされたデータ ソースの更新が続行する前に適用されたことを確認するために呼び出されます。データ ソースで設定の変更結果を同期的に表示するときのみ必要です。注: 仮想データ ソースの場合、データ ソースがその他の同期要求のデータ実装を待っている場合があります。この呼び出しはその要求の完了を待ちません。適切な要求が設定変更から送信されていることのみを確認します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSource.Refresh">
            <summary>データ ソースを同期して更新するために呼び出されます。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.PrimaryKey">
            <summary>ユーザーがデータ ソースの項目のプライマリ キーを指定したことを示すプロパティ参照のリストを取得または設定します。データ ソースのコンシューマーは通常データ ソースの項目を一意的に識別する必要があります。この目的のためにプライマリ キーを指定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.ActualPrimaryKey">
            <summary>データソースの現在の実際のプライマリ キーを取得します。可能な場合、自動検出されます。それ以外の場合、ユーザーにより提供されるかオーバーライドされます。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.PropertiesRequested">
            <summary>データ ソースのコンシューマーが要求されたプロパティへのプロパティ参照のリストを取得または設定します。指定された場合、このデータ ソースの型のデフォルト動作の代わりに、データ ソースがそのプロパティのみを要求するか、そのプロパティが含まれることを確認します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSource.IndexOfItem(System.Object)">
            <summary>データ ソースに含まれている項目のインデックスを返すために呼び出されます。項目が見つからないか、この操作がサポートされていない場合は -1 を返します。</summary>
            <param name="item">インデックスを検索する項目。</param>
            <returns>インデックスまたは -1。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSource.IndexOfKey(System.Object[])">
            <summary>データ ソースに含まれているプライマリ キー値のインデックスを返すために呼び出されます。キーが見つからない、またはこの操作がサポートされていない場合は -1 を返します。</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.IsItemIndexLookupSupported">
            <summary>提供された項目のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSource.IsKeyIndexLookupSupported">
            <summary>提供されたプライマリ キー値のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataSourceSupportsCount">
            <summary>項目の実際数の示しをサポートするデータ ソース。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceSupportsCount.ActualCount">
            <summary>データソース内の項目の実際数を取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataSourceSupportsIndexedAccess">
            <summary>項目へのインデックス付きのアクセスをサポートするデータ ソース。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceSupportsIndexedAccess.GetItemAtIndex(System.Int32)">
            <summary>データ ソースに指定したインデックスにある項目を返します。このインデックスは、元のソースの基本インデックスではなく、データ ソースのデータの現在ビューに基づきます。</summary>
            <param name="index">要求された項目のインデックス。</param>
            <returns>要求されたインデックスにある項目。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.ISupportsDataChangeNotifications">
            <summary>インプリメンターは、データ コレクションへの変更の通知をサポートします。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ISupportsDataChangeNotifications.NotifySetItem(System.Int32,System.Object,System.Object)">
            <summary>項目が特定のインデックスに設定されるときに呼び出されます。</summary>
            <param name="index">変更のインデックス。</param>
            <param name="oldItem">インデックスにある以前の項目。</param>
            <param name="newItem">インデックスにある新しい項目。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ISupportsDataChangeNotifications.NotifyClearItems">
            <summary>項目の大数またはすべての項目が変更されたか、コレクションがクリアされたときに呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ISupportsDataChangeNotifications.NotifyInsertItem(System.Int32,System.Object)">
            <summary>項目が指定したインデックスに挿入されるときに呼び出されます。</summary>
            <param name="index">項目に挿入されたインデックス。</param>
            <param name="newItem">新しい項目。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ISupportsDataChangeNotifications.NotifyRemoveItem(System.Int32,System.Object)">
            <summary>項目が指定したインデックスから削除されるときに呼び出されます。</summary>
            <param name="index">項目から削除されたインデックス。</param>
            <param name="oldItem">削除される項目。</param>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DataSourceSchemaChangedHandler">
            <summary>データ ソース スキーマが変更されるときに呼び出されます。</summary>
            <param name="sender">スキーマが変更されているデータ ソース。</param>
            <param name="args">スキーマの変更に関する情報。</param>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DataSourceSchemaChangedEventArgs">
            <summary>発生されたスキーマ変更イベントに関する情報を提供します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceSchemaChangedEventArgs.#ctor(Infragistics.Core.Controls.DataSource.IDataSourceSchema,System.Int32)">
            <summary>DataSourceSchemaChangedEventArgs を構築します。</summary>
            <param name="schema">新しいスキーマ。</param>
            <param name="currentCount">新しい完全数。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceSchemaChangedEventArgs.Schema">
            <summary>提供されている新しいスキーマを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceSchemaChangedEventArgs.Count">
            <summary>データ プロバイダーの現在の項目総数を取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider">
            <summary>データ ソースのデータ プロバイダーを作成するために実装可能なインターフェイスを表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.GetItemValue(System.Object,System.String)">
            <summary>項目から名前によってプロパティ値を取得します。</summary>
            <param name="item">プロパティ値の取得ソースである項目。</param>
            <param name="valueName">値を取得するプロパティ名。</param>
            <returns>プロパティ値。</returns>
        </member>
        <member name="E:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.SchemaChanged">
            <summary>データ プロバイダーのスキーマが変更されたときを示します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.ActualSchema">
            <summary>データ プロバイダーの解決されたスキーマを取得します。項目で利用可能なプロパティを表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.ExecutionContext">
            <summary>データ プロバイダーが非同期操作と同期するか、遅延された操作を遅延するために使用する実行コンテキストを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.UpdateNotifier">
            <summary>さまざまな変更があったことを示すためにデータ プロバイダーがメソッドを呼び出す DataSource 更新通知を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.QueueAutoRefresh">
            <summary>データ プロバイダーの更新操作を手動的にキューするために呼び出されます。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.DeferAutoRefresh">
            <summary>データ プロバイダーの自動更新機能が遅延されているかどうかを取得または設定します。True に設定した場合、データ プロバイダーはほとんどの設定変更に対応しません。代わりに処理を遅延します。この値を false に設定すると、新しい更新操作をキューします。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.FlushAutoRefresh">
            <summary>キューされたデータ プロバイダーの更新が続行する前に適用されたことを確認するために呼び出されます。データ プロバイダーで設定の変更結果を同期的に表示するときのみに必要があります。注: 仮想データ プロバイダーの場合、データ プロバイダーがその他の同期要求のデータ実装を待っている可能性があります。この呼び出しはその要求の完了を待ちません。適切な要求が設定変更から送信されていることのみを確認します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.Refresh">
            <summary>データ プロバイダーを同期に更新するために呼び出されます。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.IsSortingSupported">
            <summary>データ プロバイダーでの並べ替えがサポートされているかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.SortDescriptions">
            <summary>並べ替え説明に追加するコレクションを取得します。このコレクションで並べ替え説明を変更すると、データ プロバイダーに適用される並べ替えを変更します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.IsFilteringSupported">
            <summary>データ プロバイダーでのフィルターがサポートされているかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.FilterExpressions">
            <summary>フィルター式に追加するコレクションを取得します。このコレクションでフィルター式を変更すると、データ プロバイダーに適用されるフィルターを変更します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.PropertiesRequested">
            <summary>データ プロバイダーのコンシューマーが要求されたプロパティへのプロパティ参照のリストを取得または設定します。指定された場合、このデータ プロバイダーの型のデフォルト動作の代わりに、データ プロバイダーがそのプロパティのみを要求するか、そのプロパティが含まれることを確認します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.NotifyUsingSourceIndexes">
            <summary>データ ソースの変更を手動的に通知する場合、実際のソース データに対するインデックス、またはデータ ソースが保存されているビューに対するインデックスを使用するかどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.IndexOfItem(System.Object)">
            <summary>データ ソースに含まれている項目のインデックスを返すために呼び出されます。項目が見つからないか、この操作がサポートされていない場合は -1 を返します。</summary>
            <param name="item">インデックスを検索する項目。</param>
            <returns>インデックスまたは -1。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.IndexOfKey(System.Object[])">
            <summary>データ ソースに含まれているプライマリ キー値のインデックスを返すために呼び出されます。キーが見つからない、またはこの操作がサポートされていない場合は -1 を返します。</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.IsItemIndexLookupSupported">
            <summary>提供された項目のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceDataProvider.IsKeyIndexLookupSupported">
            <summary>提供されたプライマリ キー値のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataSourceDataProviderUpdateNotifier">
            <summary>データ プロバイダーの更新イベントのターゲットとして操作するために実装できます。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DataSourceDataProviderSchemaChangedHandler">
            <summary>データ プロバイダーのスキーマが変更されたときに呼び出されます。</summary>
            <param name="sender">スキーマが変更されたデータ プロバイダー。</param>
            <param name="args">変更されたスキーマについての情報。</param>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DataSourceDataProviderSchemaChangedEventArgs">
            <summary>スキーマ変更イベントに関する情報を提供します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DataSourceDataProviderSchemaChangedEventArgs.#ctor(Infragistics.Core.Controls.DataSource.IDataSourceSchema,System.Int32)">
            <summary>DataSourceDataProviderSchemaChangedEventArgs を構築します。</summary>
            <param name="schema">新しいスキーマ。</param>
            <param name="currentCount">新しい完全数。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceDataProviderSchemaChangedEventArgs.Schema">
            <summary>データ プロバイダーの現在のスキーマを表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DataSourceDataProviderSchemaChangedEventArgs.Count">
            <summary>データ プロバイダーの現在の総数を表します。この情報がまだ利用できない場合は -1。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataSourceExecutionContext">
            <summary>DataSource および DataProvider と実行を同期するか、ロジックの実行を遅延するために使用する実行コンテキストを表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceExecutionContext.Execute(Infragistics.Core.Controls.DataSource.DataSourceExecutionContextExecuteCallback)">
            <summary>実行コンテキストで提供されたコールバックを実行します。</summary>
            <param name="callback">起動するコールバック。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceExecutionContext.EnqueueAction(Infragistics.Core.Controls.DataSource.DataSourceExecutionContextExecuteCallback)">
            <summary>実行コンテキストで一番早いタイミングで呼び出すアクションをキューに追加します。</summary>
            <param name="callback">起動するコールバック。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceExecutionContext.ExecuteDelayed(Infragistics.Core.Controls.DataSource.DataSourceExecutionContextExecuteCallback,System.Int32)">
            <summary>実行コンテキストで指定した遅延時間後に実行するアクションをキューに追加します。</summary>
            <param name="callback">起動するコールバック。</param>
            <param name="delayMilliseconds">ミリ秒の遅延時間。</param>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DataSourceExecutionContextExecuteCallback">
            <summary>実行コンテキストと同期化される操作を実行するコールバックを表します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataSourceLocalDataProvider">
            <summary>実際のデータ項目に同期アクセスがあるローカル データ プロバイダーを表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceLocalDataProvider.ItemsSource">
            <summary>プロバイダーのローカル データを取得または設定します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataSourcePage">
            <summary>データ ソースからのデータの単一のページを表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourcePage.Count">
            <summary>プロバイダーに含まれる項目数を取得します。</summary>
            <returns>プロバイダーに含まれる項目数。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourcePage.GetItemAtIndex(System.Int32)">
            <summary>指定したインデックスにある項目を取得します。</summary>
            <param name="index">取得する項目のインデックス。</param>
            <returns>要求された項目。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourcePage.GetItemValueAtIndex(System.Int32,System.String)">
            <summary>指定されたインデックスの項目からのプロパティ値を取得します。</summary>
            <param name="index">取得する項目のインデックス。</param>
            <param name="valueName">値を取得するプロパティ名。</param>
            <returns>要求された値。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourcePage.PageIndex">
            <summary>現在のページのインデックス。</summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourcePage.Schema">
            <summary>現在のページのスキーマ。</summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataSourceSchema">
            <summary>データ ソースの項目に利用可能なプロパティについての情報を表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceSchema.PrimaryKey">
            <summary>利用可能な場合、スキーマのプライマリ キーを表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceSchema.PropertyNames">
            <summary>スキーマに利用可能なプロパティ名を表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceSchema.PropertyTypes">
            <summary>スキーマのプロパティ名と一致するプロパティ型を表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceSchema.PropertyDataIntents">
            <summary>スキーマの各プロパティの一連の目的を説明する文字列配列の配列を取得します。目的が指定されていない場合は null を返します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType">
            <summary>データ ソース スキーマに利用可能なプロパティ型を列挙子します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.StringValue">
            <summary>プロパティは string 型です。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.IntValue">
            <summary>プロパティは integer 型です。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.BooleanValue">
            <summary>プロパティは boolean 型です。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.LongValue">
            <summary>プロパティは long 型です。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.ShortValue">
            <summary>プロパティは short 型です。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.DoubleValue">
            <summary>プロパティは double 型です。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.DecimalValue">
            <summary>プロパティは decimal 型です。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.SingleValue">
            <summary>プロパティは single 型です。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.DateTimeValue">
            <summary>プロパティは datetime 型です。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.DateTimeOffsetValue">
            <summary>プロパティは datetimeoffset 型です。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.ByteValue">
            <summary>プロパティは byte 型です。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType.ObjectValue">
            <summary>プロパティは object 型です。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DefaultDataSourceSchema">
            <summary>データ ソース スキーマのデフォルト実装。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DefaultDataSourceSchema.#ctor(System.String[],Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType[],System.String[],System.String[][])">
            <summary>DefaultDataSourceSchema を構築します。</summary>
            <param name="valueNames">プロパティの名。</param>
            <param name="valueTypes">名前付きプロパティの型。</param>
            <param name="primaryKey">スキーマのプライマリ キー。</param>
            <param name="propertyDataIntents">プロパティのデータ インテント。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DefaultDataSourceSchema.PrimaryKey">
            <summary>スキーマのプライマリ キーを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DefaultDataSourceSchema.PropertyNames">
            <summary>スキーマのプロパティの名前を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DefaultDataSourceSchema.PropertyTypes">
            <summary>プロパティのプロパティ型を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DefaultDataSourceSchema.PropertyDataIntents">
            <summary>スキーマの各プロパティの一連の目的を説明する文字列配列の配列を取得します。目的が指定されていない場合は null を返します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataSourceUpdateNotifier">
            <summary>データ ソースがコンシューマーに通知可能なイベントを表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceUpdateNotifier.RangeActualized(System.Int32,System.Int32)">
            <summary>データ ソースで以前に仮想プレースホルダーであった項目の範囲に本物の項目があるときに呼び出されます。</summary>
            <param name="startIndex">項目の範囲の開始インデックス。</param>
            <param name="endIndex">項目の範囲の終了インデックス。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceUpdateNotifier.NotifySetItem(System.Int32,System.Object,System.Object)">
            <summary>データ ソースで項目がその他の項目と置き換えたときに呼び出されます。</summary>
            <param name="index">項目が置き換えたインデックス。</param>
            <param name="oldItem">置換する以前の項目。</param>
            <param name="newItem">提供されている新しい項目。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceUpdateNotifier.NotifyClearItems">
            <summary>データ ソースで大きな変更があった、またはデータ ソースのコンテキストがクリアされたときに呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceUpdateNotifier.NotifyInsertItem(System.Int32,System.Object)">
            <summary>データ ソースで項目がインデックスに挿入されたときに呼び出されます。</summary>
            <param name="index">項目に挿入されたインデックス。</param>
            <param name="newItem">挿入した新しい項目。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceUpdateNotifier.NotifyRemoveItem(System.Int32,System.Object)">
            <summary>データ ソースで項目がインデックスから削除されたときに呼び出されます。</summary>
            <param name="index">項目が削除されたインデックス。</param>
            <param name="oldItem">削除された項目。</param>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IDataSourceVirtualDataProvider">
            <summary>データ ソースの仮想データ プロバイダーを表します。仮想データ プロバイダーはページ付きで、要求されたページを非同期に読み込みます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceVirtualDataProvider.AddPageRequest(System.Int32,Infragistics.Core.Controls.DataSource.DataSourcePageRequestPriority)">
            <summary>指定したページ インデックスおよび優先レベルのページ要求を追加します。</summary>
            <param name="pageIndex">要求するページのインデックス。</param>
            <param name="priority">要求の優先レベル。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceVirtualDataProvider.RemovePageRequest(System.Int32)">
            <summary>指定したページ インデックスのページ要求を削除します。</summary>
            <param name="pageIndex">要求を削除するページ インデックス。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceVirtualDataProvider.RemoveAllPageRequests">
            <summary>すべてのページ要求をデータ プロバイダーから削除します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IDataSourceVirtualDataProvider.Close">
            <summary>データ プロバイダーを閉じて、保留中操作を破棄します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceVirtualDataProvider.PageLoaded">
            <summary>ページが読み込まれたときに発生されるコールバックを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.IDataSourceVirtualDataProvider.PageSizeRequested">
            <summary>プロバイダーの要求されたページ サイズを取得または設定します。実際のページ サイズになるわけではありません。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DataSourcePageRequestPriority">
            <summary>ページ要求の優先レベルを示します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourcePageRequestPriority.Low">
            <summary>優先の低い要求を示します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourcePageRequestPriority.Normal">
            <summary>標準の優先度の要求を示します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.DataSourcePageRequestPriority.High">
            <summary>優先度の高い要求を示します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DataSourcePageLoadedCallback">
            <summary>ページが仮想データ ソースにより正常に読み込まれたときのコールバックを表します。</summary>
            <param name="page">読み込まれたページ。</param>
            <param name="currentFullCount">利用可能な場合、データの現在数。それ以外の場合は -1。</param>
            <param name="actualPageSize">要求されたページ サイズと異なる可能な解決されたページ サイズ。</param>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.ISectionInformation">
            <summary>データ ソースのセクションについての情報を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.ISectionInformation.StartIndex">
            <summary>セクションの開始インデックスを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.ISectionInformation.SectionKey">
            <summary>セクションのキーを取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DefaultSectionInformation">
            <summary>データ ソースのセクションについての情報を表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DefaultSectionInformation.#ctor(System.Int32,System.Object)">
            <summary>DefaultSectionInformation を構築します。</summary>
            <param name="startIndex">セクションの開始インデックス。</param>
            <param name="sectionKey">セクションのキー。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DefaultSectionInformation.StartIndex">
            <summary>セクションの開始インデックスを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.DefaultSectionInformation.SectionKey">
            <summary>セクションのキーを取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.IODataLiteralEmitter">
            <summary>OData リテラルを出力します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.IODataLiteralEmitter.EmitLiteral(System.Object,System.Boolean)">
            <summary>リテラル値を出力します。</summary>
            <param name="value">出力する値。</param>
            <param name="leaveUnquoted">文字列リテラルで引用を使用しないかどうか。</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.DefaultODataLiteralEmitter">
            <summary>OData リテラル出力のデフォルト実装。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.DefaultODataLiteralEmitter.EmitLiteral(System.Object,System.Boolean)">
            <summary>OData 書式設定付きのリテラルを出力します。</summary>
            <param name="value">出力する値。</param>
            <param name="leaveUnquoted">文字列の場合、値で引用を使用しないかどうか。</param>
            <returns>リテラル文字列。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.ODataDataSourceFilterExpressionVisitor">
            <summary>フィルター式に移動し、OData 式を出力します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ODataDataSourceFilterExpressionVisitor.#ctor">
            <summary>ODataDataSourceFilterExpressionVisitor を構築します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ODataDataSourceFilterExpressionVisitor.#ctor(Infragistics.Core.Controls.DataSource.IODataLiteralEmitter)">
            <summary>その他のリテラル出力を提供する ODataDataSourceFilterExpressionVisitor を構築します。</summary>
            <param name="literalEmitter">使用するその他のリテラル出力。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ODataDataSourceFilterExpressionVisitor.ToString">
            <summary>使用する結果の文字列を取得します。</summary>
            <returns>使用する文字列。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ODataDataSourceFilterExpressionVisitor.VisitOperationExpression(Infragistics.Core.Controls.DataSource.OperationFilterExpression)">
            <summary>演算式に移動します。</summary>
            <param name="expression">移動する演算式。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ODataDataSourceFilterExpressionVisitor.VisitFunctionExpression(Infragistics.Core.Controls.DataSource.FunctionFilterExpression)">
            <summary>関数式に移動します。</summary>
            <param name="expression">移動する関数式。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ODataDataSourceFilterExpressionVisitor.VisitLiteralExpression(Infragistics.Core.Controls.DataSource.LiteralFilterExpression)">
            <summary>リテラル式に移動します。</summary>
            <param name="expression">移動するリテラル式。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ODataDataSourceFilterExpressionVisitor.VisitPropertyReferenceExpression(Infragistics.Core.Controls.DataSource.PropertyReferenceFilterExpression)">
            <summary>プロパティ参照式に移動します。</summary>
            <param name="expression">移動する式。</param>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.ODataDataSourceSchema">
            <summary>仮想データ ソースのページ内の項目のスキーマを表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ODataDataSourceSchema.#ctor(System.String[],Infragistics.Core.Controls.DataSource.DataSourceSchemaPropertyType[],System.String[])">
            <summary>ODataDataSourceSchema を構築します。</summary>
            <param name="valueNames">プロパティの名。</param>
            <param name="valueTypes">プロパティのタイプ。</param>
            <param name="primaryKey">利用可能な場合、プライマリ キー。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.ODataDataSourceSchema.PropertyNames">
            <summary>項目に含まれる値の名前を返します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.ODataDataSourceSchema.PrimaryKey">
            <summary>項目のプライマリ キーまたは結合プライマリ キーを表す値の名前をコンマにより分割される文字列として返します。プライマリ キーが定義されていない場合、null または空値が可能です。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.ODataDataSourceSchema.PropertyTypes">
            <summary>項目に含まれる値のデータ型を返します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.ODataDataSourceSchema.PropertyDataIntents">
            <summary>スキーマの各プロパティの一連の目的を説明する文字列配列の配列を取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.ODataSchemaProvider">
            <summary>スキーマのために OData データ ソースに要求します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ODataSchemaProvider.#ctor(System.String)">
            <summary>ODataSchemaProvider を構築します。</summary>
            <param name="metadataDocument">OData データ ソースの odata メタデータ ドキュメント。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.ODataSchemaProvider.GetODataDataSourceSchema(System.String)">
            <summary>提供されたエンティティ セットのデータ ソース スキーマを取得します。</summary>
            <param name="entitySet">スキーマを取得するエンティティ セット。</param>
            <returns>結果のスキーマ。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.ListSortDirection">
            <summary>リストの可能な並べ替え方向をエミュレートします。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.ListSortDirection.Ascending">
            <summary>昇順並べ替えを要求します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.DataSource.ListSortDirection.Descending">
            <summary>降順並べ替えを要求します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.SortDescription">
            <summary>データ ソースまたはプロバイダーに適用される現在の並べ替えの要素を表します。このオブジェクトへの変更は監視されず、最初にコレクションに割り当てられた後は予期されません。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.SortDescription.#ctor(System.String)">
            <summary>SortDescription を構築します。</summary>
            <param name="propertyName">並べ替えるプロパティ。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.SortDescription.#ctor(System.String,Infragistics.Core.Controls.DataSource.ListSortDirection)">
            <summary>SortDescription を構築します。</summary>
            <param name="propertyName">並べ替えるプロパティ。</param>
            <param name="direction">並べ替えの方向。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.SortDescription.PropertyName">
            <summary>並べ替えられているプロパティを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataSource.SortDescription.Direction">
            <summary>プロパティに基づいた並べ替え方向を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.SortDescription.Equals(System.Object)">
            <summary>SortDescription が別の SortDescription に等しいかどうかを返します。</summary>
            <param name="other">比較する SortDescription。</param>
            <returns>SortDescription インスタンスが等しい場合は True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.DataSource.SortDescription.GetHashCode">
            <summary>SortDescription のハッシュ コードを返します。</summary>
            <returns>SortDescription のハッシュ コード。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.DataSource.SortDescriptionCollection">
            <summary>データ ソースまたはプロバイダーに適用される並べ替え要素のコレクションを表します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataAdapters.DataSeriesMemberIntentAttribute">
            <summary>データ シリーズのアダプターに特定のプロパティの目的を識別するために使用される属性。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataAdapters.DataSeriesMemberIntentAttribute.#ctor(Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent)">
            <summary>DataSeriesMemberIntentAttribute コンストラクター。</summary>
            <param name="memberIntent">データ シリーズのアダプターがコンテキストでプロパティを使用する方法。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataAdapters.DataSeriesMemberIntentAttribute.MemberIntent">
            <summary>データ シリーズのアダプターがコンテキストでプロパティを使用する方法。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.DataAdapters.DataSeriesTitleAttribute">
            <summary>データ ソースから作成されているシリーズのタイトルを識別するために使用される属性。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.DataAdapters.DataSeriesTitleAttribute.#ctor(System.String)">
            <summary>DataSeriesTitleAttribute コンストラクター。</summary>
            <param name="title"></param>
        </member>
        <member name="P:Infragistics.Core.Controls.DataAdapters.DataSeriesTitleAttribute.MemberIntent">
            <summary>データ シリーズのアダプターがコンテキストでプロパティを使用する方法。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.DataAdapters.DataSeriesTitleAttribute.Title">
            <summary>シリーズ タイトル。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.ILegendSeries">
            <summary>凡例で表示可能なシリーズ。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.ILegendSeries.Container">
            <summary>所有の凡例。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.ILegendSeries.ResolveLegendIndex">
            <summary>凡例で使用するインデックスを返します。</summary>
            <returns>使用するインデックス。</returns>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.ILegendSeries.IsStacked">
            <summary>凡例項目が積層項目かどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.ILegendSeries.IsVertical">
            <summary>凡例項目が垂直項目かどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.ILegendSeries.IsUsableInLegend">
            <summary>項目が凡例で使用可能かどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.ILegendSeries.Name">
            <summary>項目の名前を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.ILegendSeries.HasSubItems">
            <summary>項目にサブ項目があるかどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.ILegendSeries.ForSubItems(System.Action{System.Object})">
            <summary>項目のサブ項目のためにアクションを実行します。</summary>
            <param name="action">実行するアクション 。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.ILegendSeries.HasMarkers">
            <summary>項目にマーカーがあるかどうかを取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.ILegendOwner">
            <summary>凡例の所有者。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.ILegendOwner.Name">
            <summary>凡例所有者の名前を取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.IChartLegend">
            <summary>チャートで使用する凡例。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.IChartLegend.SeriesOwner">
            <summary>凡例を所有するシリーズを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.IChartLegend.ChartOwner">
            <summary>凡例を所有するチャートを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.IChartLegend.ContainsChild(System.Object)">
            <summary>提供された子が凡例にあるかどうかを返します。</summary>
            <param name="child">チェックする子。</param>
            <returns>子が凡例にある場合は True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.IChartLegend.RemoveChild(System.Object)">
            <summary>凡例から子を削除します。</summary>
            <param name="child">削除する子要素</param>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.IChartLegend.AddChildInOrder(System.Object,Infragistics.Core.Controls.Charts.ILegendSeries)">
            <summary>この凡例へ子項目を順番に追加します。</summary>
            <param name="legendItem">凡例項目。</param>
            <param name="series">所有するシリーズ。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.IChartLegend.ClearLegendItemsForSeries(Infragistics.Core.Controls.Charts.ILegendSeries)">
            <summary>特定のシリーズの凡例から項目をすべてクリアします。</summary>
            <param name="series">凡例項目をクリアするシリーズ。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.IChartLegend.IsItemwise">
            <summary>凡例が項目どおりかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.IChartLegend.IsScale">
            <summary>凡例がスケール凡例かどうかを取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.IDataSeriesAdapterRule">
            <summary>提供されたデータに合わせるデータシリーズを決定するルールを表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.IDataSeriesAdapterRule.Evaluate(Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext)">
            <summary>提供されたコンテキストに基づいてルールを評価します。</summary>
            <param name="context">評価のコンテキスト。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.IDataSeriesAdapterRule.Priority">
            <summary>複数のルールがデータのアスペクトと一致する場合、現在のルールの同順位を解決する優先度を取得します。より高い値が勝ちます。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext">
            <summary>データ アダプターのルール評価のコンテキストを表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.Analyzer">
            <summary>コンテキスト内のアナライザー。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.GetSubProvider(System.Object,System.String)">
            <summary>現在のデータ プロバイダーからサブ データ プロバイダーを取得し、現在のデータ プロバイダーとしてプッシュします。</summary>
            <param name="itemsSource">プロバイダーを取得するためのデータ。</param>
            <param name="path">現在のプロバイダーから新しいプロバイダーへのパス。</param>
            <returns>要求されたデータ プロバイダー。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.PopSubProvider">
            <summary>現在のデータ プロバイダーをプロバイダー スタックからポップします。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.RecurseRules(System.Object,System.String,System.Boolean)">
            <summary>サブ データ ソースおよびパスのために現在のルールを繰り返します。</summary>
            <param name="subDataSource">ルールを繰り返すためのサブ データ ソース。</param>
            <param name="subPath">現在のデータ ソースからサブ データ ソースへのパス。</param>
            <param name="listenForSubPathChanges">パスでの変更がデータ プロバイダーを再評価になる場合は True。</param>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.IncludedProperties">
            <summary>指定した場合、除外されていない指定したプロパティのみを評価で使用されます。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.ExcludedProperties">
            <summary>指定した場合、指定したプロパティは評価から除外されます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.GetCurrentDataSource">
            <summary>現在のデータ プロバイダーをプロバイダー スタックから取得します。</summary>
            <returns>現在のデータ プロバイダー。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.PushDataSource(Infragistics.Core.Controls.DataSource.IDataSourceLocalDataProvider)">
            <summary>データ プロバイダーをプロバイダー スタックにプッシュします。</summary>
            <param name="dataSource">スタックにプッシュするプロバイダー。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.PopDataSource">
            <summary>データ プロバイダーをプロバイダー スタックからポップします。</summary>
            <returns>ポップされたプロバイダー。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.GetCurrentPathSegment">
            <summary>現在のパス セグメントを取得します。</summary>
            <returns>現在のパス セグメントのみ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.GetCurrentPath">
            <summary>現在のデータ プロバイダーへのフル パスを取得します。</summary>
            <returns>プロバイダーへのパス。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.GetParentTitle">
            <summary>親で解決されたタイトルを取得します。</summary>
            <returns>タイトルの値。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.PushPath(System.String)">
            <summary>パスを現在のデータ パスにプッシュします。</summary>
            <param name="path">プッシュするパス値。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.PopPath">
            <summary>パスを現在のデータ パスからポップします。</summary>
            <returns>ポップされたパス セグメント。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.PushParentTitle(System.String)">
            <summary>親タイトルを現在のコンテキストにプッシュします。</summary>
            <param name="parentTitle">現在のタイトル値。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.PopParentTitle">
            <summary>親タイトルを現在のコンテキストからポップします。</summary>
            <returns>ポップしたタイトル。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.AddDataSeries(Infragistics.Core.Controls.Charts.DataAdapters.DataSeries,Infragistics.Core.Controls.Charts.DataAdapters.IDataSeriesAdapterRule)">
            <summary>解決されたデータ シリーズを評価に追加します。</summary>
            <param name="dataSeries">追加するデータ シリーズ。</param>
            <param name="rule">データ シリーズを生成したルール。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.RemoveDataSeries(Infragistics.Core.Controls.Charts.DataAdapters.DataSeries)">
            <summary>解決されたデータ シリーズを評価から削除します。</summary>
            <param name="dataSeries"></param>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.InsertDataSeries(System.Int32,Infragistics.Core.Controls.Charts.DataAdapters.DataSeries,Infragistics.Core.Controls.Charts.DataAdapters.IDataSeriesAdapterRule)">
            <summary>解決されたデータ シリーズを評価の指定した位置に挿入します。</summary>
            <param name="index">シリーズを挿入するインデックス。</param>
            <param name="dataSeries">挿入するデータ シリーズ。</param>
            <param name="rule">データ シリーズを生成したルール。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.ClearDataSeries">
            <summary>解決されたデータ シリーズを評価からクリアします。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.GetDataSeriesCount">
            <summary>評価で現在の解決されたデータ シリーズの数を取得します。</summary>
            <returns>データ シリーズの数。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext.GetDataSeriesAt(System.Int32)">
            <summary>評価の指定したインデックスにデータ シリーズを取得します。</summary>
            <param name="index">取得するデータ シリーズのインデックス。</param>
            <returns>取得されたデータ シリーズ。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer">
            <summary>データ アダプター評価を解析することを手伝いするユーティリティ クラス。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.IncludedProperties">
            <summary>指定した場合、除外されていない指定したプロパティのみを評価で使用されます。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.ExcludedProperties">
            <summary>指定した場合、指定したプロパティは評価から除外されます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetParentTitle">
            <summary>タイトルを解決するときに現在の親タイトルを取得します。</summary>
            <returns>解決された現在の親タイトル。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.ShouldIncludeProperty(System.String,System.String)">
            <summary>プロパティが評価に含まれる場合は True を返します。</summary>
            <param name="property">確認するプロパティ。</param>
            <param name="path">プロパティの所有者へのパス。</param>
            <returns>プロパティを含む場合は True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.ExpandCamelCasedWords(System.String)">
            <summary>キャメル ケースで文字列をスペースによって分割される単語に展開します。</summary>
            <param name="value">展開する文字列。</param>
            <returns>展開された文字列。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.HasStringProperties">
            <summary>現在のデータに文字列型のプロパティがある場合に True を返します。</summary>
            <returns>現在のデータに文字列型のプロパティがある場合に True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetAllStringProperties">
            <summary>現在のデータのすべての文字列型のプロパティを返します。</summary>
            <returns>現在のデータのすべての文字列型のプロパティの配列。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.IsCollection(System.Object)">
            <summary>提供されたデータがコレクションである場合、True を返します。</summary>
            <param name="item">確認するデータ。</param>
            <returns>提供されたデータがコレクションである場合は True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetAllPropertiesWithName(System.String)">
            <summary>現在のデータで指定した名前と一致するプロパティをすべて取得します。</summary>
            <param name="name">検索する名前。</param>
            <returns>名前と一致するすべてのプロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetAllNumericProperties">
            <summary>現在のデータから数値型のすべてのプロパティを取得します。</summary>
            <returns>現在のデータから数値型のすべてのプロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetAllObjectProperties">
            <summary>現在のデータのすべてのプリミティブ型以外のプロパティを取得します。</summary>
            <returns>すべてのプリミティブ型以外のプロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetAllCollectionProperties">
            <summary>現在のデータのすべてのコレクション型のプロパティを取得します。</summary>
            <returns>現在のデータのすべてのコレクション型のプロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetFirstNumericProperty">
            <summary>現在のデータの最初の数値型のプロパティを返します。</summary>
            <returns>最初の数値型のプロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.HasNumericProperties">
            <summary>現在のデータに数値型のプロパティがある場合に True を返します。</summary>
            <returns>現在のデータに数値型のプロパティを含む場合に True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetPropertyType(System.String)">
            <summary>指定したプロパティのプロパティ型を取得します。</summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetAllPropertiesWithIntent(System.String)">
            <summary>提供したインテントと一致するすべてのプロパティを返します。</summary>
            <param name="intent">一致するインテントの名前。</param>
            <returns>提供したインテントと一致するすべてのプロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetAllPropertiesWithValuelessIntent(System.String)">
            <summary>値が指定されていない場合、提供されたインテントと一致するプロパティをすべて返します。</summary>
            <param name="intent">一致するインテントの名前。</param>
            <returns>提供したインテントと一致するすべてのプロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetPropertyIntentValue(System.String,System.String)">
            <summary>プロパティの値持ちデータ インテントの値を返します。</summary>
            <param name="intent">検索する値持ちインテント。</param>
            <param name="property">インテントを検索するプロパティ。</param>
            <returns>インテント値。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetAllPropertiesWithValuedIntent(System.String)">
            <summary>値が指定されている場合、提供されたインテントと一致するプロパティをすべて返します。</summary>
            <param name="intent">一致するインテントの名前。</param>
            <returns>提供したインテントと一致するすべてのプロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetAllDateTimeProperties">
            <summary>現在のデータの日時型のプロパティをすべて返します。</summary>
            <returns>現在のデータの日時型のすべてのプロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetFirstDateTimeProperty">
            <summary>現在のデータから日時型の最初のプロパティを返します。</summary>
            <returns>現在のデータから日時型の最初のプロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetFirstStringProperty">
            <summary>現在のデータから文字列型の最初のプロパティを返します。</summary>
            <returns>現在のデータから文字列型の最初のプロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.HasDateTimeProperties">
            <summary>現在のデータで日時プロパティがある場合は True を返します。</summary>
            <returns>現在のデータで日時プロパティがある場合は True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.IsMonotonic(Infragistics.Core.Controls.DataSource.IDataSourceLocalDataProvider,System.String,System.Int32)">
            <summary>提供されたプロパティが確認する項目の指定した量で一貫的に増減する場合は True を返します。</summary>
            <param name="provider">確認するデータ。</param>
            <param name="property">確認するプロパティ。</param>
            <param name="monotonicCheckAmount">確認する項目の数。</param>
            <returns>値が一貫的に増減する場合は True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetFirstDistinctStringProperty(System.Int32)">
            <summary>確認量で一意の値を持つ最初の文字列プロパティを取得します。</summary>
            <param name="distinctCheckThreshold">一意性のために確認する項目の数。</param>
            <returns>一意の値を持つ最初の文字列プロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetFirstDistinctNumericProperty(System.Int32)">
            <summary>確認量で一意の値を持つ最初の数値プロパティを取得します。</summary>
            <param name="distinctCheckThreshold">一意性のために確認する項目の数。</param>
            <returns>一意の値を持つ最初の数値プロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetFirstDistinctMonotonicNumericProperty(System.Int32)">
            <summary>指定された確認量で一貫的に増減する一意の値を持つ最初の数値プロパティを取得します。</summary>
            <param name="distinctCheckThreshold">一意性のために確認する項目の数。</param>
            <returns>一貫的に増減する一意の値を持つ最初の数値プロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetFirstDistinctDateTimeProperty(System.Int32)">
            <summary>確認量で一意の値を持つ最初の日時プロパティを取得します。</summary>
            <param name="distinctCheckThreshold">一意性のために確認する項目の数。</param>
            <returns>一意の値を持つ最初の日時プロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetFirstStringPropertyPreferringDistinct(System.Int32)">
            <summary>確認量で一意の値を持つ最初の文字列プロパティを取得します。ない場合、最初の文字列プロパティ。</summary>
            <param name="distinctCheckThreshold">一意性のために確認する項目の数。</param>
            <returns>一意の値を持つ最初の文字列プロパティがない場合、最初の文字列プロパティ。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetTitleString(System.Object,System.String[])">
            <summary>指定した項目で使用する適切な解決されたタイトルを取得します。</summary>
            <param name="specificItem">タイトルを解決する項目。親タイトルを使用する場合は null。</param>
            <param name="specificProperties">タイトルを確認する特定のプロパティ。一般的なタイトルが要求される場合は null。</param>
            <returns>解決されたタイトル</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesDataProviderAnalyzer.GetNonNullPropertyValue(System.String)">
            <summary>要求されたプロパティの null 以外の値を返します。</summary>
            <param name="propertyName">値を取得するプロパティ。</param>
            <returns>取得された値。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries">
            <summary>データ シリーズ アダプターからの解決されたデータ シリーズを表します。自動的にデータ ビジュアライゼーションを生成するために使用できます。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.#ctor">
            <summary>DataSeries を構築します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.Name">
            <summary>このデータ シリーズに使用する推薦の名前を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.Title">
            <summary>このデータ シリーズに使用する推薦のタイトルを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.Data">
            <summary>このデータ シリーズに使用する推薦のデータを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.Priority">
            <summary>データ シリーズに使用する優先を取得または設定します。複数のルールが同じプロパティで別のデータ シリーズを推測する場合、優先度は引き分けを解決します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.SuggestedPrimaryAxis">
            <summary>このデータ シリーズに推奨されるプライマリ軸型を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.SuggestedSecondaryAxis">
            <summary>このデータ シリーズに推奨される第 2 の軸型を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.SuggestedSeries">
            <summary>このデータ シリーズに推奨されるデータ ビジュアライゼーション シリーズ型を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.DataPath">
            <summary>このデータ シリーズに推奨されるデータへのパスを取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.AddMemberPathHint(Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesMemberPathHint)">
            <summary>現在のデータ シリーズにメンバー パス ヒントを追加します。これは、使用のためにデータのサブ要素を文章校正的に識別します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.RemoveMemberPathHint(Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesMemberPathHint)">
            <summary>現在のデータ シリーズからメンバー パス ヒントを削除します。</summary>
            <param name="hint"></param>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.ClearMemberPathHints">
            <summary>現在のデータ シリーズからメンバー パス ヒントをすべてクリアします。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.GetMemberPathHintCount">
            <summary>現在のデータ シリーズのメンバー パス ヒントの数を取得します。</summary>
            <returns>現在のデータ シリーズのメンバー パス ヒントの数。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.GetMemberPathHintAt(System.Int32)">
            <summary>指定したインデックスにあるメンバー パス ヒントを取得します。</summary>
            <param name="index">ヒントを取得するインデックス。</param>
            <returns>要求されたヒント。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.FindMatchingHint(Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent)">
            <summary>指定した文章校正インテントと一致するメンバー パス ヒントを検索します。</summary>
            <param name="intent">メンバー パス ヒントを検索するためのインテント。</param>
            <returns>一致するヒント。ヒントが一致されていない場合は null。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeries.Equals(System.Object)">
            <summary>1 つの DataSeriesInfo が別の DataSeriesInfo と等しいかどうかを決定します。</summary>
            <param name="obj">その他の DataSeriesInfo。</param>
            <returns>DataSeriesInfo インスタンスが等しい場合は True。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesMemberPathHint">
            <summary>データ シリーズのデータのどんなサブ要素がどんな文章校正インテントにマップすることについてのヒントを表します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesMemberPathHint.Path">
            <summary>親データからデータへのパス。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesMemberPathHint.Intent">
            <summary>サブ データのインテント。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesMemberPathHint.Equals(System.Object)">
            <summary>このヒントがその他の指定したヒントと等しい場合は True を返します。</summary>
            <param name="obj">確認するその他のヒント。</param>
            <returns>ヒントがその他のヒントと等しい場合は True。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesMemberPathHint.ToString">
            <summary>ヒントの文字列表現を返します。</summary>
            <returns>ヒントの文字列表現。</returns>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesMemberPathHint.Update(System.String,System.String)">
            <summary>現在のヒントのプロパティ名を更新します。</summary>
            <param name="propName">ヒントのプロパティ名。</param>
            <param name="propFormat">プロパティ名の書式設定に使用する書式文字列。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesMemberPathHint.HasPath">
            <summary>パスがヒントのために指定された場合は True を返します。</summary>
            <returns>パスがヒントのために指定された場合は True。</returns>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent">
            <summary>データ シリーズにバインドされているデータのサブ プロパティの意味を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.PrimarySeriesValue">
            <summary>シリーズで使用するプライマリ値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.SeriesX">
            <summary>シリーズで使用する X 軸値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.SeriesY">
            <summary>シリーズで使用する Y 軸値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.SeriesFill">
            <summary>シリーズで使用する塗りつぶしスケール値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.SeriesLabel">
            <summary>項目凡例にシリーズで使用する凡例ラベル値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.SeriesRadius">
            <summary>シリーズで使用する半径値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.SeriesAngle">
            <summary>シリーズで使用する角度値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.SeriesShape">
            <summary>シリーズで使用する図形値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.SeriesValue">
            <summary>シリーズで使用する項目値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.SeriesGroup">
            <summary>シリーズで使用するグループ化識別子を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.SeriesTitle">
            <summary>シリーズで使用するタイトルを識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.OpenSeriesValue">
            <summary>シリーズで使用する始値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.HighSeriesValue">
            <summary>シリーズで使用する高値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.LowSeriesValue">
            <summary>シリーズで使用する安値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.CloseSeriesValue">
            <summary>シリーズで使用する終値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.VolumeSeriesValue">
            <summary>シリーズで使用する出来高値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.AxisLabelValue">
            <summary>シリーズで使用する軸ラベル値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.AxisDateValue">
            <summary>シリーズで使用する軸日付値を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesIntent.DontPlot">
            <summary>シリーズで値を評価するとき、値が無視されることを識別します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType">
            <summary>データ シリーズで推薦されるシリーズ型を識別します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.Line">
            <summary>折れ線シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.Column">
            <summary>柱状シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.Area">
            <summary>エリア シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.Bar">
            <summary>棒シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.StepLine">
            <summary>ステップ折れ線シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.StepArea">
            <summary>ステップ エリア シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.Spline">
            <summary>スプライン シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.SplineArea">
            <summary>スプライン エリア シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.Waterfall">
            <summary>ウォーターフォール シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.Stacked">
            <summary>積層シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.Point">
            <summary>ポイント シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.ScatterPoint">
            <summary>散布点シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.ScatterLine">
            <summary>散布折れ線シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.ScatterSpline">
            <summary>散布スプライン シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.ScatterArea">
            <summary>散布エリア シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.ScatterContour">
            <summary>散布等高線シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.ScatterHighDensity">
            <summary>地理高密度散布シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.ScatterBubble">
            <summary>バブル シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.ShapePolygon">
            <summary>ポリゴン シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.ShapePolyline">
            <summary>ポリライン シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.FinancialPrice">
            <summary>財務物価シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.FinancialIndicator">
            <summary>財務指標シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.FinancialOverlay">
            <summary>財務オーバーレイ シリーズが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.ValueOverlay">
            <summary>値オーバーレイが推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesType.Unknown">
            <summary>不明なシリーズ型を指定します</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAxisType">
            <summary>データ シリーズで推薦される軸型を示します。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAxisType.Category">
            <summary>カテゴリ軸型が推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAxisType.Linear">
            <summary>リニア軸型が推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAxisType.Logarithmic">
            <summary>対数軸型が推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAxisType.ContinuousDateTime">
            <summary>連続日時軸型が推薦されるときに使用されます。</summary>
        </member>
        <member name="F:Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAxisType.DiscreteDateTime">
            <summary>不連続な日時軸型が推薦されるときに使用されます。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.IExternalDataSeriesAdapter">
            <summary>データ シリーズ アダプターの公開用インターフェイスで実装する必要があります。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.IExternalDataSeriesAdapter.GetDataProvider(System.Object)">
            <summary>特定のデータ ソースのローカル データ プロバイダーを取得します。</summary>
            <param name="itemsSource">プロバイダーを取得するためのデータ ソース。</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SimpleScatterSeriesRule">
            <summary>利用可能な散布データ シリーズを推薦するルール。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SimpleScatterSeriesRule.#ctor">
            <summary>SimpleScatterSeriesRule を構築します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SimpleScatterSeriesRule.Priority">
            <summary>このルールの優先を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SimpleScatterSeriesRule.MonotonicCheckAmount">
            <summary>プロパティのモノトニシティの確認で使用するしきい値を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SimpleScatterSeriesRule.Evaluate(Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext)">
            <summary>ルールを評価します。</summary>
            <param name="context">ルールの評価のコンテキスト。</param>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SubCollectionsRule">
            <summary>その他のルールをサブ コレクションに繰り返すためのルール。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SubCollectionsRule.#ctor">
            <summary>SubCollectionsRule を構築します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SubCollectionsRule.Priority">
            <summary>このルールの優先を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SubCollectionsRule.CollectionTransformationThreshold">
            <summary>サブ コレクションで確認する項目数しきい値を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SubCollectionsRule.Evaluate(Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext)">
            <summary>ルールを評価します。</summary>
            <param name="context">ルールの評価のコンテキスト。</param>
        </member>
        <member name="T:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SimpleCategorySeriesRule">
            <summary>利用可能なカテゴリ データ シリーズを推薦するルール。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SimpleCategorySeriesRule.#ctor">
            <summary>SimpleCategorySeriesRule を構築します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SimpleCategorySeriesRule.Priority">
            <summary>このルールの優先を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SimpleCategorySeriesRule.UseColumnThreshold">
            <summary>値の下に柱状データ シリーズを使用する場合になる項目数しきい値を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SimpleCategorySeriesRule.DistinctCheckThreshold">
            <summary>プロパティの一意性の確認で使用するしきい値を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.Charts.DataAdapters.Rules.SimpleCategorySeriesRule.Evaluate(Infragistics.Core.Controls.Charts.DataAdapters.DataSeriesAdapterRunContext)">
            <summary>ルールを評価します。</summary>
            <param name="context">ルールの評価のコンテキスト。</param>
        </member>
        <member name="T:Infragistics.Core.Controls.IExecutionContext">
            <summary>操作が同期化する上の実行コンテキストを表します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.IExecutionContext.Execute(Infragistics.Core.Controls.ExecutionContextExecuteCallback)">
            <summary>コンテキストで要求されたコールバックを実行します。</summary>
            <param name="callback">実行するコールバック。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.IExecutionContext.EnqueueAction(Infragistics.Core.Controls.ExecutionContextExecuteCallback)">
            <summary>コンテキストで要求されたコールバックを一番早いチャンスに実行するためにキューに追加します。</summary>
            <param name="callback">実行するコールバック。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.IExecutionContext.EnqueueAnimationAction(Infragistics.Core.Controls.ExecutionContextExecuteCallback)">
            <summary>アニメーションで使用するため、コンテキストで要求されたコールバックを一番早いチャンスに実行するためにキューに追加します。</summary>
            <param name="callback">実行するコールバック。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.IExecutionContext.ExecuteDelayed(Infragistics.Core.Controls.ExecutionContextExecuteCallback,System.Int32)">
            <summary>コンテキストで要求されたコールバックを指定した遅延時間の後に実行するためにキューに追加します。</summary>
            <param name="callback">実行するコールバック。</param>
            <param name="delayMilliseconds">待つ遅延時間。</param>
        </member>
        <member name="M:Infragistics.Core.Controls.IExecutionContext.GetCurrentRelativeTime">
            <summary>実行コンテキストが作成されたまでの過ごした現在の相対時間をミリ秒で取得します。</summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Core.Controls.ExecutionContextExecuteCallback">
            <summary>実行コンテキストと同期化される操作を実行するコールバックを表します。</summary>
        </member>
        <member name="T:Infragistics.Core.Controls.SyncableObservableCollection`1">
            <summary>その他のコレクションと同期化可能な監視可能なコレクション。</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Infragistics.Core.Controls.SyncableObservableCollection`1.SyncTarget">
            <summary>同期化するその他の SyncableObservableCollection を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.Controls.SyncableObservableCollection`1.#ctor">
            <summary>SyncableObservableCollection を構築します。</summary>
        </member>
        <member name="T:Infragistics.Core.FastData.IFastItemsSource">
            <summary>データ ソースからの項目の効率的な取得を表します。</summary>
        </member>
        <member name="P:Infragistics.Core.FastData.IFastItemsSource.Item(System.Int32)">
            <summary>要求したインデックスにある項目を取得します。</summary>
            <param name="i">項目を要求するインデックス。</param>
            <returns>要求された項目。</returns>
        </member>
        <member name="M:Infragistics.Core.FastData.IFastItemsSource.IndexOf(System.Object)">
            <summary>要求した項目のインデックスを取得します。</summary>
            <param name="item">インデックスを取得する項目。</param>
            <returns>要求されたインデックス。</returns>
        </member>
        <member name="M:Infragistics.Core.FastData.IFastItemsSource.RegisterColumn(System.String)">
            <summary>特定のプロパティ名のために列を取得します。</summary>
            <param name="propertyName">列を取得するプロパティ。</param>
            <returns>プロパティの列。</returns>
        </member>
        <member name="M:Infragistics.Core.FastData.IFastItemsSource.DeregisterColumn(Infragistics.Core.FastData.IFastItemColumnPropertyName)">
            <summary>列を登録解除します。</summary>
            <param name="fastItemColumn">登録を解除する列。</param>
        </member>
        <member name="M:Infragistics.Core.FastData.IFastItemsSource.RegisterColumnInt(System.String)">
            <summary>特定のプロパティ名のために整数列を取得します。</summary>
            <param name="propertyName">列を取得するプロパティ。</param>
            <returns>プロパティの列。</returns>
        </member>
        <member name="M:Infragistics.Core.FastData.IFastItemsSource.RegisterColumnObject(System.String)">
            <summary>特定のプロパティ名のためにオブジェクト列を取得します。</summary>
            <param name="propertyName">列を取得するプロパティ。</param>
            <returns>プロパティの列。</returns>
        </member>
        <member name="M:Infragistics.Core.FastData.IFastItemsSource.RegisterColumnDateTime(System.String)">
            <summary>特定のプロパティ名のために日時列を取得します。</summary>
            <param name="propertyName">列を取得するプロパティ。</param>
            <returns>プロパティの列。</returns>
        </member>
        <member name="E:Infragistics.Core.FastData.IFastItemsSource.Event">
            <summary>データが変更されたことを示します。</summary>
        </member>
        <member name="P:Infragistics.Core.FastData.IFastItemsSource.Count">
            <summary>項目ソース内のレコード数を取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.FastData.IFastItemsSource.HandleCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>コレクション イベントを通知します。</summary>
            <param name="e">コレクション イベント。</param>
        </member>
        <member name="M:Infragistics.Core.FastData.IFastItemsSource.ContentsAsIList">
            <summary>コンテンツを IList として取得します。</summary>
            <returns>IList</returns>
        </member>
        <member name="T:Infragistics.Core.FastData.FastItemsSourceEventAction">
            <summary>DataSource イベントを発生する操作を説明します。</summary>
        </member>
        <member name="F:Infragistics.Core.FastData.FastItemsSourceEventAction.Remove">
            <summary>1 つ以上の行がデータ ソースから削除されました。</summary>
        </member>
        <member name="F:Infragistics.Core.FastData.FastItemsSourceEventAction.Insert">
            <summary>1 つ以上の行がデータ ソースに追加されました。</summary>
        </member>
        <member name="F:Infragistics.Core.FastData.FastItemsSourceEventAction.Replace">
            <summary>1 つ以上の行がデータ ソースで置き換えられました。</summary>
        </member>
        <member name="F:Infragistics.Core.FastData.FastItemsSourceEventAction.Change">
            <summary>項目のプロパティ値がデータ ソース中で変更されました。</summary>
        </member>
        <member name="F:Infragistics.Core.FastData.FastItemsSourceEventAction.Reset">
            <summary>データ ソースの内容全体がリセットされました。</summary>
        </member>
        <member name="T:Infragistics.Core.FastData.FastItemsSourceEventArgs">
            <summary>CollectionChanged イベントにデータを提供します。</summary>
        </member>
        <member name="M:Infragistics.Core.FastData.FastItemsSourceEventArgs.#ctor(Infragistics.Core.FastData.FastItemsSourceEventAction,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="action"></param>
            <param name="position"></param>
            <param name="count"></param>
        </member>
        <member name="M:Infragistics.Core.FastData.FastItemsSourceEventArgs.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="position"></param>
            <param name="propertyName"></param>
        </member>
        <member name="P:Infragistics.Core.FastData.FastItemsSourceEventArgs.Action">
            <summary>イベントの原因となったアクションを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.FastData.FastItemsSourceEventArgs.Position">
            <summary>変更された行の位置を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.FastData.FastItemsSourceEventArgs.Count">
            <summary>変更された行の数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.FastData.FastItemsSourceEventArgs.PropertyName">
            <summary>変更されたプロパティの名前を取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.FastData.IFastItemColumn`1">
            <summary>FastItemsSource 列のパブリック ビューを表します。</summary>
        </member>
        <member name="P:Infragistics.Core.FastData.IFastItemColumn`1.Minimum">
            <summary>列の最小値を取得します。</summary>
            <remarks>最小は、償却された一定時間内に計算されます。</remarks>
        </member>
        <member name="P:Infragistics.Core.FastData.IFastItemColumn`1.Maximum">
            <summary>列の最大値を取得します。</summary>
            <remarks>最大は、償却された一定時間内に計算されます。</remarks>
        </member>
        <member name="P:Infragistics.Core.FastData.IFastItemColumn`1.MayContainUnknowns">
            <summary>データに不明な値 (null、NaN など) を含むかどうかを取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.FastData.IFastItemColumnPropertyName">
            <summary>FastItemColumn で使用するプロパティ名を記憶しているオブジェクトのインターフェイス。</summary>
        </member>
        <member name="P:Infragistics.Core.FastData.IFastItemColumnPropertyName.PropertyName">
            <summary>列のプロパティ名を取得します。</summary>
        </member>
        <member name="T:Infragistics.Core.FlattenerSettings">
            <summary>ささまざまなケースを解決するためのフラットナーの設定の単一セット。</summary>
        </member>
        <member name="P:Infragistics.Core.FlattenerSettings.Instance">
            <summary>設定インスタンスを取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.FlattenerSettings.ChunkingAmount">
            <summary>ビジュアルのフラット化で使用するチャンク量を取得または設定します。</summary>
        </member>
        <member name="T:Infragistics.Core.PolySimplification">
            <summary>多角形単純化のためのユーティリティ クラス。</summary>
        </member>
        <member name="M:Infragistics.Core.PolySimplification.VertexReduction(System.Tuple{System.Double[],System.Double[]},System.Double)">
            <summary>シンプルな頂点の削減アルゴリズム。複雑性: O(n) Summary: 結果に P0 を含め、R = P0 に設定します。距離(PN, R) &gt; 許容範囲になるまで、その後のポイント P1、P2、... を通して繰り返します。結果に PN を含め、R = PN に設定します。含めるポイントがなくなるまで、この方法で繰り返しを続けます。</summary>
            <param name="points">ポイントのリスト</param>
            <param name="tolerance">隣接するポイント間に許容される最短距離</param>
            <returns>受け入れられたポイントのリスト</returns>
        </member>
        <member name="M:Infragistics.Core.PolySimplification.SquareDistance(Infragistics.Core.Point,Infragistics.Core.Point)">
            <summary>p1 および p2 間の距離の二乗を返します。</summary>
        </member>
        <member name="T:Infragistics.Core.EasingFunctions">
            <summary>コンポーネントで使用する定義済みのイージング関数を表します。</summary>
        </member>
        <member name="M:Infragistics.Core.EasingFunctions.CubicEase(System.Double)">
            <summary>立方 in-out イージング関数を表します。</summary>
            <param name="t">入力時間</param>
            <returns>出力進行状況</returns>
        </member>
        <member name="M:Infragistics.Core.EasingFunctions.ExponentialEase(System.Double)">
            <summary>指数 in-out イージング関数を表します。</summary>
            <param name="t">入力時間。</param>
            <returns>出力進行状況。</returns>
        </member>
        <member name="M:Infragistics.Core.EasingFunctions.CircleEase(System.Double)">
            <summary>円形 in-out イージング関数を表します。</summary>
            <param name="t">入力時間。</param>
            <returns>出力進行状況。</returns>
        </member>
        <member name="T:Infragistics.Core.ITickProvider">
            <summary>アニメーション エンジンにタイミング サポートを提供するドライバーを表します。</summary>
        </member>
        <member name="M:Infragistics.Core.ITickProvider.SetupTicking(System.Action)">
            <summary>要求された場合に指定したコールバックを起動するティッカーを設定します。</summary>
            <param name="callback">起動するコールバック メソッド。</param>
            <returns>ティッカーの識別子。</returns>
        </member>
        <member name="M:Infragistics.Core.ITickProvider.RequestFrame(System.Int32)">
            <summary>識別したティッカーのティックするフレームを要求します。ティッカーのコールバックが一番早いタイミングで呼び出されます。</summary>
            <param name="id">ティックをスケジュールするティッカーの ID。</param>
        </member>
        <member name="M:Infragistics.Core.ITickProvider.TeardownTicking(System.Int32)">
            <summary>ID によって識別されるティッカーが破棄されることを要求します。</summary>
            <param name="id">破棄するチッカーの ID。</param>
        </member>
        <member name="T:Infragistics.Core.IExternalizable">
            <summary>外部されたバージョンを返す可能なオブジェクトを示します。</summary>
        </member>
        <member name="M:Infragistics.Core.IExternalizable.ToExternalObject">
            <summary>オブジェクトの外部されたバージョンを取得します。</summary>
            <returns>外部されたバージョン。</returns>
        </member>
        <member name="T:Infragistics.Core.DoubleAnimator">
            <summary>Double 値のアニメーションに使用するクラス。</summary>
        </member>
        <member name="P:Infragistics.Core.DoubleAnimator.TickProvider">
            <summary>アニメーションで使用するチック プロバイダーを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.DoubleAnimator.NeedsFlush">
            <summary>DoubleAnimator はフラッシュが必要な状態にあるかどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Core.DoubleAnimator.Flush">
            <summary>一度以上ティックされたことを確認するためにアニメーターのティックを実行します。</summary>
        </member>
        <member name="P:Infragistics.Core.DoubleAnimator.TransitionProgress">
            <summary>アニメーションの現在の進行状況を取得します。</summary>
        </member>
        <member name="P:Infragistics.Core.DoubleAnimator.IntervalMilliseconds">
            <summary>間隔の合計ミリ秒数。</summary>
        </member>
        <member name="P:Infragistics.Core.DoubleAnimator.EasingFunction">
            <summary>アニメーションに使用するイージング関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.DoubleAnimator.From">
            <summary>アニメーションを開始するからの値を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Core.DoubleAnimator.To">
            <summary>アニメーションに移動するまでの値を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.DoubleAnimator.#ctor(System.Double,System.Double,System.Int32)">
            <summary>DoubleAnimator コンストラクター。</summary>
            <param name="from">アニメーションの始点になる double 値。</param>
            <param name="to">アニメーションの終点になる double 値。</param>
            <param name="intervalMilliseconds">アニメーションの所用時間。</param>
        </member>
        <member name="P:Infragistics.Core.DoubleAnimator.Active">
            <summary>アニメーションがアクティブかどうかを取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Core.DoubleAnimator.Start">
            <summary>アニメーションを開始します。</summary>
        </member>
        <member name="M:Infragistics.Core.DoubleAnimator.Stop">
            <summary>アニメーションを停止します。</summary>
        </member>
        <member name="M:Infragistics.Core.DoubleAnimator.Tick">
            <summary>アニメーションをティックします。</summary>
        </member>
        <member name="M:Infragistics.Core.DoubleAnimator.AnimationActive">
            <summary>アニメーションがアクティブかどうかを示すブール値を返すメソッド。</summary>
            <returns>アニメーションがアクティブならば true、そうでなければ false。</returns>
        </member>
        <member name="E:Infragistics.Core.DoubleAnimator.PropertyChanged">
            <summary>プロパティ値が変化した時に立ち上がるイベント。</summary>
        </member>
        <member name="T:Infragistics.Core.EasingFunctionHandler">
            <summary>アニメーションのイージング関数を表します。</summary>
            <param name="time">関数の入力タイプ (0 ~ 1)</param>
            <returns>出力進行状況 (0 は開始、1 はクランプなしの終了)。</returns>
        </member>
        <member name="T:Infragistics.Core.MathUtil">
            <summary>数学操作のユーティリティ メソッドを提供します。</summary>
        </member>
        <member name="F:Infragistics.Core.MathUtil.PHI">
            <summary>ゴールデンの手段を表します。</summary>
        </member>
        <member name="F:Infragistics.Core.MathUtil.SQRT2">
            <summary>2.0 の平方根を表します。</summary>
        </member>
        <member name="M:Infragistics.Core.MathUtil.Asinh(System.Double)">
            <summary>指定された角度の双曲線逆サインを返します。</summary>
            <param name="angle">ラジアンで測定された角度</param>
            <returns>指定された角度の逆双曲線正弦。</returns>
        </member>
        <member name="M:Infragistics.Core.MathUtil.Hypot(System.Double,System.Double)">
            <summary>x と y の 2 つの側の長さに基づいて直角三角形の斜辺の長さを計算します。</summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Core.MathUtil.Sqr(System.Double)">
            <summary>x の 2 乗を計算します。</summary>
            <param name="x"></param>
            <returns>x の 2 乗。</returns>
        </member>
        <member name="M:Infragistics.Core.MathUtil.GammaLn(System.Double)">
            <summary>ガンマ関数 Γ(x) の自然対数を返します。</summary>
            <param name="x">GammaLn を計算する値。</param>
            <returns>ガンマ関数の対数。x がゼロ以下の場合は NaN。</returns>
        </member>
        <member name="M:Infragistics.Core.MathUtil.Clamp(System.Double,System.Double,System.Double)">
            <summary>指定された範囲に固定された指定された値を返します。</summary>
            <param name="value">固定する値。</param>
            <param name="minimum">範囲の最小値。</param>
            <param name="maximum">範囲の最大値。</param>
            <returns>固定された値。</returns>
        </member>
        <member name="M:Infragistics.Core.MathUtil.Radians(System.Double)">
            <summary>指定された角度をラジアンに変換します。</summary>
            <param name="degrees">度で表される角度。</param>
            <returns>ラジアンで表される角度。</returns>
        </member>
        <member name="F:Infragistics.Core.MathUtil.DegreeAsRadian">
            <summary>度からラジアンへ変換する定数。</summary>
        </member>
        <member name="M:Infragistics.Core.MathUtil.Degrees(System.Double)">
            <summary>指定された角度を度に変換します。</summary>
            <param name="radians">ラジアンで表される角度。</param>
            <returns>度で表される角度。</returns>
        </member>
        <member name="M:Infragistics.Core.MathUtil.Noise(System.Double,System.Double,System.Double)">
            <summary>指定した位置にある Perlin ノイズ値を返します。</summary>
            <param name="x">ノイズ空間の x 位置。</param>
            <param name="y">ノイズ空間の y 位置。</param>
            <param name="z">ノイズ空間の z 位置。</param>
            <returns>ノイズ値。</returns>
        </member>
        <member name="M:Infragistics.Core.MathUtil.NiceFloor(System.Double)">
            <summary>指定された値以下の適切に丸められた値を返します。</summary>
            <param name="value">丸める値。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Core.MathUtil.NiceRound(System.Double)">
            <summary>直近の適切な数に小数値を丸めます。</summary>
            <param name="value">丸める値。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Core.MathUtil.NiceCeiling(System.Double)">
            <summary>指定された値以上の適切に丸められた値を返します。</summary>
            <param name="value">丸める値。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Core.MathUtil.Min3(System.Double,System.Double,System.Double)">
            <summary>3 つの数値の最小値を返します。</summary>
        </member>
        <member name="M:Infragistics.Core.MathUtil.Max3(System.Double,System.Double,System.Double)">
            <summary>3 つの数値の最大値を返します。</summary>
        </member>
        <member name="M:Infragistics.Core.MathUtil.Min(System.Double[])">
            <summary>数値パラメーターの最小値を返します。</summary>
            <param name="a">最小値を返すための数値パラメーター。</param>
            <returns>指定された数値パラメーターの最小値。</returns>
        </member>
        <member name="M:Infragistics.Core.MathUtil.Max(System.Double[])">
            <summary>数値パラメーターの最大値を返します。</summary>
            <param name="a">最大値を返すための数値パラメーター。</param>
            <returns>指定された数値パラメーターの最大値。</returns>
        </member>
        <member name="T:Infragistics.Core.RearrangedList`1">
            <summary>順序を変更した既知のリストのリスト クラス。</summary>
            <typeparam name="T">リスト内の項目の Type。</typeparam>
        </member>
        <member name="M:Infragistics.Core.RearrangedList`1.#ctor(System.Collections.Generic.IList{`0},System.Collections.Generic.IList{System.Int32})">
            <summary>RearrangedList コンストラクター。</summary>
            <param name="inner">オリジナル リスト。</param>
            <param name="indexes">RearrangedList 内の項目の順序を表すインデックス リスト。</param>
        </member>
        <member name="M:Infragistics.Core.RearrangedList`1.IndexOf(`0)">
            <summary>所定の項目のインデックスを取得します。</summary>
            <param name="item">監視下の項目。</param>
            <returns>所定の項目のインデックス。</returns>
        </member>
        <member name="M:Infragistics.Core.RearrangedList`1.Insert(System.Int32,`0)">
            <summary>指定されたインデックスでこのコレクションに項目を挿入します。</summary>
            <param name="index">項目を挿入するインデックス。</param>
            <param name="item">挿入する項目。</param>        
        </member>
        <member name="M:Infragistics.Core.RearrangedList`1.RemoveAt(System.Int32)">
            <summary>指定したインデックスにある項目を削除します。</summary>
            <param name="index">削除する項目のインデックス。</param>
        </member>
        <member name="P:Infragistics.Core.RearrangedList`1.Item(System.Int32)">
            <summary>RearrangedList インデクサー。</summary>
            <param name="index">取得または設定する項目のインデックス。</param>
            <returns>指定されたインデックスにある項目。</returns>
        </member>
        <member name="M:Infragistics.Core.RearrangedList`1.Add(`0)">
            <summary>コレクションに項目を追加します。</summary>
            <param name="item">追加する項目。</param>
        </member>
        <member name="M:Infragistics.Core.RearrangedList`1.Clear">
            <summary>コレクションを消去します。</summary>
        </member>
        <member name="M:Infragistics.Core.RearrangedList`1.Contains(`0)">
            <summary>項目がコレクションにあるかどうかを確認します。</summary>
            <param name="item">監視下の項目。</param>
            <returns>項目がコレクションにあれば true、それ以外は false。</returns>
        </member>
        <member name="M:Infragistics.Core.RearrangedList`1.CopyTo(`0[],System.Int32)">
            <summary>指定したインデックスから、コレクションの項目を配列にコピーします。</summary>
            <param name="array">コレクション項目を追加する配列。</param>
            <param name="arrayIndex">コピー操作の開始位置のインデックス。</param>
        </member>
        <member name="P:Infragistics.Core.RearrangedList`1.Count">
            <summary>コレクションの合計項目数。</summary>
        </member>
        <member name="P:Infragistics.Core.RearrangedList`1.IsReadOnly">
            <summary>コレクションが読み取り専用であるかどうかを示すブール値。</summary>
        </member>
        <member name="M:Infragistics.Core.RearrangedList`1.Remove(`0)">
            <summary>指定した項目をコレクションから削除します。</summary>
            <param name="item">削除する項目。</param>
            <returns>項目が見つかって削除された場合は true、そうでなければ false。</returns>
        </member>
        <member name="M:Infragistics.Core.RearrangedList`1.GetEnumerator">
            <summary>コレクション内のすべての項目で繰り返す列挙子を取得します。</summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Portable.FastItemColumn">
            <summary>高速なデータソース内の double のキャッシュされた列を表します。</summary>
        </member>
        <member name="P:Infragistics.Portable.FastItemColumn.Minimum">
            <summary>現在の列の最小値を取得します。</summary>
            <remarks>最小値の取得には、償却された一定時間を要します。</remarks>
        </member>
        <member name="P:Infragistics.Portable.FastItemColumn.Maximum">
            <summary>現在の列の最大値を取得します。</summary>
            <remarks>最大値の取得には、償却された一定時間を要します。</remarks>
        </member>
        <member name="P:Infragistics.Portable.FastItemDateTimeColumn.Minimum">
            <summary>現在の列の最小値を取得します。</summary>
            <remarks>最小値の取得には、償却された一定時間を要します。</remarks>
        </member>
        <member name="P:Infragistics.Portable.FastItemDateTimeColumn.Maximum">
            <summary>現在の列の最大値を取得します。</summary>
            <remarks>最大値の取得には、償却された一定時間を要します。</remarks>
        </member>
        <member name="P:Infragistics.Portable.FastItemObjectColumn.Minimum">
            <summary>現在の列の最小値を取得します。</summary>
            <remarks>最小値の取得には、償却された一定時間を要します。</remarks>
        </member>
        <member name="P:Infragistics.Portable.FastItemObjectColumn.Maximum">
            <summary>現在の列の最大値を取得します。</summary>
            <remarks>最大値の取得には、償却された一定時間を要します。</remarks>
        </member>
        <member name="P:Infragistics.Portable.FastItemIntColumn.Minimum">
            <summary>現在の列の最小値を取得します。</summary>
            <remarks>最小値の取得には、償却された一定時間を要します。</remarks>
        </member>
        <member name="P:Infragistics.Portable.FastItemIntColumn.Maximum">
            <summary>現在の列の最大値を取得します。</summary>
            <remarks>最大値の取得には、償却された一定時間を要します。</remarks>
        </member>
        <member name="T:Infragistics.Portable.FastItemsSource">
            <summary>列挙可能な項目のソースのビューを表します。</summary>
        </member>
        <member name="M:Infragistics.Portable.FastItemsSource.#ctor">
            <summary>FastItemsSource コンストラクター。</summary>
        </member>
        <member name="E:Infragistics.Portable.FastItemsSource.Event">
            <summary>このコレクションの変更時に呼び出される FastItemsSourceEvent です。</summary>
        </member>
        <member name="P:Infragistics.Portable.FastItemsSource.ItemsSource">
            <summary>データの取得先オブジェクトの列挙型リスト。</summary>
        </member>
        <member name="M:Infragistics.Portable.FastItemsSource.Detach">
            <summary>古いリスナーを削除するために、このインスタンスをデタッチします。</summary>
        </member>
        <member name="M:Infragistics.Portable.FastItemsSource.Attach">
            <summary>リスナーを追加することによってこのインスタンスをアタッチします。</summary>
        </member>
        <member name="P:Infragistics.Portable.FastItemsSource.Count">
            <summary>現在の FastItemsSource オブジェクト内の項目の数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Portable.FastItemsSource.Item(System.Int32)">
            <summary>指定した位置にある項目を取得します。</summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.FastItemsSource.GetEnumerator">
            <summary>FastItemsSource の中をループするために使用する IEnumerator を取得します。</summary>
            <returns>FastItemsSource 内でのルーピングに使用される IEnumerator を取得します。</returns>
        </member>
        <member name="P:Infragistics.Portable.FastItemsSource.Item(System.Object)">
            <summary>指定した項目のインデックスを取得します。</summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.FastItemsSource.IndexOf(System.Object)">
            <summary>指定した項目のインデックスを返します。</summary>
            <param name="item">インデックスを取得する項目。</param>
            <returns>指定した項目のインデックス。</returns>
        </member>
        <member name="M:Infragistics.Portable.FastItemsSource.RegisterColumnDateTime(System.String)">
            <summary>指定したプロパティ名の DateTime FastItemColumn を返します。</summary>
            <param name="propertyName">FastItemColumn へのデータ入力に使用されるデータ項目に関するプロパティの名前。</param>
            <returns>指定したプロパティ名の DateTime FastItemColumn。</returns>
        </member>
        <member name="M:Infragistics.Portable.FastItemsSource.RegisterColumnObject(System.String)">
            <summary>指定したプロパティ名の FastItemColumn オブジェクトを返します。</summary>
            <param name="propertyName">FastItemColumn へのデータ入力に使用されるデータ項目に関するプロパティの名前。</param>
            <returns>指定したプロパティ名の FastItemColumn オブジェクト。</returns>
        </member>
        <member name="M:Infragistics.Portable.FastItemsSource.RegisterColumnInt(System.String)">
            <summary>指定したプロパティ名の FastItemColumn 整数値を返します。</summary>
            <param name="propertyName">FastItemColumn へのデータ入力に使用されるデータ項目に関するプロパティの名前。</param>
            <returns>指定したプロパティ名の FastItemColumn 整数値。</returns>
        </member>
        <member name="M:Infragistics.Portable.FastItemsSource.RegisterColumn(System.String)">
            <summary>指定したプロパティ名の FastItemColumn を返します。</summary>
            <param name="propertyName">FastItemColumn へのデータ入力に使用されるデータ項目に関するプロパティの名前。</param>
            <returns>指定したプロパティ名の FastItemColumn。</returns>
        </member>
        <member name="M:Infragistics.Portable.FastItemsSource.DeregisterColumn(Infragistics.Core.FastData.IFastItemColumnPropertyName)">
            <summary>指定したプロパティ名の FastItemColumn をリセットします。</summary>
            <param name="fastItemColumn">FastItemColumn のプロパティ名を提供するオブジェクト。</param>
        </member>
        <member name="T:Infragistics.Portable.IFastItemsSourceProvider">
            <summary>インプリメンターは FastItemsSource インスタンスのプロバイダーです。</summary>
        </member>
        <member name="M:Infragistics.Portable.IFastItemsSourceProvider.GetFastItemsSource(System.Collections.IEnumerable)">
            <summary>ターゲット列挙子のファスト項目ソースを取得します。</summary>
            <param name="target">FastItemsSource を取得する列挙子。</param>
            <returns>FastItemsSource 参照。</returns>
        </member>
        <member name="M:Infragistics.Portable.IFastItemsSourceProvider.ReleaseFastItemsSource(System.Collections.IEnumerable)">
            <summary>FastItemsSource 参照を解放します。</summary>
            <param name="itemsSource">FastItemsSource が解放される列挙子。</param>
            <returns>FastItemsSource 参照。</returns>
        </member>
        <member name="T:Infragistics.Portable.FastReflectionHelper">
            <summary>従来のリフレクションとコンパイルされたラムダ式のどちらかを使用してオブジェクトからプロパティ値を取得するリフレクション方式。</summary>
        </member>
        <member name="M:Infragistics.Portable.FastReflectionHelper.#ctor">
            <summary>高速リフレクション ヘルパーを構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.FastReflectionHelper.#ctor(System.Boolean,System.String)">
            <summary>高速リフレクション ヘルパーを構築します。</summary>
            <param name="useTraditionalReflection">ヘルパーは従来の (低速な) リフレクションを使用します。</param>
            <param name="propertyName">反映するプロパティ名。</param>
        </member>
        <member name="P:Infragistics.Portable.FastReflectionHelper.PropertyName">
            <summary>現在の FastReflectionHelper オブジェクトのプロパティ名を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.FastReflectionHelper.UseTraditionalReflection">
            <summary>現在の FastReflectionHelper オブジェクトがコンパイルされた式を使用していないことを示します。</summary>
        </member>
        <member name="P:Infragistics.Portable.FastReflectionHelper.Invalid">
            <summary>高速リフレクション ヘルパーが無効な場合に True を返します。多くの場合、プロパティ名がないことが原因です。</summary>
        </member>
        <member name="M:Infragistics.Portable.FastReflectionHelper.GetPropertyValue(System.Object)">
            <summary>指定した項目からプロパティ値を取得します。</summary>
            <param name="item"></param>
            <returns>プロパティ値。プロパティ値が決定できない場合は null。</returns>
        </member>
        <member name="M:Infragistics.Portable.FastReflectionHelper.GetPropertyValue(System.Type,System.Object)">
            <summary>指定した項目のプロパティ値を取得します。</summary>
            <param name="itemType">項目タイプ。</param>
            <param name="item">プロパティを含む項目。</param>
            <returns>プロパティ値。プロパティ値が決定できない場合は null。</returns>
        </member>
        <member name="T:Infragistics.Portable.FontUtil">
            <summary>演算操作に使用する Utility クラス。</summary>
        </member>
        <member name="M:Infragistics.Portable.FontUtil.GetCurrentFontHeight(Infragistics.Portable.FontInfo)">
            <summary>一時的に追加されたスパンにフォントを適用します。</summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.FontUtil.GetFont(System.Object)">
            <summary>jquery コンテナーを取得し、そのフォントプロパティを抽出します。</summary>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.FontUtil.MeasureStringWidth(System.String,Infragistics.Portable.FontInfo,Infragistics.Portable.RenderingContext)">
            <summary>文字列の幅 (ピクセル単位) を返します。</summary>
        </member>
        <member name="T:Infragistics.Portable.BrushCollection">
            <summary>Brush オブジェクトのシンプルなコレクション</summary>
        </member>
        <member name="P:Infragistics.Portable.BrushCollection.IsDirty">
            <summary>ブラシ コレクションがダーティのことを示します。</summary>
        </member>
        <member name="M:Infragistics.Portable.BrushCollection.SelectRandom">
            <summary>コレクションのランダム ブラシを返します。</summary>
            <returns>このコレクションのランダム ブラシ。</returns>
        </member>
        <member name="M:Infragistics.Portable.BrushCollection.InterpolateRandom">
            <summary>このコレクションのブラシから補間されたランダム ブラシを返します。</summary>
            <returns>このコレクションのブラシから補間されたランダム ブラシ。</returns>
        </member>
        <member name="P:Infragistics.Portable.BrushCollection.InterpolationMode">
            <summary>ブラシを補間するために使用される補間モードを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.BrushCollection.Item(System.Int32)">
            <summary>指定したインデックスのブラシを取得または設定します。</summary>
            <param name="index">返すブラシのインデックス。</param>
            <returns>指定されたインデックスのブラシ。</returns>
        </member>
        <member name="M:Infragistics.Portable.BrushCollection.GetInterpolatedBrush(System.Double)">
            <summary>指定したインデックスでブラシを取得します。インデックスが整数ではない場合、この関数呼び出しの結果は、前と次のインデックス値のブラシ間で補間されたプラシになります。</summary>
            <param name="index">返すブラシのインデックス。</param>
            <returns>指定されたインデックスのブラシ、または指定されたインデックスが整数ではない場合、前と次のインデックス間の補間されたブラシ。</returns>
        </member>
        <member name="M:Infragistics.Portable.BrushCollection.Equals(System.Object)">
            <summary>1 つの BrushCollection が別の BrushCollection と等しいかどうかを決定します。</summary>
            <param name="obj">その他の BrushCollection。</param>
            <returns>BrushCollection インスタンスが等しい場合は True。</returns>
        </member>
        <member name="T:Infragistics.Portable.CustomContentUpdateInfo">
            <summary>生成されているか、更新されているカスタム コンテンツについてのコンテキスト情報を表します。</summary>
        </member>
        <member name="M:Infragistics.Portable.CustomContentUpdateInfo.#ctor">
            <summary>CustomContentUpdateInfo を構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.CustomContentUpdateInfo.GetItem(System.String)">
            <summary>情報から名前付き値を取得します。</summary>
            <param name="key">取得する値のキー。</param>
            <returns>取得された値。</returns>
        </member>
        <member name="M:Infragistics.Portable.CustomContentUpdateInfo.SetItem(System.String,System.Object)">
            <summary>情報の名前付き値を設定します。</summary>
            <param name="key">値の名前。</param>
            <param name="item">設定する値。</param>
        </member>
        <member name="T:Infragistics.Portable.DoubleValueChangedEventArgs">
            <summary>double 値の変更イベントのデータを提供します。</summary>
        </member>
        <member name="M:Infragistics.Portable.DoubleValueChangedEventArgs.#ctor(System.Double,System.Double)">
            <summary>DoubleValueChangedEventArgs コンストラクター。</summary>
            <param name="oldValue">前の値。</param>
            <param name="newValue">新しい値。</param>
        </member>
        <member name="P:Infragistics.Portable.DoubleValueChangedEventArgs.OldValue">
            <summary>変更前の値を取得します。</summary>
        </member>
        <member name="P:Infragistics.Portable.DoubleValueChangedEventArgs.NewValue">
            <summary>新しい値を取得します。</summary>
        </member>
        <member name="T:Infragistics.Portable.RectChangedEventArgs">
            <summary>矩形変更イベントのデータを提供します。</summary>
        </member>
        <member name="M:Infragistics.Portable.RectChangedEventArgs.#ctor(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>RectChangedEventArgs コンストラクター。</summary>
            <param name="oldRect">変更される矩形の変更前の値。</param>
            <param name="newRect">変更される矩形の変更後の値。</param>
        </member>
        <member name="P:Infragistics.Portable.RectChangedEventArgs.OldRect">
            <summary>変更前の矩形を取得します。</summary>
        </member>
        <member name="P:Infragistics.Portable.RectChangedEventArgs.NewRect">
            <summary>新しい矩形を取得します。</summary>
        </member>
        <member name="T:Infragistics.Portable.ScreenRectChangedEventArgs">
            <summary>矩形変更イベントのデータを提供します。</summary>
        </member>
        <member name="M:Infragistics.Portable.ScreenRectChangedEventArgs.#ctor(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>RectChangedEventArgs コンストラクター。</summary>
            <param name="oldRect">変更される矩形の変更前の値。</param>
            <param name="newRect">変更される矩形の変更後の値。</param>
        </member>
        <member name="P:Infragistics.Portable.ScreenRectChangedEventArgs.OldRect">
            <summary>変更前の矩形を取得します。</summary>
        </member>
        <member name="P:Infragistics.Portable.ScreenRectChangedEventArgs.NewRect">
            <summary>新しい矩形を取得します。</summary>
        </member>
        <member name="M:Infragistics.Portable.Controls.SkiaSharpCanvasRenderer.CreateCubicApproximations(System.Double,System.Double,System.Double,System.Double,Infragistics.Portable.Point,Infragistics.Portable.Graphics.Media.PolyBezierSegment)">
            <summary>計算は A. Riskus によるものです。"Approximation of a Cubic Bezier Curve by Circular Arcs and Vice Versa," Information Technology and Control, 35(4), 2006 ページ 371-378。</summary>
            <param name="startAngle"></param>
            <param name="endAngle"></param>
            <param name="sizeX"></param>
            <param name="sizeY"></param>
            <param name="center"></param>
            <param name="destination"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Portable.Controls.InterpolationUtil">
            <summary>ポイントの補間のためのユーティリティ メソッドを提供します。</summary>
        </member>
        <member name="M:Infragistics.Portable.Controls.InterpolationUtil.InterpolatePoints(System.Collections.Generic.List{Infragistics.Portable.Point},System.Double,System.Collections.Generic.List{Infragistics.Portable.Point},System.Collections.Generic.List{Infragistics.Portable.Point})">
            <summary>ポイントを補間します。</summary>
        </member>
        <member name="M:Infragistics.Portable.Controls.InterpolationUtil.InterpolateValues``1(System.Collections.Generic.List{``0},System.Double,System.Collections.Generic.List{``0},System.Collections.Generic.List{``0},System.Func{``0},System.Func{System.Double,System.Double,``0,``0,``0})">
            <summary>値を補間します。</summary>
        </member>
        <member name="T:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit">
            <summary>線形最小二乗法フィッティングのための方法。</summary>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.Test">
            <summary>組み込みテスト スイートを実行します。</summary>
            <returns>すべてのテストが合格した場合に True</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.LinearFit(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double})">
            <summary>線形最小二乗法フィット y=A+Bx の係数を作成します。</summary>
            <param name="n">シリーズに含まれる項目の数。</param>
            <param name="x">n 番目の x の値を返すデリゲート。</param>
            <param name="y">n 番目の y の値を返すデリゲート。</param>
            <remarks>指定した点の x または y のどちらかが NaN の場合、その点はフィッティング操作で考慮されません。無限の値は有効ですが、数値的不安定になる可能性が高くなります。<para>Weisstein、Eric W. 『Least Squares Fitting』MathWorld より--Wolfram Web リソース: http://mathworld.wolfram.com/LeastSquaresFitting.html</para>
            </remarks>
            <returns>double の配列としての A、B、解がない場合は null</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.LinearEvaluate(System.Double[],System.Double)">
            <summary>線形関数 y=a[0]+a[1]*x を評価します。</summary>
            <param name="a">関数係数</param>
            <param name="x">関数評価点</param>
            <returns>関数を評価します。関数を評価できない場合は NaN になります。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.LinearTest">
            <summary>線形フィッティングをテストします。</summary>
            <returns>テストが合格した場合に True。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.LogarithmicFit(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double})">
            <summary>対数最小二乗法フィット y=A+BInx の係数を作成します。</summary>
            <param name="n">シリーズに含まれる項目の数。</param>
            <param name="x">n 番目の x の値を返すデリゲート。</param>
            <param name="y">n 番目の y の値を返すデリゲート。</param>
            <remarks>指定した点の x または y のどちらかが NaN であるか、x が正でない場合、その点はフィッティング操作で考慮されません。無限の値は有効ですが、数値的不安定になる可能性が高くなります。<para>Weisstein、Eric W. 『Least Squares Fitting--Logarithmic』MathWorld より--Wolfram Web リソース: http://mathworld.wolfram.com/LeastSquaresFittingLogarithmic.html</para>
            </remarks>
            <returns>double の配列としての A、B、解がない場合は null</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.LogarithmicEvaluate(System.Double[],System.Double)">
            <summary>線形関数 y=a[0]+a[1]*ln(x) を評価します。</summary>
            <param name="a">関数係数</param>
            <param name="x">関数評価点</param>
            <returns>関数を評価します。関数を評価できない場合は NaN になります。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.LogarithmicTest">
            <summary>対数フィッティングをテストします。</summary>
            <returns>テストが合格した場合に True。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.ExponentialFit(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double})">
            <summary>指数最小二乗法フィット y=Ae^(Bx) の係数を作成します。</summary>
            <param name="n">シリーズに含まれる項目の数。</param>
            <param name="x">n 番目の x の値を返すデリゲート。</param>
            <param name="y">n 番目の y の値を返すデリゲート。</param>
            <remarks>指定した点の x または y のどちらかが NaN であるか、y が正でない場合、その点はフィッティング操作で考慮されません。無限の値は有効ですが、数値的不安定になる可能性が高くなります。<para>Weisstein、Eric W. 『Least Squares Fitting--Exponential』MathWorld より--Wolfram Web リソース: http://mathworld.wolfram.com/LeastSquaresFittingExponential.html</para>
            </remarks>
            <returns>double の配列としての A、B、解がない場合は null</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.ExponentialEvaluate(System.Double[],System.Double)">
            <summary>関数 y=a[0]*e^(a[1]*x) を評価します。</summary>
            <param name="a">関数係数</param>
            <param name="x">関数評価点</param>
            <returns>関数を評価します。関数を評価できない場合は NaN になります。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.ExponentialTest">
            <summary>指数フィッティングをテストします。</summary>
            <returns>テストが合格した場合に True。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.PowerLawFit(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double})">
            <summary>指数法則最小二乗法フィット y=A(x^B) の係数を作成します。</summary>
            <param name="n">シリーズに含まれる項目の数。</param>
            <param name="x">n 番目の x の値を返すデリゲート。</param>
            <param name="y">n 番目の y の値を返すデリゲート。</param>
            <remarks>指定した点の x または y のどちらかが NaN 非正の場合、その点はフィッティング操作で考慮されません。無限の値は有効ですが、数値的不安定になる可能性が高くなります。<para>Weisstein、Eric W. 『Least Squares Fitting--Power Law』MathWorld より--Wolfram Web リソース: http://mathworld.wolfram.com/LeastSquaresFittingPowerLaw.html</para>
            </remarks>
            <returns>double の配列としての A、B、解がない場合は null</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.PowerLawEvaluate(System.Double[],System.Double)">
            <summary>関数 y=a[0]*(a[1]^x) を評価します。</summary>
            <param name="a">関数係数</param>
            <param name="x">関数評価点</param>
            <returns>関数を評価します。関数を評価できない場合は NaN になります。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.PowerLawTest">
            <summary>指数法則フィッティングをテストします。</summary>
            <returns>テストが合格した場合に True。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.QuadraticFit(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double})">
            <summary>多項式最小二乗法フィット y=a0+a1x+a2x^2 の係数を作成します。</summary>
            <param name="n">シリーズに含まれる項目の数。</param>
            <param name="x">n 番目の x の値を返すデリゲート。</param>
            <param name="y">n 番目の y の値を返すデリゲート。</param>
            <remarks>指定した点の x または y のどちらかが NaN の場合、その点はフィッティング操作で考慮されません。無限の値は有効ですが、数値的不安定になる可能性が高くなります。<para>Weisstein、Eric W. 『Least Squares Fitting--Polynomial』MathWorld より--Wolfram Web リソース: http://mathworld.wolfram.com/LeastSquaresFittingPolynomial.html</para>
            </remarks>
            <returns>double の配列としての多項式係数 a0, a1, .. ak。解がない場合は null。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.QuadraticEvaluate(System.Double[],System.Double)">
            <summary>関数 y=a[0]+a[1]*x+a[2]*x^2 を評価します。</summary>
            <param name="a">関数係数</param>
            <param name="x">関数評価点</param>
            <returns>関数を評価します。関数を評価できない場合は NaN になります。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.QuadraticTest">
            <summary>二次フィッティングをテストします。</summary>
            <returns>テストが合格した場合に True。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.CubicFit(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double})">
            <summary>多項式最小二乗法フィット y=a0+a1x+a2x^2+a3x^3 の係数を作成します。</summary>
            <param name="n">シリーズに含まれる項目の数。</param>
            <param name="x">n 番目の x の値を返すデリゲート。</param>
            <param name="y">n 番目の y の値を返すデリゲート。</param>
            <remarks>指定した点の x または y のどちらかが NaN の場合、その点はフィッティング操作で考慮されません。無限の値は有効ですが、数値的不安定になる可能性が高くなります。<para>Weisstein、Eric W. 『Least Squares Fitting--Polynomial』MathWorld より--Wolfram Web リソース: http://mathworld.wolfram.com/LeastSquaresFittingPolynomial.html</para>
            </remarks>
            <returns>double の配列としての多項式係数 a0, a1, .. ak。解がない場合は null。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.CubicEvaluate(System.Double[],System.Double)">
            <summary>関数 y=a[0]+a[1]*x+a[2]*x^2+a3x^3 を評価します。</summary>
            <param name="a">関数係数</param>
            <param name="x">関数評価点</param>
            <returns>関数を評価します。関数を評価できない場合は NaN になります。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.CubicTest">
            <summary>三次フィッティングをテストします。</summary>
            <returns>テストが合格した場合に True。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.QuarticFit(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double})">
            <summary>多項式最小二乗法フィット yy=a0+a1x+a2x^2+a3x^3+a4x^4 の係数を作成します。</summary>
            <param name="n">シリーズに含まれる項目の数。</param>
            <param name="x">n 番目の x の値を返すデリゲート。</param>
            <param name="y">n 番目の y の値を返すデリゲート。</param>
            <remarks>指定した点の x または y のどちらかが NaN の場合、その点はフィッティング操作で考慮されません。無限の値は有効ですが、数値的不安定になる可能性が高くなります。<para>Weisstein、Eric W. 『Least Squares Fitting--Polynomial』MathWorld より--Wolfram Web リソース: http://mathworld.wolfram.com/LeastSquaresFittingPolynomial.html</para>
            </remarks>
            <returns>double の配列としての多項式係数 a0, a1, .. ak。解がない場合は null。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.QuarticEvaluate(System.Double[],System.Double)">
            <summary>関数 y=a[0]+a[1]*x+a[2]*x^2+a3x^3 を評価します。</summary>
            <param name="a">関数係数</param>
            <param name="x">関数評価点</param>
            <returns>関数を評価します。関数を評価できない場合は NaN になります。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.QuarticTest">
            <summary>四次フィッティングをテストします。</summary>
            <returns>テストが合格した場合に True。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.QuinticFit(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double})">
            <summary>多項式最小二乗法フィット y=a0+a1x+a2x^2+a3x^3+a4x^4+a5x^5 の係数を作成します。</summary>
            <param name="n">シリーズに含まれる項目の数。</param>
            <param name="x">n 番目の x の値を返すデリゲート。</param>
            <param name="y">n 番目の y の値を返すデリゲート。</param>
            <remarks>指定した点の x または y のどちらかが NaN の場合、その点はフィッティング操作で考慮されません。無限の値は有効ですが、数値的不安定になる可能性が高くなります。<para>Weisstein、Eric W. 『Least Squares Fitting--Polynomial』MathWorld より--Wolfram Web リソース: http://mathworld.wolfram.com/LeastSquaresFittingPolynomial.html</para>
            </remarks>
            <returns>double の配列としての多項式係数 a0, a1, .. ak。解がない場合は null。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.QuinticEvaluate(System.Double[],System.Double)">
            <summary>関数 y=a[0]+a[1]*x+a[2]*x^2+a3x^3 を評価します。</summary>
            <param name="a">関数係数</param>
            <param name="x">関数評価点</param>
            <returns>関数を評価します。関数を評価できない場合は NaN になります。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.QuinticTest">
            <summary>五次フィッティングをテストします。</summary>
            <returns>テストが合格した場合に True。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.PolynomialFit(System.Int32,System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double})">
            <summary>多項式最小二乗法フィット y=a0+a1x+a2x^2.. の係数を作成します。</summary>
            <param name="n">シリーズに含まれる項目の数。</param>
            <param name="k">多項式の次数。</param>
            <param name="x">n 番目の x の値を返すデリゲート。</param>
            <param name="y">n 番目の y の値を返すデリゲート。</param>
            <remarks>指定した点の x または y のどちらかが NaN の場合、その点はフィッティング操作で考慮されません。無限の値は有効ですが、数値的に大幅に不安定になる可能性が高くなります。<para>Weisstein、Eric W. 『Least Squares Fitting--Polynomial』MathWorld より--Wolfram Web リソース: http://mathworld.wolfram.com/LeastSquaresFittingPolynomial.html</para>
            </remarks>
            <returns>double の配列としての多項式係数 a0, a1, .. ak。解がない場合は null。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.PolynomialEvaluate(System.Double[],System.Double)">
            <summary>関数 y=a[0]+a[1]*x+a[2]*x^2 を評価します。+a[n-1]*x^[n-1]</summary>
            <param name="a">関数係数</param>
            <param name="x">関数評価点</param>
            <returns>関数を評価します。関数を評価できない場合は NaN になります。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.LeastSquaresFit.PolynomialTest(System.Int32)">
            <summary>多項式フィッティングをテストします。</summary>
            <param name="k">テストする多項式の次数。</param>
            <returns>テストが合格した場合に True。</returns>
        </member>
        <member name="T:Infragistics.Portable.Controls.Charts.Util.Numeric">
            <summary>インデックスが設定された一連の数値に有効なアルゴリズムの基本クラス。</summary>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.Numeric.#ctor">
            <summary>デフォルトの空の Numeric オブジェクトを作成し初期化します。</summary>
        </member>
        <member name="T:Infragistics.Portable.Controls.Charts.Util.Numeric.ComparableDelegate">
            <summary>インデックス化された comparable を返すデリゲート。</summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.Numeric.Solve(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
            <summary>線形三重マトリックス システムを解きます。</summary>
            <returns>システムが正常に解かれた場合は True。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.Numeric.Solve(System.Double[0:,0:],System.Double[])">
            <summary>線形方程式のシステムを、ガウス ジョルダンの消去法を使用して解きます。</summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns>システムが正常に解かれた場合は True。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.Numeric.SafeCubicSplineFit(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double},System.Double,System.Double)">
            <summary>カウント x、y によって表される集計関数の三次スプライン補間を使用して係数を評価します。</summary>
            <param name="count">サンプルの数。</param>
            <param name="x">i 番目のサンプルの x 値を返すデリゲート。</param>
            <param name="y">i 番目のサンプルの x 値を返すデリゲート。</param>
            <param name="yp1">最初の点の一次導関数 (自然スプラインに対して double.NaN を使用)</param>
            <param name="ypn">最後の点の一次導関数 (自然スプラインに対して double.NaN を使用)</param>
            <remarks>入力に double.NaN がある場合、出力にローカルな double.NaN が現れます。</remarks>
            <returns>三次スプライン補間の係数</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.Numeric.CubicSplineFit(System.Int32,System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double},System.Double,System.Double)">
            <summary>x、y によって表される集計関数の自然または固定された三次スプライン補間を使用して係数を評価します。</summary>
            <remarks>入力に double.NaN がある場合、出力が完全に無効になります。</remarks>
            <param name="start">最初のサンプルのインデックス。</param>
            <param name="count">サンプルの数。</param>
            <param name="x">i 番目のサンプルの x 値を返すデリゲート。</param>
            <param name="y">i 番目のサンプルの x 値を返すデリゲート。</param>
            <param name="yp1">最初の点の一次導関数 (自然スプラインに対して double.NaN を使用)</param>
            <param name="ypn">最後の点の一次導関数 (自然スプラインに対して double.NaN を使用)</param>
            <returns>三次スプライン補間の係数</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.Numeric.CubicSplineFit(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double},System.Double,System.Double)">
            <summary>x、y によって表される集計関数の自然または固定された三次スプライン補間を使用して係数を評価します。</summary>
            <remarks>入力に double.NaN がある場合、出力が完全に無効になります。</remarks>
            <param name="count">サンプルの数。</param>
            <param name="x">i 番目のサンプルの x 値を返すデリゲート。</param>
            <param name="y">i 番目のサンプルの x 値を返すデリゲート。</param>
            <param name="yp1">最初の点の一次導関数 (自然スプラインに対して double.NaN を使用)</param>
            <param name="ypn">最後の点の一次導関数 (自然スプラインに対して double.NaN を使用)</param>
            <returns>三次スプライン補間の係数</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.Numeric.CubicSplineEvaluate(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>三次スプライン補間を評価します。</summary>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.Numeric.Spline2D(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double},System.Double)">
            <summary>データにフィットした平面スプラインを返します。</summary>
            <param name="count">入力されるポイントの数。</param>
            <param name="x">インデックスに基づいて X 入力値を提供します。</param>
            <param name="y">インデックスに基づいて Y 入力値を提供します。</param>
            <param name="stiffness">使用するスプライン剛性パラメーター。</param>
            <returns>フィットされたスプラインを表すパス形状コレクション。</returns>
        </member>
        <member name="M:Infragistics.Portable.Controls.Charts.Util.Numeric.Spline2D(System.Int32,System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double},System.Double)">
            <summary>データにフィットした平面スプラインを返します。</summary>
            <param name="startIndex">開始するインデックス。</param>
            <param name="endIndex">終了インデックス。</param>
            <param name="x">インデックスに基づいて X 入力値を提供します。</param>
            <param name="y">インデックスに基づいて Y 入力値を提供します。</param>
            <param name="stiffness">使用するスプライン剛性パラメーター。</param>
            <returns>フィットされたスプラインを表すパス形状コレクション。</returns>
        </member>
        <member name="T:Infragistics.Portable.Clipper">
            <summary>変更された Sutherland-Hodge クリッピング。</summary>
        </member>
        <member name="P:Infragistics.Portable.Clipper.Target">
            <summary>クリップした ポイントのコピー先ターゲット。</summary>
        </member>
        <member name="M:Infragistics.Portable.Clipper.#ctor(Infragistics.Portable.Rect,System.Boolean)">
            <summary>Clipper クラスの新しいインスタンスを初期化します。</summary>
            <param name="clip">クリップ四角形</param>
            <param name="isClosed">True の場合ポリゴンとしてクリップされ、False の場合ポリラインとしてクリップされます。</param>
        </member>
        <member name="M:Infragistics.Portable.Clipper.#ctor(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>Clipper クラスの新しいインスタンスを初期化します。</summary>
            <param name="left">クリップ矩形の左端または NaN。</param>
            <param name="bottom">クリップ矩形の下端または NaN。</param>
            <param name="right">クリップ矩形の右端または NaN。</param>
            <param name="top">クリップ矩形の上端または NaN。</param>
            <param name="isClosed">True の場合ポリゴンとしてクリップされ、False の場合ポリラインとしてクリップされます。</param>
        </member>
        <member name="M:Infragistics.Portable.Clipper.Add(Infragistics.Portable.Point)">
            <summary>クリッパーに Point を追加します。</summary>
            <param name="point">クリッピング操作の対象とする Point。</param>
        </member>
        <member name="P:Infragistics.Portable.Clipper.IsClosed">
            <summary>ブール値。このクリッパーが閉じたシェープをクリッピングできように構成されている場合は true、そうでない場合は false。</summary>
        </member>
        <member name="T:Infragistics.Portable.EdgeClipper">
            <summary>Sutherland-Hodge クリッパーのクリッピング段階を表します。</summary>
            <remarks>EdgeClipper はもうひとつのエッジ クリッパーまたは「本物の」IList 実装のいずれかに透過的にパイプとなることができるように IList を実装します。</remarks>
        </member>
        <member name="P:Infragistics.Portable.EdgeClipper.Dst">
            <summary>現在のエッジ クリッパー オブジェクトの宛先を設定/取得します。</summary>
            <remarks>エッジ クリッパーの宛先を設定すると段階をリセットします。</remarks>
        </member>
        <member name="M:Infragistics.Portable.EdgeClipper.Add(Infragistics.Portable.Point)">
            <summary>現在のエッジ クリッパーにポイントを追加した結果、宛先の IList に送られるゼロ、ひとつまたは 2 つのポイントになります。</summary>
            <param name="cur">クリッピング段階に追加するポイント。</param>
        </member>
        <member name="M:Infragistics.Portable.EdgeClipper.Clear">
            <summary>エッジ クリッピング段階をフラッシュします。</summary>
        </member>
        <member name="M:Infragistics.Portable.EdgeClipper.IsInside(Infragistics.Portable.Point)">
            <summary>現在のクリッピング段階のエッジに関連してポイントの状態を取得します。</summary>
            <param name="pt">テストするポイント</param>
            <returns>ポイントがエッジ内部または上にある場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Portable.EdgeClipper.Intersection(Infragistics.Portable.Point,Infragistics.Portable.Point)">
            <summary>現在のクリッピング段階のエッジとエッジの交差を取得します。</summary>
            <param name="b">エッジの始ポイント</param>
            <param name="e">エッジの終ポイント</param>
            <returns>現在のクリッピング段階のエッジとエッジの交差</returns>
        </member>
        <member name="T:Infragistics.Portable.LeftClipper">
            <summary>クリップ ウィンドウの左端の特化したクリッピング段階を表します。</summary>
        </member>
        <member name="T:Infragistics.Portable.BottomClipper">
            <summary>クリップ ウィンドウの下端の特化したクリッピング段階を表します。</summary>
        </member>
        <member name="T:Infragistics.Portable.RightClipper">
            <summary>クリップ ウィンドウの右端の特化したクリッピング段階を表します。</summary>
        </member>
        <member name="T:Infragistics.Portable.TopClipper">
            <summary>クリップ ウィンドウの上端の特化したクリッピング段階を表します。</summary>
        </member>
        <member name="T:Infragistics.Portable.Flattener">
            <summary>線を平坦にするための Utility クラス。</summary>
        </member>
        <member name="M:Infragistics.Portable.Flattener.Spiral(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>指定された Archimidean スパイラル曲線を、指定された最大エリア誤差で平坦化します。</summary>
            <param name="startAngle">曲線の開始角度 (ラジアン単位)。</param>
            <param name="startRadius">曲線の開始角度。</param>
            <param name="endAngle">曲線の終了角度 (ラジアン単位)。</param>
            <param name="endRadius">曲線の終了角度。</param>
            <param name="error">近似値とスパイラルの間の最大誤差。</param>
            <returns>[0, 1] の範囲の補間パラメーターのリスト。</returns>
        </member>
        <member name="M:Infragistics.Portable.Flattener.Flatten(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double},System.Double)">
            <summary>Douglas-Peucker アルゴリズムを使用して、指定した解像度に従って線を平坦化します。</summary>
            <param name="count">線の中の点の数</param>
            <param name="X">i 番目の点の X 座標。</param>
            <param name="Y">i 番目の点の Y 座標。</param>
            <param name="resolution">最大の平面化エラー。</param>
            <returns>平坦化されたバージョンを形成する点のインデックス。元の線の最初と最後の点は、存在することが保証されます。</returns>
        </member>
        <member name="M:Infragistics.Portable.Flattener.Flatten(System.Collections.Generic.IList{System.Int32},System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double},System.Int32,System.Int32,System.Double)">
            <summary>Douglas-Peucker アルゴリズムを使用して、指定した解像度に従って線を平坦化します。</summary>
            <param name="result">フラット化した点のインデックス リスト。</param>
            <param name="X">i 番目の点の X 座標。</param>
            <param name="Y">i 番目の点の Y 座標。</param>
            <param name="b">フラット化操作の開始インデックス。</param>
            <param name="e">フラット化操作の終了インデックス。</param>
            <param name="E">最大の平面化エラー。</param>
            <returns>平坦化されたバージョンを形成する点のインデックス。元の線の最初と最後の点は、存在することが保証されます。</returns>
        </member>
        <member name="M:Infragistics.Portable.Flattener.Flatten(System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32},System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double},System.Int32,System.Int32,System.Double)">
            <summary>Douglas-Peucker アルゴリズムを使用して、指定した解像度に従って線を平坦化します。</summary>
            <param name="result">フラット化した点のインデックス リスト。</param>
            <param name="indices">フラット化中の点のインデックス。</param>
            <param name="X">i 番目の点の X 座標。</param>
            <param name="Y">i 番目の点の Y 座標。</param>
            <param name="b">フラット化操作の開始インデックス。</param>
            <param name="e">フラット化操作の終了インデックス。</param>
            <param name="E">最大の平面化エラー。</param>
            <returns>平坦化されたバージョンを形成する点のインデックス。元の線の最初と最後の点は、存在することが保証されます。</returns>
        </member>
        <member name="M:Infragistics.Portable.Flattener.FastFlatten(System.Collections.Generic.List{System.Int32},System.Double[],System.Double[],System.Int32,System.Int32,System.Double)">
            <summary>パフォーマンスを最適化したフラット化ルーチン。</summary>
            <param name="result">フラット化した点のインデックス リスト。</param>
            <param name="X">i 番目の点の X 座標。</param>
            <param name="Y">i 番目の点の Y 座標。</param>
            <param name="b">フラット化操作の開始インデックス。</param>
            <param name="e">フラット化操作の終了インデックス。</param>
            <param name="E">最大の平面化エラー。</param>
            <returns>平坦化されたバージョンを形成する点のインデックス。元の線の最初と最後の点は、存在することが保証されます。</returns>
        </member>
        <member name="M:Infragistics.Portable.Flattener.Spline(System.Int32,System.Func{System.Int32,System.Double},System.Func{System.Int32,System.Double})">
            <summary>指定した代表点をもつスプラインの各点を返します。</summary>
            <param name="count">ソース点の数。</param>
            <param name="X">指定したインデックスにある代表点の X 座標を調べさせます。</param>
            <param name="Y">指定したインデックスにある代表点の Y 座標を調べさせます。</param>
            <returns>指定した代表点をもつスプラインの各点。</returns>
        </member>
        <member name="T:Infragistics.Portable.GeometryUtil">
            <summary>図形操作の Utility クラス。</summary>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.SimplifyAngle(System.Double)">
            <summary>角度を 0 と 360 の間で単純化します。</summary>
            <param name="angle">単純化する角度。</param>
            <returns>角度は、0 と 360 の間の値に単純化されます。</returns>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.AngleFromSlope(System.Double)">
            <summary>傾斜に基づいて線の角度を取得します。</summary>
            <param name="slope">傾斜</param>
            <returns>傾斜に基づいて線の角度を取得します。</returns>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.Slope(Infragistics.Portable.Point,Infragistics.Portable.Point)">
            <summary>2 つの既知のポイントに基づいて線の傾斜を計算します。</summary>
            <param name="point1">線上の 1 つ目のポイント。</param>
            <param name="point2">2 つ目のポイント。</param>
            <returns>ポイント 1 とポイント 2 のポイントを含む線の傾斜。</returns>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.Eccentricity(Infragistics.Portable.Rect)">
            <summary>特定の境界線を持つ楕円の偏心を計算します。</summary>
            <param name="bounds">楕円形の境界矩形。</param>
            <returns>特定の境界線を持つ楕円の偏心。</returns>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.PointOnEllipse(System.Double,System.Double,Infragistics.Portable.Point,System.Double,System.Double)">
            <summary>指定した角度と範囲で楕円にポイントを取得します。</summary>
            <param name="theta">楕円のポイントを求める、弧度で表される角度 (ラジアン)。</param>
            <param name="eccentricity">楕円の偏心。</param>
            <param name="center">楕円の中心点。</param>
            <param name="halfHeight">楕円形の高さの半分。</param>
            <param name="extent">楕円の中心と表面に関連するポイントの位置は、楕円の中心は 0 、表面は 1 とする 0 から 1 の間の値で表されます。</param>
            <returns>指定した角度と範囲にある楕円のポイント。</returns>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.FindCenter(System.Double,System.Double,System.Boolean,System.Double,System.Double)">
            <summary>現在のチャートの中心を計算します。</summary>
            <param name="width">コントロールの幅。</param>
            <param name="height">コントロールの高さ。</param>
            <param name="exploded">ポイントが分解されたかどうか。</param>
            <param name="angle">スライスの角度。</param>
            <param name="radius">半径の値。</param>
            <returns>チャートの中心点。</returns>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.FindRadialPoint(Infragistics.Portable.Point,System.Double,System.Double)">
            <summary>ラジアル パラメーターで一定の座標の点を検索します。</summary>
            <param name="center">境界上で点を求める円の中心。</param>
            <param name="angle">点を求める角度。</param>
            <param name="radius">円の半径。</param>
            <returns>所定の中心、半径、指定角度の円の境界上の点。</returns>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.PointAtDistance(Infragistics.Portable.Point,Infragistics.Portable.Point,System.Double)">
            <summary>最初のポイントから指定した距離までの 2 つのポイント間にあるポイントを検索します。</summary>
            <param name="p1">最初のポイント。</param>
            <param name="p2">2 番目のポイント。</param>
            <param name="distance">最初のポイントからの距離。</param>
            <returns>指定された位置にある Point。</returns>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.GetSegmentLength(Infragistics.Portable.Point,Infragistics.Portable.Point)">
            <summary>2 つのポイントによって指定されたセグメントの長さを取得します。</summary>
            <param name="p1">最初のポイント。</param>
            <param name="p2">2 番目のポイント。</param>
            <returns>セグメントの長さ。</returns>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.GetCenterFromArcSegment(Infragistics.Portable.Point,Infragistics.Portable.Point,System.Double,System.Boolean,System.Boolean)">
            <summary>円弧セグメントの中点を取得します。</summary>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.GetAngleTo(Infragistics.Portable.Point,Infragistics.Portable.Point)">
            <summary>指定した中心点からポイントへの角度を取得します。</summary>
            <param name="center"></param>
            <param name="toPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.GeometryUtil.GetCircleIntersection(Infragistics.Portable.Point,Infragistics.Portable.Point,Infragistics.Portable.Point,System.Double)">
            <summary>特定の中点および半径の円および線と交差するポイントを取得します。</summary>
        </member>
        <member name="T:Infragistics.Portable.PathFigureUtil">
            <summary>PathFigures のユーティリティ メソッド。</summary>
        </member>
        <member name="M:Infragistics.Portable.PathFigureUtil.Duplicate(Infragistics.Portable.Graphics.Media.PathFigureCollection)">
            <summary>指定したパス形状コレクションを複製します。</summary>
            <param name="pathFigureCollection">パス形状コレクション。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.PathFigureUtil.Duplicate(Infragistics.Portable.Graphics.Media.PathFigure)">
            <summary>現在の PathFigure オブジェクトの複製を作成します。</summary>
            <param name="pathFigure">現在の PathFigure オブジェクトを返します。</param>
            <returns>新しい PathFigure。</returns>
        </member>
        <member name="T:Infragistics.Portable.PolygonUtil">
            <summary>多角形またはポイントのリストとの操作のユーティリティ メソッドを提供します。</summary>
        </member>
        <member name="M:Infragistics.Portable.PolygonUtil.PolygonContainsPoint(System.Collections.Generic.IList{Infragistics.Portable.Point},Infragistics.Portable.Point)">
            <summary>多角形が指定したポイントを持つかどうかを確認します。</summary>
        </member>
        <member name="T:Infragistics.Portable.SmartPlaceableWrapper`1">
            <summary>FrameworkElement の ISmartPlaceable ラッパー クラス。SmartPlacer クラスと共に使用。</summary>
        </member>
        <member name="M:Infragistics.Portable.SmartPlaceableWrapper`1.#ctor">
            <summary>SmartPlaceableWrapper コンストラクター。</summary>
        </member>
        <member name="P:Infragistics.Portable.SmartPlaceableWrapper`1.NoWiggle">
            <summary>true の場合、スマート配置要素の位置はシフトされません。</summary>
        </member>
        <member name="P:Infragistics.Portable.SmartPlaceableWrapper`1.Element">
            <summary>関連付けられた FrameworkElement を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.SmartPlaceableWrapper`1.ElementLocationResult">
            <summary>スマート配置後の要素の位置。</summary>
        </member>
        <member name="P:Infragistics.Portable.SmartPlaceableWrapper`1.OriginalLocation">
            <summary>Element の元の場所を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Portable.SmartPlaceableWrapper`1.GetSmartPositions">
            <summary>現在の SmartPlaceableWrapper の SmartPositions の配列を取得します。</summary>
            <returns>現在の SmartPlaceableWrapper の SmartPositions の配列。</returns>
        </member>
        <member name="F:Infragistics.Portable.SmartPlaceableWrapper`1.smartPositionDefault">
            <summary>デフォルトの SmartPosition からなるダミー配列</summary>
        </member>
        <member name="F:Infragistics.Portable.SmartPlaceableWrapper`1.smartPositions">
            <summary>優先順位順の SmartPosition。</summary>
        </member>
        <member name="M:Infragistics.Portable.SmartPlaceableWrapper`1.GetSmartBounds(Infragistics.Portable.SmartPosition)">
            <summary>指定した SmartPosition で SmartPlaceableWrapper のスマート配置境界を取得します。</summary>
            <param name="position">SmartPlaceableWrapper の配置方法を示す SmartPosition 値。</param>
            <returns>所定の SmartPosition における SmartPlaceableWrapper の計算済み境界を表す Rect。</returns>
        </member>
        <member name="P:Infragistics.Portable.SmartPlaceableWrapper`1.Opacity">
            <summary>基になる要素の Opacity です。</summary>
        </member>
        <member name="P:Infragistics.Portable.SmartPlaceableWrapper`1.SmartPosition">
            <summary>SmartPlaceableWrapper の配置に使用中の SmartPosition。</summary>
        </member>
        <member name="M:Infragistics.Portable.SmartPlaceableWrapper`1.GetOffset(Infragistics.Portable.SmartPosition,System.Double,System.Double)">
            <summary>(OriginalLocation から) 特定の SmartPosition を表すオフセットを返します。</summary>
            <param name="position">SmartPosition。</param>
            <param name="w">位置されている要素の幅。</param>
            <param name="h">位置されている要素の高さ。</param>
            <returns>OriginalLocation からのオフセットを表すポイント。</returns>
        </member>
        <member name="T:Infragistics.Portable.SmartPosition">
            <summary>矩形の基点に相対するスマート ラベル配置の利用可能な位置を説明します。</summary>
        </member>
        <member name="F:Infragistics.Portable.SmartPosition.LeftTop">
            <summary>有効なスマート配置位置として左上を指定します。</summary>
        </member>
        <member name="F:Infragistics.Portable.SmartPosition.CenterTop">
            <summary>有効なスマート配置位置として上中央を指定します。</summary>
        </member>
        <member name="F:Infragistics.Portable.SmartPosition.RightTop">
            <summary>有効なスマート配置位置として右上を指定します。</summary>
        </member>
        <member name="F:Infragistics.Portable.SmartPosition.LeftCenter">
            <summary>有効なスマート配置位置として左中央を指定します。</summary>
        </member>
        <member name="F:Infragistics.Portable.SmartPosition.CenterCenter">
            <summary>有効なスマート配置位置として真ん中中央を指定します。</summary>
        </member>
        <member name="F:Infragistics.Portable.SmartPosition.RightCenter">
            <summary>有効なスマート配置位置として右中央を指定します。</summary>
        </member>
        <member name="F:Infragistics.Portable.SmartPosition.LeftBottom">
            <summary>有効なスマート配置位置として左下を指定します。</summary>
        </member>
        <member name="F:Infragistics.Portable.SmartPosition.CenterBottom">
            <summary>有効なスマート配置位置として下中央を指定します。</summary>
        </member>
        <member name="F:Infragistics.Portable.SmartPosition.RightBottom">
            <summary>有効なスマート配置位置として右下を指定します。</summary>
        </member>
        <member name="T:Infragistics.Portable.ISmartPlaceable">
            <summary>スマート プレーサー オブジェクトによって配置されたオブジェクトのインターフェイス。</summary>
            <remarks>SmartPosition 値への明確な意図はありますが、クラスの実装は希望どおりに値を自由に解釈できます。唯一の制約は位置パラメーターをコヒーレントに解釈することです: SetPosition() を呼び出すことによって設定される境界は GetPosition() を呼び出すことによって返される境界と同じでなければなりません。</remarks>
        </member>
        <member name="M:Infragistics.Portable.ISmartPlaceable.GetSmartPositions">
            <summary>現在のオブジェクトの有効な位置の配列を取得します。オブジェクトは課すことができる制約を個々に課すことができます。とはいえ実際には静的配列を返すだけの場合が多いです。プレーサーが最高の全体的な位置を選択するとしても、理想的な位置を見つけるやいなや検索を中止する点から、有効な位置の順序はそれなりに重要性があります。結局のところ、優先配置の順序でソートされた配列を返す必要があります。</summary>
            <returns>現在のオブジェクトの有効なスマート位置の配列。</returns>
        </member>
        <member name="M:Infragistics.Portable.ISmartPlaceable.GetSmartBounds(Infragistics.Portable.SmartPosition)">
            <summary>指定された位置に配置されているかのように現在のオブジェクトの境界を取得します。</summary>
            <param name="position">境界のスマート位置。</param>
            <returns>現在のオブジェクトの境界</returns>
        </member>
        <member name="P:Infragistics.Portable.ISmartPlaceable.SmartPosition">
            <summary>現在のオブジェクトの位置を取得または設定します。</summary>
            <remarks>スマート位置が設定された後で、現在のオブジェクトの境界は同じ位置で呼び出される場合 GetSmartBounds() から返されることが前提となります。</remarks>
        </member>
        <member name="P:Infragistics.Portable.ISmartPlaceable.Opacity">
            <summary>現在のオブジェクトの不透明度を設定/取得します。</summary>
        </member>
        <member name="T:Infragistics.Portable.SmartPlacer">
            <summary>重複を最小限にしようとして、一連の管理された SmartPositions の各オブジェクトの位置を管理します。</summary>
            <remarks>衝突防止機能は O(n) 記憶領域で O(n^2) で実行する欲張りアルゴリズムを使用します。これよりも実行回数が少ない既知のアルゴリズムがないとしても、シミュレートしたアニーリングは同程度の実行回数で若干よい結果を生み出すことができます。</remarks>
        </member>
        <member name="M:Infragistics.Portable.SmartPlacer.#ctor">
            <summary>デフォルトの構成で新しい SmartPlacer を作成します。</summary>
        </member>
        <member name="P:Infragistics.Portable.SmartPlacer.Bounds">
            <summary>このスマート プレーサーの配置境界を取得または設定します。配置境界の設定は以前に配置されたオブジェクトに影響がありません。</summary>
        </member>
        <member name="P:Infragistics.Portable.SmartPlacer.Overlap">
            <summary>配置可能な各領域の [0, 1] パーセントとして表される最大の許容される配置されたオーバーラップを設定または取得します。配置境界のオーバーラップは以前に配置されたオブジェクトに影響がありません。</summary>
        </member>
        <member name="P:Infragistics.Portable.SmartPlacer.Fade">
            <summary>現在のオーバーラップを超える ISmartPlaceables のフェード指数を設定/取得します。配置フェードの設定は以前に配置されたオブジェクトに影響がありません。</summary>
        </member>
        <member name="M:Infragistics.Portable.SmartPlacer.Place(Infragistics.Portable.ISmartPlaceable)">
            <summary>現在配置されたオブジェクトに関連してオブジェクトを配置します。このメソッドを呼び出すとオブジェクトは直ちに更新されますが、以前に配置されたオブジェクトに対する影響はありません。配置境界内に配置できない配置可能、または重複することなく以前に配置したオブジェクトは非表示になります。</summary>
            <param name="smartPlaceable">配置するオブジェクト。</param>
        </member>
        <member name="T:Infragistics.Portable.ComponentContainer">
            <summary>コンポーネント コンテナーの基本クラスを表します。</summary>
        </member>
        <member name="M:Infragistics.Portable.ComponentContainer.#ctor">
            <summary>ComponentContainer のインスタンスを作成します。</summary>
        </member>
        <member name="E:Infragistics.Portable.ComponentContainer.SizeChanged">
            <summary>コンポーネント コンテナーのサイズが変更された時に発生します。</summary>
        </member>
        <member name="E:Infragistics.Portable.ComponentContainer.Invalidated">
            <summary>コンポーネント コンテナーが無効になった時に発生します。</summary>
        </member>
        <member name="E:Infragistics.Portable.ComponentContainer.AfterInvalidated">
            <summary>コンポーネント コンテナーが無効になった後に発生します。</summary>
        </member>
        <member name="P:Infragistics.Portable.ComponentContainer.Width">
            <summary>コンポーネント コンテナーの Width を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.ComponentContainer.Height">
            <summary>コンポーネント コンテナーの Height を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Portable.ComponentContainer.RaiseSizeChanged(System.Double,System.Double)">
            <summary>SizeChanged イベントを発生します。</summary>
        </member>
        <member name="M:Infragistics.Portable.ComponentContainer.RaiseInvalidated(Infragistics.Portable.IRenderer)">
            <summary>Invalidated イベントを発生します。</summary>
        </member>
        <member name="M:Infragistics.Portable.ComponentContainer.RaiseAfterInvalidated(Infragistics.Portable.IRenderer)">
            <summary>Invalidated イベントを発生します。</summary>
        </member>
        <member name="P:Infragistics.Portable.ComponentContainer.PixelScalingRatio">
            <summary>コントロールのピクセル密度に影響するために使用されるスケール値を取得または設定します。</summary>
            <remarks>より高いスケール比率はビジュアルを向上しますが、メモリの使用を増加します。より低い値はコントロールをぼやけます。</remarks>
        </member>
        <member name="T:Infragistics.Portable.InterpolationMode">
            <summary>色補間のモードを説明します。</summary>
        </member>
        <member name="F:Infragistics.Portable.InterpolationMode.RGB">
            <summary>RGB スペースの補間です。</summary>
        </member>
        <member name="F:Infragistics.Portable.InterpolationMode.HSV">
            <summary>HSV スペースの補間です。</summary>
        </member>
        <member name="T:Infragistics.Portable.ColorUtil">
            <summary>色に基づいた操作の Utility クラス。</summary>
        </member>
        <member name="M:Infragistics.Portable.ColorUtil.RandomColor(System.Byte)">
            <summary>ランダムの色を返します。</summary>
            <param name="alpha">生成する色のアルファ レベル</param>
            <returns>指定アルファ レベルを用いたランダムな色</returns>
        </member>
        <member name="M:Infragistics.Portable.ColorUtil.RandomHue(Infragistics.Portable.Graphics.Media.Color)">
            <summary>ランダムに選択された色を取得します。</summary>
            <param name="color">返された色のアルファ、彩度、および値を指定します。</param>
            <returns>新しい色</returns>
        </member>
        <member name="M:Infragistics.Portable.ColorUtil.GetInterpolation(Infragistics.Portable.Graphics.Media.Color,System.Double,Infragistics.Portable.Graphics.Media.Color,Infragistics.Portable.InterpolationMode)">
            <summary>現在の色から指定した色への補間を取得します。</summary>
            <param name="minimum">開始色、p=0.0 に対応します。</param>
            <param name="interpolation_">[0.0, 1.0] になるように想定された補間パラメーター</param>
            <param name="maximum_">終了色、p=1.0 に対応します。</param>
            <param name="interpolationMode">使用する補間モード</param>
            <returns>指定した補間パラメーターに対応する新しい色</returns>
            <remarks>色相には常に 2 つの補間パスがあり、この関数は最も短いものを選択します。したがってたとえば赤から青への補間はオレンジ、黄色、緑ではなく紫になります。</remarks>
        </member>
        <member name="M:Infragistics.Portable.ColorUtil.GetAHSVInterpolation(System.Double[],System.Double,System.Double[])">
            <summary>2 つの色の間の補間された色を取得します。</summary>
            <param name="minimum">開始色、p=0.0 に対応します。</param>
            <param name="interpolation">[0.0, 1.0] になるように想定された補間パラメーター</param>
            <param name="maximum">終了色、p=1.0 に対応します。</param>
            <returns>指定した補間パラメーターに対応する新しい色</returns>
            <remarks>色相には常に 2 つの補間パスがあり、この関数は最も短いものを選択します。したがってたとえば赤から青への補間はオレンジ、黄色、緑ではなく紫になります。</remarks>
        </member>
        <member name="M:Infragistics.Portable.ColorUtil.GetLightened(Infragistics.Portable.Graphics.Media.Color,System.Double)">
            <summary>指定された量だけ暗くしたまたは明るくしたこの色に対応する新しい色を取得します。</summary>
            <param name="color"></param>
            <param name="interpolation">完全に暗くする場合は -1.0、完全に明るくするには 1.0</param>
            <returns>新しい色</returns>
        </member>
        <member name="M:Infragistics.Portable.ColorUtil.GetAHSL(Infragistics.Portable.Graphics.Media.Color)">
            <summary>この色の ahsl コンポーネントを取得します</summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.ColorUtil.GetAHSV(Infragistics.Portable.Graphics.Media.Color)">
            <summary>この色の ahsv コンポーネントを取得します</summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.ColorUtil.FromAHSL(System.Double,System.Double,System.Double,System.Double)">
            <summary>指定した ahsl コンポーネントから色を取得します</summary>
            <param name="alpha">アルファ (透明度)。0 から 1 の間で表現した値。0 は透明で 1 は不透明です。</param>
            <param name="hue">色相 (色)。0 から 1 の間で表現した値。0 は赤で 1 も赤です。その間がオレンジ、黄色、緑、青、インディゴ、バイオレットになります。</param>
            <param name="saturation">飽和度 (彩度)。0 から 1 の間で表現した値。0 はグレイで 1 は完全飽和/カラフルです。</param>
            <param name="lightness">明度。0 から 1 の間で表現した値。0 は黒で 1 は白です。</param>
        </member>
        <member name="M:Infragistics.Portable.ColorUtil.FromAHSV(System.Double,System.Double,System.Double,System.Double)">
            <summary>指定した ahsv コンポーネントから色を取得します</summary>
        </member>
        <member name="M:Infragistics.Portable.ColorUtil.GetRandomColor(System.Int32)">
            <summary>色の生成された配列からランダム カラーを取得します。</summary>
            <param name="index">生成した配列に取得する色のインデックス。</param>
            <returns>指定したインデックスの RandomColors 配列の色。</returns>
        </member>
        <member name="M:Infragistics.Portable.ColorUtil.ColorToInt(Infragistics.Portable.Graphics.Media.Color)">
            <summary>ビットマップで使用する整数表現に色を変換します。</summary>
            <param name="color">整数に変換する色。</param>
            <returns>所定の色を表す整数。</returns>
        </member>
        <member name="T:Infragistics.Portable.DoubleValueChangedEventHandler">
            <summary>double 値の変更イベントを処理する方法を表します。</summary>
            <param name="sender">イベント ハンドラーが関連付けられているオブジェクト。</param>
            <param name="e">イベント データ。</param>
        </member>
        <member name="T:Infragistics.Portable.ErrorBarCalculatorReference">
            <summary>散布シリーズで誤差範囲の計算式の方向を選択するための利用可能な動作を説明します。</summary>
        </member>
        <member name="F:Infragistics.Portable.ErrorBarCalculatorReference.X">
            <summary>変数 X。</summary>
        </member>
        <member name="F:Infragistics.Portable.ErrorBarCalculatorReference.Y">
            <summary>変数 Y。</summary>
        </member>
        <member name="T:Infragistics.Portable.ErrorBarCalculatorType">
            <summary>誤差範囲の計算式の利用可能なタイプを説明します。</summary>
        </member>
        <member name="F:Infragistics.Portable.ErrorBarCalculatorType.Fixed">
            <summary>一定の値を提供するタイプの電卓。</summary>
        </member>
        <member name="F:Infragistics.Portable.ErrorBarCalculatorType.Percentage">
            <summary>各入力値を一定のパーセンテージで提供するタイプの電卓。</summary>
        </member>
        <member name="F:Infragistics.Portable.ErrorBarCalculatorType.Data">
            <summary>入力値を直接提供するタイプの電卓。</summary>
        </member>
        <member name="F:Infragistics.Portable.ErrorBarCalculatorType.StandardDeviation">
            <summary>入力値の標準偏差を提供するタイプの電卓。</summary>
        </member>
        <member name="F:Infragistics.Portable.ErrorBarCalculatorType.StandardError">
            <summary>入力値の標準誤差を提供するタイプの電卓。</summary>
        </member>
        <member name="T:Infragistics.Portable.IErrorBarCalculator">
            <summary>誤差範囲計算機インターフェイス。</summary>
        </member>
        <member name="M:Infragistics.Portable.IErrorBarCalculator.GetCalculatorType">
            <summary>タイプを取得します。</summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.IErrorBarCalculator.GetIndependentValue">
            <summary>独立した値を取得します。</summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.IErrorBarCalculator.GetDependentValue(System.Double)">
            <summary>依存する値を取得します。</summary>
            <param name="value">値。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.IErrorBarCalculator.GetItemColumn">
            <summary>この計算機に関連付けられたファスト項目列を取得します。</summary>
            <returns></returns>
        </member>
        <member name="E:Infragistics.Portable.IErrorBarCalculator.Changed">
            <summary>電卓のプロパティを変更すると発生するイベントです。</summary>
        </member>
        <member name="M:Infragistics.Portable.IErrorBarCalculator.HasConstantPosition">
            <summary>位置が不変かどうかを決定します。</summary>
            <returns>位置が定数である場合は <c>true</c>。そうでない場合は <c>false</c>。</returns>
        </member>
        <member name="M:Infragistics.Portable.IErrorBarCalculator.GetPosition">
            <summary>位置を取得します。</summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Portable.RectChangedEventHandler">
            <summary>矩形変更イベントを処理する方法を表します。</summary>
            <param name="sender">イベント ハンドラーが関連付けられているオブジェクト。</param>
            <param name="e">イベント データ。</param>
        </member>
        <member name="T:Infragistics.Portable.ScreenRectChangedEventHandler">
            <summary>矩形変更イベントを処理する方法を表します。</summary>
            <param name="sender">イベント ハンドラーが関連付けられているオブジェクト。</param>
            <param name="e">イベント データ。</param>
        </member>
        <member name="T:Infragistics.Portable.ArrayUtil">
            <summary>配列操作の Utility クラス。</summary>
        </member>
        <member name="M:Infragistics.Portable.ArrayUtil.Shuffle``1(System.Collections.Generic.IList{``0})">
            <summary>現在の IList オブジェクトのコンテンツをシャッフルします。</summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
        </member>
        <member name="M:Infragistics.Portable.ArrayUtil.InsertionIndex``1(System.Collections.Generic.IList{``0},``0)">
            <summary>並べ替えたリストで要素の挿入インデックスを返します。</summary>
            <remarks>このメソッドを呼び出す前に、リストは昇順で並べ替えた必要があります。</remarks>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="value"></param>
            <returns>指定された値の挿入インデックス。</returns>
        </member>
        <member name="M:Infragistics.Portable.ArrayUtil.InsertionIndex``1(System.Collections.Generic.IList{``0},System.Comparison{``0},``0)">
            <summary>並べ替えたリストで要素の挿入インデックスを返します。</summary>
            <remarks>このメソッドを呼び出す前に、リストは指定された比較で並べ替えた必要があります。</remarks>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="comparison"></param>
            <param name="value"></param>
            <returns>指定された値の挿入インデックス。</returns>
        </member>
        <member name="M:Infragistics.Portable.ArrayUtil.BinarySearch``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Int32})">
            <summary>所定の比較機能を利用してリスト内の値に対してバイナリ検索を実行します。</summary>
            <typeparam name="T">リスト内の項目の Type。</typeparam>
            <param name="list">検索する項目のリスト。</param>
            <param name="comparisonFunction">リストでターゲット項目の検索に使用する比較機能。</param>
            <returns>リスト内で見つかった項目のインデックス。</returns>
        </member>
        <member name="M:Infragistics.Portable.ArrayUtil.BinarySearch``1(Infragistics.Portable.IIndexedPool{``0},System.Func{``0,System.Int32})">
            <summary>所定の比較機能を利用してインデックスされたプール内の値に対してバイナリ検索を実行します。</summary>
            <typeparam name="T">プール内の項目の Type。</typeparam>
            <param name="list">検索する項目のプール。</param>
            <param name="comparisonFunction">プールでターゲット項目の検索に使用する比較機能。</param>
            <returns>プール内で見つかった項目のインデックス。</returns>
        </member>
        <member name="M:Infragistics.Portable.ArrayUtil.ElementAtMod``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>リストのモジューラス インデックスにある要素を取得します。リストが null または空の場合、null 値。</summary>  
        </member>
        <member name="T:Infragistics.Portable.CoreGeometryUtil">
            <summary>図形操作の Utility クラス。</summary>
        </member>
        <member name="M:Infragistics.Portable.CoreGeometryUtil.SimplifyAngle(System.Double)">
            <summary>角度を 0 と 360 の間で単純化します。</summary>
            <param name="angle">単純化する角度。</param>
            <returns>角度は、0 と 360 の間の値に単純化されます。</returns>
        </member>
        <member name="M:Infragistics.Portable.CoreGeometryUtil.GetCenterFromArcSegment(Infragistics.Portable.Point,Infragistics.Portable.Point,System.Double,System.Boolean,System.Boolean)">
            <summary>円弧セグメントの中点を取得します。</summary>
        </member>
        <member name="T:Infragistics.Portable.Extensions">
            <summary>Infragistics Data Visualization で使用する拡張メソッドが属するクラス。</summary>
        </member>
        <member name="M:Infragistics.Portable.Extensions.Reset(Infragistics.Portable.Graphics.Media.PathGeometry)">
            <summary>所定の PathGeometry をリセットします。</summary>
            <param name="geom">リセットする PathGeometry。</param>
        </member>
        <member name="M:Infragistics.Portable.Extensions.Reset(Infragistics.Portable.Graphics.Media.GeometryGroup)">
            <summary>所定の GeometryGroup をリセットします。</summary>
            <param name="geom">リセットする GeometryGroup。</param>
        </member>
        <member name="M:Infragistics.Portable.Extensions.Detach(Infragistics.Portable.Components.UI.FrameworkElement)">
            <summary>所定の FrameworkElement をビジュアル ツリーから切り離します。</summary>
            <param name="child">ビジュアル ツリーから切り離す FrameworkElement。</param>
        </member>
        <member name="M:Infragistics.Portable.Extensions.TransferChildrenTo(Infragistics.Portable.Components.UI.Controls.Panel,Infragistics.Portable.Components.UI.Controls.Panel)">
            <summary>Panel のすべての Children を別の Panel に移動します。</summary>
            <param name="from">Children の移動元の Panel。</param>
            <param name="to">Children の移動先の Panel。</param>
        </member>
        <member name="M:Infragistics.Portable.Extensions.IsPlottable(Infragistics.Portable.Point)">
            <summary>プロット可能な点の範囲に Point が収まるかどうかを判定します。</summary>
            <param name="point">監視下の Point。</param>
            <returns>所定の点がプロット可能な場合 true。そうでない場合は false。</returns>
        </member>
        <member name="M:Infragistics.Portable.Extensions.IsPlottable(Infragistics.Portable.Rect)">
            <summary>Rect がプロット可能な範囲に収まるかどうかを判定します。</summary>
            <param name="rect">監視下の Rect。</param>
            <returns>Rect がプロット可能な場合 true。それ以外は false。</returns>
        </member>
        <member name="T:Infragistics.Portable.Pool`1">
            <summary>再利用可能なオブジェクトのプールを表します。</summary>
            <typeparam name="T">プールされるオブジェクト タイプ。null 値を設定可能である必要があります。</typeparam>
        </member>
        <member name="M:Infragistics.Portable.Pool`1.#ctor">
            <summary>新しい Pool インスタンスを作成します。</summary>
        </member>
        <member name="P:Infragistics.Portable.Pool`1.Create">
            <summary>新しい項目を作成する関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.Pool`1.Disactivate">
            <summary>項目を無効にするために使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.Pool`1.Activate">
            <summary>項目を有効にするために使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.Pool`1.Destroy">
            <summary>古い項目を破棄するために使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.Pool`1.Item(System.Int32)">
            <summary>必要に応じてプールの拡張と項目の作成を行い、インデックス付き項目を取得します。</summary>
            <param name="index"></param>
            <returns>項目</returns>
        </member>
        <member name="M:Infragistics.Portable.Pool`1.Clear">
            <summary>プールから項目をクリアします。</summary>
        </member>
        <member name="P:Infragistics.Portable.Pool`1.Count">
            <summary>プールにある項目数を取得または設定します。</summary>
            <remarks>数を現在の値より小さい値に設定すると、プール項目は自動的に無効になります。</remarks>
        </member>
        <member name="P:Infragistics.Portable.Pool`1.Active">
            <summary>アクティブなオブジェクトのリスト。</summary>
        </member>
        <member name="P:Infragistics.Portable.Pool`1.Inactive">
            <summary>アクティブではないオブジェクトのリスト。</summary>
        </member>
        <member name="M:Infragistics.Portable.Pool`1.DoToAll(System.Action{`0})">
            <summary>プールのすべての項目でアクションを実行します。</summary>
            <param name="action">実行するアクション 。</param>
        </member>
        <member name="T:Infragistics.Portable.IPool`1">
            <summary>再利用可能なオブジェクトのプールを表します。</summary>
            <typeparam name="T">プールのオブジェクトのタイプ。</typeparam>
        </member>
        <member name="P:Infragistics.Portable.IPool`1.Create">
            <summary>新しい項目を作成する関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.IPool`1.Disactivate">
            <summary>項目を無効にするために使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.IPool`1.Activate">
            <summary>項目を有効にするために使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.IPool`1.Destroy">
            <summary>古い項目を破棄するために使用される関数を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Portable.IPool`1.Clear">
            <summary>プールからの値をクリアします。</summary>
        </member>
        <member name="T:Infragistics.Portable.IIndexedPool`1">
            <summary>整数インデックスにインデックスされる IPool。</summary>
            <typeparam name="T">プールのオブジェクトのタイプ。</typeparam>
        </member>
        <member name="P:Infragistics.Portable.IIndexedPool`1.Item(System.Int32)">
            <summary>指定したインデックスにある項目を取得します。</summary>
            <param name="index">項目を取得するインデックス。</param>
            <returns>要求された項目。</returns>
        </member>
        <member name="T:Infragistics.Portable.IHashPool`2">
            <summary>ハッシュ マップ IPool。</summary>
            <typeparam name="TKey">プールのキーのタイプ。</typeparam>
            <typeparam name="TValue">プール内値のタイプ。</typeparam>
        </member>
        <member name="P:Infragistics.Portable.IHashPool`2.Item(`0)">
            <summary>指定したキーの項目を取得します。</summary>
            <param name="key">項目を取得するキー。</param>
            <returns>要求された項目。</returns>
        </member>
        <member name="T:Infragistics.Portable.HashPool`2">
            <summary>ハッシュ マップ プールの実装。</summary>
            <typeparam name="TKey">プールのキーのタイプ。</typeparam>
            <typeparam name="TValue">プール内値のタイプ。</typeparam>
        </member>
        <member name="P:Infragistics.Portable.HashPool`2.Inactive">
            <summary>プールのアクティブではないメンバー。</summary>
        </member>
        <member name="P:Infragistics.Portable.HashPool`2.Active">
            <summary>プールのアクティブなメンバー。</summary>
        </member>
        <member name="M:Infragistics.Portable.HashPool`2.#ctor">
            <summary>新しい HashPool インスタンスを作成します。</summary>
        </member>
        <member name="P:Infragistics.Portable.HashPool`2.Create">
            <summary>新しい項目を作成する関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.HashPool`2.Disactivate">
            <summary>項目を無効にするために使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.HashPool`2.Activate">
            <summary>項目を有効にするために使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.HashPool`2.Destroy">
            <summary>古い項目を破棄するために使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.HashPool`2.Item(`0)">
            <summary>必要に応じてプールの拡張と項目の作成を行い、要求された項目を取得します。</summary>
            <param name="key"></param>
            <returns>項目</returns>
        </member>
        <member name="P:Infragistics.Portable.HashPool`2.ActiveKeys">
            <summary>アクティブ プール オブジェクトのキーを取得します。</summary>
        </member>
        <member name="M:Infragistics.Portable.HashPool`2.IsActiveKey(`0)">
            <summary>指定したキーがアクティブなセットにあるかどうかを返します。</summary>
            <param name="key">チェックするキー。</param>
            <returns>そのキーがアクティブなセットにある場合は true です。</returns>
        </member>
        <member name="M:Infragistics.Portable.HashPool`2.Remove(`0)">
            <summary>プールから提供したキーがある項目を削除します。</summary>
            <param name="key">削除する項目のキー。</param>
        </member>
        <member name="M:Infragistics.Portable.HashPool`2.Clear">
            <summary>ハッシュ プールから項目をクリアします。</summary>
        </member>
        <member name="P:Infragistics.Portable.HashPool`2.ActiveCount">
            <summary>アクティブ数のカウントを取得します。</summary>
        </member>
        <member name="M:Infragistics.Portable.HashPool`2.DoToAll(System.Action{`1})">
            <summary>プールのすべての項目でアクションを実行します。</summary>
            <param name="action">実行するアクション 。</param>
        </member>
        <member name="T:Infragistics.Portable.RectUtil">
            <summary>矩形に基づく計算に使用する Utility クラス。</summary>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetCenter(Infragistics.Portable.Rect)">
            <summary>現在の矩形の中心を取得します。</summary>
            <param name="rect">現在の矩形。</param>
            <returns>中心点</returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetArea(Infragistics.Portable.Rect)">
            <summary>現在の矩形の面積を計算します。</summary>
            <param name="rect">現在の矩形。</param>
            <returns>現在の矩形の面積。</returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.Duplicate(Infragistics.Portable.Rect)">
            <summary>現在の矩形のクローンを作成します。</summary>
            <param name="rect"></param>
            <returns>現在の矩形のクローン。</returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetLeader(Infragistics.Portable.Rect,Infragistics.Portable.Point)">
            <summary>指定されたアンカーへの引き出し線の現在の矩形の接続点を取得します。</summary>
            <remarks>アンカーが現在の矩形内にある場合、アンカーが返されます。</remarks>
            <param name="rect">アンカーに接合するための領域</param>
            <param name="anchor">矩形に接合するためのアンカー</param>
            <returns>接続点。</returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetDistanceSquared(Infragistics.Portable.Rect,Infragistics.Portable.Point)">
            <summary>現在の矩形から指定したポイントへの距離の 2 乗を計算します。</summary>
            <remarks>点が現在の矩形内にある場合、分離はゼロであると見なされます。</remarks>
            <param name="rect">現在の矩形。</param>
            <param name="pt">テストする点。</param>
            <returns>分離の平方。</returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetDistanceSquared(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>現在の矩形から指定した矩形への距離のスクエアを計算します。</summary>
            <remarks>矩形が交差する場合、分離はゼロであると見なされます。</remarks>
            <param name="rect">現在の矩形。</param>
            <param name="rc">テストする矩形。</param>
            <returns>分離の平方。</returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetDistanceSquared(Infragistics.Portable.Rect,System.Double,System.Double)">
            <summary>現在の矩形から指定したポイントへの距離の 2 乗を計算します。</summary>
            <param name="rc">現在の矩形。</param>
            <param name="X">点 X 座標。</param>
            <param name="Y">点 Y 座標。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.Contains(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>現在の矩形が完全に指定された矩形を含むかどうかを示します。</summary>
            <param name="rect">現在の矩形</param>
            <param name="rc">完全に含んでいることをテストするための矩形</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.IntersectsWith(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>指定された矩形が現在の矩形と交差するかどうかを示します。</summary>
            <param name="rect">現在の矩形</param>
            <param name="rc">チェックする矩形</param>
            <returns>指定された矩形が現在の矩形と交差する場合は True。そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.IntersectionArea(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>指定された矩形と現在の矩形の間の交差の面積を計算します。</summary>
            <param name="rect">現在の矩形</param>
            <param name="rc">チェックする矩形</param>
            <returns>矩形が交差しない場合、交差の面積または 0.0。</returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetInflated(Infragistics.Portable.Rect,System.Double,System.Double)">
            <summary>指定した幅および高さを使用して、現在の矩形をすべての方向でサイズ変更します。現在の矩形のサイズと位置は変更されません。</summary>
            <remarks>結果として生成された矩形の Width は指定された幅のオフセットの 2 倍大きくなるか小さくなります。矩形の左側と右側の両方に適用されるからです。同様に、結果として生成された矩形の Height は指定された高さの 2 倍大きくなるか小さくなります。<para>指定された幅または高さが現在の幅または高さよりも多く矩形を縮小する場合、すなわち矩形に負の領域を与える場合、矩形は Empty の矩形になります。</para>
            </remarks>
            <param name="rect"></param>
            <param name="width">矩形の左側と右側を拡大または縮小する量。</param>
            <param name="height">矩形の上側と下側を拡大または縮小する量。</param>
            <returns>膨らんだ矩形。</returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.InflateBy(Infragistics.Portable.Rect,System.Double,System.Double)">
            <summary>現在の矩形を展開します。</summary>
            <param name="rect">長方形。</param>
            <param name="dx">dx。</param>
            <param name="dy">dy。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.Inflate(Infragistics.Portable.Rect,System.Double,System.Double)">
            <summary>現在の矩形を展開します。</summary>
            <param name="rect">長方形。</param>
            <param name="dx">dx。</param>
            <param name="dy">dy。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.Inflate(Infragistics.Portable.Rect,System.Double)">
            <summary>現在の矩形を展開します。</summary>
            <param name="rect">長方形。</param>
            <param name="thickness">幅。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.Round(Infragistics.Portable.Rect)">
            <summary>現在の矩形に丸みを付けます。</summary>
            <param name="rect">長方形。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.IsNull(Infragistics.Portable.Rect)">
            <summary>現在の矩形が null かどうかを決定します。</summary>
            <param name="rect">長方形。</param>
            <returns>指定した <see cref="T:Infragistics.Portable.Rect"/> が null の場合 <c>true</c>。そうでない場合は、<c>false</c>。</returns>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.Size(Infragistics.Portable.Rect)">
            <summary>現在の矩形のサイズ ディメンションを返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.Normalize(Infragistics.Portable.Rect,Infragistics.Portable.Rect)">
            <summary>現在の矩形をその他の矩形のディメンションに正規化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.Normalize(Infragistics.Portable.Rect,Infragistics.Portable.Size)">
            <summary>現在の矩形をサイズ オブジェクトのディメンションに正規化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetTopLeft(Infragistics.Portable.Rect)">
            <summary>現在の矩形の左上ポイントを返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetTopRight(Infragistics.Portable.Rect)">
            <summary>現在の矩形の右上ポイントを返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetBottomLeft(Infragistics.Portable.Rect)">
            <summary>現在の矩形の左下ポイントを返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetBottomRight(Infragistics.Portable.Rect)">
            <summary>現在の矩形の右下ポイントを返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.GetCorners(Infragistics.Portable.Rect)">
            <summary>現在の矩形のコーナー ポイントを返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.RotateAboutCenter(Infragistics.Portable.Rect,System.Double)">
            <summary>現在の矩形の中点の周りに回転された矩形の境界線を返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.RectUtil.RotateAboutPoint(Infragistics.Portable.Rect,System.Double,System.Double,System.Double)">
            <summary>指定したポイントの周りに回転された矩形の境界線を返します。</summary>
        </member>
        <member name="T:Infragistics.Portable.StackPool`1">
            <summary>再利用可能なオブジェクトのプールを表します。</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Infragistics.Portable.StackPool`1.Pop">
            <summary>プールからオブジェクトを取得します。</summary>
            <remarks>このプールは、オブジェクトを新規作成するか、もしくはそれ以前に取得または非アクティブ化されたオブジェクトをアクティブ化します。DeferDisactivate が設定されている場合、直接再利用されることになる保留中のアクティブなオブジェクトが存在します。</remarks>
            <returns>オブジェクト。</returns>
        </member>
        <member name="M:Infragistics.Portable.StackPool`1.Push(`0)">
            <summary>リサイクルするプールへオブジェクトを返します。</summary>
            <remarks>プールへ返されたオブジェクトへの参照をすべて破棄します。<para>プールへ返されたオブジェクトは、(DeferDisactivate が設定されていない限り)直ちに非アクティブ化されることになり、そのオブジェクトを即座にまたはあとで破棄することも可能です。</para>
            </remarks>
            <param name="t"></param>
        </member>
        <member name="P:Infragistics.Portable.StackPool`1.DeferDisactivate">
            <summary>DeferDisactivate フラグを取得または設定します。</summary>
            <remarks>プールが　DeferDisactivate (非アクティブ化の据え置き)　の設定されたものである場合、そのプールに返されたオブジェクトは直ちに非アクティブ化されるのではく、アクティブ化せずに再利用できる limbo 状態に置かれます。DeferDisactivate をリセットすると、こうした limbo オブジェクトのすべてが非アクティブ化され、おそらく破棄されることになります。<para>非アクティブ化の据え置きは、アクティブ/非アクティブ状態の切り替えが手間のかからない操作 (たとえば、ParentItem Panel　からの　VisualElement　の追加や削除など) である場合に便利です。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Portable.StackPool`1.ActiveCount">
            <summary>現在の StackPool オブジェクト内のアクティブ項目の数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Portable.StackPool`1.InactiveCount">
            <summary>現在の StackPool オブジェクトに含まれる (limbo 項目を除いた) 非アクティブ項目の数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Portable.StackPool`1.Create">
            <summary>新しい項目を作成する関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.StackPool`1.Deactivate">
            <summary>項目を無効にするために使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.StackPool`1.Activate">
            <summary>項目を有効にするために使用される関数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.StackPool`1.Destroy">
            <summary>古い項目を破棄するために使用される関数を取得または設定します。</summary>
        </member>
        <member name="F:Infragistics.Portable.StackPool`1.active">
            <summary>アクティブなオブジェクトのコレクション。</summary>
        </member>
        <member name="F:Infragistics.Portable.StackPool`1.limbo">
            <summary>limbo オブジェクトのコレクション。</summary>
        </member>
        <member name="F:Infragistics.Portable.StackPool`1.inactive">
            <summary>非アクティブなオブジェクトのコレクション。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.IVisualData">
            <summary>視覚情報を公開するクラスによって実装されるインターフェイス。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.IVisualData.Serialize">
            <summary>視覚データを文字列形式にシリアル化します。</summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Portable.VisualData.PrimitiveVisualDataList">
            <summary>プリミティブ ビジュアル要素に関する情報を提供します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveVisualDataList.ContainingTag(System.String)">
            <summary>カテゴリ タグと一致する項目を返します。</summary>
            <param name="tag">照合するタグ。</param>
            <returns>返されたビジュアル データ。</returns>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveVisualDataList.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.LabelAppearanceData">
            <summary>ラベルに関する外観情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.Text">
            <summary>ラベルのテキスト。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.HorizontalAlignment">
            <summary>ラベルの水平方向の配置</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.VerticalAlignment">
            <summary>ラベルの垂直方向の配置</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.TextAlignment">
            <summary>ラベルのテキストの配置。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.TextWrapping">
            <summary>ラベルのテキストのラッピング。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.TextPosition">
            <summary>ラベル テキストの位置</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.LabelBrush">
            <summary>ラベル ブラシ。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.LabelBrushExtended">
            <summary>ラベル ブラシ。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.Angle">
            <summary>ラベルの角度。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.Opacity">
            <summary>ラベルの不透明度。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.Visibility">
            <summary>ラベルの表示状態。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.Font">
            <summary>ラベルのフォント。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.FontFamily">
            <summary>ラベルの Font Family。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.FontSize">
            <summary>ラベルのフォント サイズ。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.FontWeight">
            <summary>ラベルのフォント ウェイト。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.FontStyle">
            <summary>ラベルのフォント スタイル。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.FontStretch">
            <summary>ラベルのフォント ストレッチ。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.MarginLeft">
            <summary>ラベルの左マージンを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.MarginRight">
            <summary>ラベルの右マージンを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.MarginTop">
            <summary>ラベルの上マージンを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LabelAppearanceData.MarginBottom">
            <summary>ラベルの下マージンを取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LabelAppearanceData.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LabelAppearanceData.ScaleFromDevicePixels(Infragistics.Portable.VisualData.VisualDataPixelScalingOptions)">
            <summary>デバイス固有のピクセルから拡大縮小します。</summary>
            <param name="options">ピクセル拡大縮小のオプション。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.VisualDataPixelScalingOptions">
            <summary>ピクセル拡大縮小が実行する方法のオプション。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.LabelAppearanceDataList">
            <summary>ラベルのリストについての外観情報を説明します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LabelAppearanceDataList.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.BrushAppearanceData">
            <summary>ブラシ データについての外観情報を説明します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.BrushAppearanceData.Type">
            <summary> Brush データの Type を取得または設定します。 </summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.BrushAppearanceData.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.BrushAppearanceData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.ColorData">
            <summary>色に関する外観情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.ColorData.A">
            <summary>アルファ</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.ColorData.R">
            <summary>レッド</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.ColorData.G">
            <summary>緑</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.ColorData.B">
            <summary>青</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.ColorData.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.RectData">
            <summary>矩形に関する外観情報を記述します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.RectData.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>RectData を構築します。</summary>
            <param name="left">左値。</param>
            <param name="top">上値。</param>
            <param name="width">幅値。</param>
            <param name="height">高さ値。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectData.Top">
            <summary>上。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectData.Left">
            <summary>左。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectData.Width">
            <summary>幅。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectData.Height">
            <summary>高さ。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.RectData.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectData.IsEmpty">
            <summary>長方形が空かどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectData.Empty">
            <summary>空の長方形を取得します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.PointData">
            <summary>矩形に関する外観情報を記述します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PointData.#ctor(System.Double,System.Double)">
            <summary>ポイント データを構築します。</summary>
            <param name="x">x</param>
            <param name="y">y</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PointData.X">
            <summary>X 値を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PointData.Y">
            <summary>Y 値を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PointData.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PointData.Equals(System.Object)">
            <summary>このポイントが別のポイントに等しいかどうかを取得します。</summary>
            <param name="obj">その他のポイント。</param>
            <returns>等しい場合は True。</returns>
        </member>
        <member name="T:Infragistics.Portable.VisualData.SizeData">
            <summarHeight>
            矩形に関する外観情報を記述します。
            </summarHeight>
        </member>
        <member name="M:Infragistics.Portable.VisualData.SizeData.#ctor(System.Double,System.Double)">
            <summary>SizeData を構築します。</summary>
            <param name="width">使用する幅。</param>
            <param name="height">使用する高さ。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.SizeData.Width">
            <summary>幅を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.SizeData.Height">
            <summary>高さを取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.SizeData.Serialize">
            <summarHeight>
            現在のオブジェクトを文字列にシリアル化します。
            </summarHeight>
        </member>
        <member name="T:Infragistics.Portable.VisualData.SolidBrushAppearanceData">
            <summary>実線ブラシ データについての外観情報を説明します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.SolidBrushAppearanceData.Type">
            <summary> Brush データの Type を取得または設定します。 </summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.SolidBrushAppearanceData.ColorValue">
            <summary> Brush データの Color を取得または設定します。 </summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.SolidBrushAppearanceData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.LinearGradientBrushAppearanceData">
            <summary>線状グラデーション ブラシ データについての外観情報を説明します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LinearGradientBrushAppearanceData.#ctor">
            <summary>Brush データのインスタンスを作成します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LinearGradientBrushAppearanceData.Type">
            <summary> Brush データの Type を取得または設定します。 </summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LinearGradientBrushAppearanceData.StartX">
            <summary> Brush データの StartX を取得または設定します。 </summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LinearGradientBrushAppearanceData.StartY">
            <summary> Brush データの StartY を取得または設定します。 </summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LinearGradientBrushAppearanceData.EndX">
            <summary> Brush データの EndX を取得または設定します。 </summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LinearGradientBrushAppearanceData.EndY">
            <summary> Brush データの EndY を取得または設定します。 </summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LinearGradientBrushAppearanceData.Stops">
            <summary>グラデーション境界を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LinearGradientBrushAppearanceData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.GradientStopAppearanceData">
            <summary>グラデーション境界についての外観情報を説明します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.GradientStopAppearanceData.ColorValue">
            <summary>グラデーション境界の色。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.GradientStopAppearanceData.Offset">
            <summary>グラデーション境界のオフセット。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.GradientStopAppearanceData.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.PrimitiveAppearanceData">
            <summary>プリミティブ要素に関する外観情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.Stroke">
            <summary>プリミティブのストローク色。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.StrokeExtended">
            <summary>プリミティブのストローク色。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.Fill">
            <summary>プリミティブの塗りつぶし色。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.FillExtended">
            <summary>プリミティブの塗りつぶし色。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.StrokeThickness">
            <summary>プリミティブのストロークの太さ。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.IsVisible">
            <summary>プリミティブが表示されるかどうか。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.Opacity">
            <summary>プリミティブの不透明度。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.CanvasLeft">
            <summary>プリミティブの左位置。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.CanvasTop">
            <summary>プリミティブの上の位置。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.CanvaZIndex">
            <summary>プリミティブの Z インデックス</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.DashArray">
            <summary>プリミティブのストローク破線配列。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveAppearanceData.DashCap">
            <summary>点線キャップの値。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveAppearanceData.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveAppearanceData.ScaleFromDevicePixels(Infragistics.Portable.VisualData.VisualDataPixelScalingOptions)">
            <summary>デバイスのピクセルから拡大縮小します。</summary>
            <param name="options">使用するオプション。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.GetPointsSettings">
            <summary>点の突出度の判定方法を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.GetPointsSettings.IgnoreFigureStartPoint">
            <summary>重複点を理由にシェープの開始要素を無視するかどうかを記述します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.PrimitiveVisualData">
            <summary>プリミティブ ビジュアル要素に関する情報を記述します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveVisualData.#ctor">
            <summary>PrimitiveVisualData を構成します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveVisualData.#ctor(System.String)">
            <summary>プリミティブ ビジュアル要素を構築します。</summary>
            <param name="name">要素の名前です。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveVisualData.Appearance">
            <summary>要素の表示外観。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveVisualData.Tags">
            <summary>要素の意図をカテゴリ化する情報タグ。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveVisualData.Type">
            <summary>ビジュアル要素のタイプ。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PrimitiveVisualData.Name">
            <summary>ビジュアル要素の名前。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveVisualData.GetPoints(Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のビジュアル要素に関連付けられた突出点を取得します。</summary>
            <param name="settings">点の突出度の判定方法を記述します。</param>
            <returns>要素に関連付けられた点を取得します。</returns>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveVisualData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveVisualData.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveVisualData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PrimitiveVisualData.ScaleFromDevicePixels(Infragistics.Portable.VisualData.VisualDataPixelScalingOptions)">
            <summary>デバイスのピクセルから拡大縮小します。</summary>
            <param name="options">使用するオプション。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.RectangleVisualData">
            <summary>矩形ビジュアルのビジュアル情報を記述します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.RectangleVisualData.#ctor">
            <summary>RectangleVisualData を構築します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectangleVisualData.Width">
            <summary>矩形の幅。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectangleVisualData.Height">
            <summary>矩形の高さ。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectangleVisualData.RadiusX">
            <summary>コーナーを丸みになるための楕円の X 半径。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectangleVisualData.RadiusY">
            <summary>コーナーを丸みになるための楕円の Y 半径。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.RectangleVisualData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.RectangleVisualData.#ctor(System.String,Infragistics.Portable.Graphics.Shapes.Rectangle)">
            <summary>ソース矩形に基づいて RectangleVisualData を構築します。</summary>
            <param name="name">ビジュアル データの名前。</param>
            <param name="rect">ソース矩形。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectangleVisualData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.RectangleVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.RectangleVisualData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.ShapeTags">
            <summary>ビジュアル要素のコンテキストを提供するカテゴリ情報を表します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.LineVisualData">
            <summary>線ビジュアルのビジュアル情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineVisualData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineVisualData.#ctor">
            <summary>LineVisualData を構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineVisualData.#ctor(System.String,Infragistics.Portable.Graphics.Shapes.Line)">
            <summary>ソース矩形に基づいて LineVisualData を構築します。</summary>
            <param name="name">ビジュアル データの名前。</param>
            <param name="line">ソース線。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineVisualData.X1">
            <summary>線の終点の x 位置。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineVisualData.Y1">
            <summary>線の終点の y 位置。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineVisualData.X2">
            <summary>線の終点の x 位置。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineVisualData.Y2">
            <summary>線の終点の y 位置。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineVisualData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineVisualData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.PolyLineVisualData">
            <summary>ポリライン ビジュアルのビジュアル情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PolyLineVisualData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolyLineVisualData.#ctor">
            <summary>PolyLineVisualData を構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolyLineVisualData.#ctor(System.String,Infragistics.Portable.Graphics.Shapes.Polyline)">
            <summary>ソース ポリラインに基づいて PolygonVisualData を構築します。</summary>
            <param name="name">ビジュアル データの名前。</param>
            <param name="line">ソース ポリライン。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PolyLineVisualData.Points">
            <summary>ポリラインのポイント。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolyLineVisualData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolyLineVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolyLineVisualData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.PolygonVisualData">
            <summary>多角形ビジュアルのビジュアル情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PolygonVisualData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolygonVisualData.#ctor">
            <summary>PolygonVisualData を構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolygonVisualData.#ctor(System.String,Infragistics.Portable.Graphics.Shapes.Polygon)">
            <summary>ソース多角形に基づいて PolygonVisualData を構築します。</summary>
            <param name="name">ビジュアル データの名前。</param>
            <param name="polygon"></param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PolygonVisualData.Points">
            <summary>多角形のポイント。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolygonVisualData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolygonVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolygonVisualData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.PathVisualData">
            <summary>パス ビジュアルのビジュアル情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PathVisualData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathVisualData.#ctor">
            <summary>PathVisualData を構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathVisualData.#ctor(System.String,Infragistics.Portable.Graphics.Shapes.Path)">
            <summary>ソース パスに基づいて PathVisualData を構築します。</summary>
            <param name="name">ビジュアル データの名前。</param>
            <param name="path">ソース パス。</param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathVisualData.#ctor(System.String,Infragistics.Portable.Graphics.Shapes.Line)">
            <summary>ソース線に基づいて PathVisualData を構築します。</summary>
            <param name="name">ビジュアル データの名前。</param>
            <param name="line">ソース線。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PathVisualData.Data">
            <summary>パスのデータ。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathVisualData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathVisualData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathVisualData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.GeometryData">
            <summary>ジオメトリ ビジュアルのビジュアル情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.GeometryData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.GeometryData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.GeometryData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.GeometryData.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.GeometryData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.PathGeometryData">
            <summary>パス ジオメトリのビジュアル情報を記述します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathGeometryData.#ctor">
            <summary>PathGeometryData を構築します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PathGeometryData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PathGeometryData.Figures">
            <summary>パス上の形状。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathGeometryData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathGeometryData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathGeometryData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.LineGeometryData">
            <summary>線ジオメトリのビジュアル情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineGeometryData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineGeometryData.X1">
            <summary>線開始の x 位置。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineGeometryData.Y1">
            <summary>線の始点の y 位置。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineGeometryData.X2">
            <summary>線の終点の x 位置。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineGeometryData.Y2">
            <summary>線の終点の y 位置。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineGeometryData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineGeometryData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineGeometryData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.RectangleGeometryData">
            <summary>矩形ジオメトリのビジュアル情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectangleGeometryData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectangleGeometryData.X">
            <summary>矩形の x 位置</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectangleGeometryData.Y">
            <summary>四角形の y 位置。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectangleGeometryData.Width">
            <summary>矩形の幅。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.RectangleGeometryData.Height">
            <summary>矩形の高さ。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.RectangleGeometryData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.RectangleGeometryData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.RectangleGeometryData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.EllipseGeometryData">
            <summary>楕円ジオメトリのビジュアル情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.EllipseGeometryData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.EllipseGeometryData.CenterX">
            <summary>楕円中心の x 座標。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.EllipseGeometryData.CenterY">
            <summary>楕円の中心の y 座標。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.EllipseGeometryData.RadiusX">
            <summary>楕円の x 半径。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.EllipseGeometryData.RadiusY">
            <summary>楕円の y 半径。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.EllipseGeometryData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.EllipseGeometryData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.EllipseGeometryData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.PathFigureData">
            <summary>パス形状のビジュアル情報を記述します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathFigureData.#ctor">
            <summary>PathFigureData を構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathFigureData.#ctor(Infragistics.Portable.Graphics.Media.PathFigure)">
            <summary>ソース PathFigure に基づいて PathFigureData を構築します。</summary>
            <param name="fig">ソース PathFigure。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PathFigureData.StartPoint">
            <summary>パスの始点。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PathFigureData.Segments">
            <summary>パスのセグメント。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathFigureData.Serialize">
            <summary>このオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathFigureData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PathFigureData.GetPointsOverride(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData}},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="points">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.SegmentData">
            <summary>セグメントのビジュアル情報を記述します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.SegmentData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.SegmentData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.SegmentData.GetPointsOverride(System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="current">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.SegmentData.Serialize">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.SegmentData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="T:Infragistics.Portable.VisualData.LineSegmentData">
            <summary>線セグメントのビジュアル情報を記述します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineSegmentData.#ctor">
            <summary>LineSegmentData を構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineSegmentData.#ctor(Infragistics.Portable.Graphics.Media.LineSegment)">
            <summary>ソース LineSegment に基づいて LineSegmentData を構築します。</summary>
            <param name="seg">ソース LineSegment。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineSegmentData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.LineSegmentData.Point">
            <summary>線セグメントの終点。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineSegmentData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineSegmentData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.LineSegmentData.GetPointsOverride(System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="current">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.PolylineSegmentData">
            <summary>ポリライン セグメントのビジュアル情報を記述します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolylineSegmentData.#ctor">
            <summary>PolylineSegmentData を構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolylineSegmentData.#ctor(Infragistics.Portable.Graphics.Media.PolyLineSegment)">
            <summary>ソース PolyLineSegment に基づいて PolyLineSegmentData を構築します。</summary>
            <param name="poly">ソース PolyLineSegment。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PolylineSegmentData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PolylineSegmentData.Points">
            <summary>セグメントのポイント。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolylineSegmentData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolylineSegmentData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolylineSegmentData.GetPointsOverride(System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="current">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.BezierSegmentData">
            <summary>ベジエ セグメントについての情報データ。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.BezierSegmentData.#ctor">
            <summary>PolylineSegmentData を構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.BezierSegmentData.#ctor(Infragistics.Portable.Graphics.Media.BezierSegment)">
            <summary>ソースの BezierSegment に基づいて BezierSegmentData を構築します。</summary>
            <param name="segment">ソースの BezierSegment。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.BezierSegmentData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.BezierSegmentData.Points">
            <summary>セグメントのポイント。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.BezierSegmentData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.BezierSegmentData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.BezierSegmentData.GetPointsOverride(System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="current">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.PolyBezierSegmentData">
            <summary>ベジエ スプライン セグメントについての情報データ。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolyBezierSegmentData.#ctor">
            <summary>PolylineSegmentData を構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolyBezierSegmentData.#ctor(Infragistics.Portable.Graphics.Media.PolyBezierSegment)">
            <summary>ソース PolyLineSegment に基づいて PolyLineSegmentData を構築します。</summary>
            <param name="poly">ソース PolyLineSegment。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PolyBezierSegmentData.Type">
            <summary>ビジュアル データのタイプ名を返します。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.PolyBezierSegmentData.Points">
            <summary>セグメントのポイント。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolyBezierSegmentData.SerializeOverride">
            <summary>現在のオブジェクトを文字列にシリアル化します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolyBezierSegmentData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.PolyBezierSegmentData.GetPointsOverride(System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="current">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.ArcSegmentData">
            <summary>円弧セグメントに関する情報。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.ArcSegmentData.#ctor">
            <summary>ArcSegmentData を構築します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.ArcSegmentData.#ctor(Infragistics.Portable.Graphics.Media.ArcSegment)">
            <summary>ソース円弧に基づいて ArcSegmentData を構築します。</summary>
            <param name="arc">データの抽出元になる円弧。</param>
        </member>
        <member name="P:Infragistics.Portable.VisualData.ArcSegmentData.Type">
            <summary>このデータのタイプ。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.ArcSegmentData.Point">
            <summary>円弧の中心点。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.ArcSegmentData.IsLargeArc">
            <summary>円弧は大きな円弧かどうか。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.ArcSegmentData.IsCounterClockwise">
            <summary>円弧の掃引方向。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.ArcSegmentData.SizeX">
            <summary>円弧の x サイズ。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.ArcSegmentData.SizeY">
            <summary>円弧の y サイズ。</summary>
        </member>
        <member name="P:Infragistics.Portable.VisualData.ArcSegmentData.RotationAngle">
            <summary>円弧の回転角度。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.ArcSegmentData.SerializeOverride">
            <summary>このオブジェクトのシリアル化をオーバーライドします。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.ArcSegmentData.ScaleByViewport(Infragistics.Portable.VisualData.RectData)">
            <summary>正規化のため、ビューポートごとに現在のデータを拡大/縮小するために呼び出されます。</summary>
            <param name="viewport"></param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.ArcSegmentData.GetPointsOverride(System.Collections.Generic.List{Infragistics.Portable.VisualData.PointData},Infragistics.Portable.VisualData.GetPointsSettings)">
            <summary>現在のデータから突出点を抽出するために呼び出しました。</summary>
            <param name="current">点コンテナー。</param>
            <param name="settings">点の突出度の判定方法に関する情報。</param>
        </member>
        <member name="T:Infragistics.Portable.VisualData.AppearanceHelper">
            <summary>チャートのビジュアル外観に関する情報保管を支援します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.FromBrush(Infragistics.Portable.Graphics.Media.Brush)">
            <summary>ブラシから色を返します。</summary>
            <param name="b">色の抽出元のブラシ。</param>
            <returns>返された色。</returns>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.FromBrushExtended(Infragistics.Portable.Graphics.Media.Brush)">
            <summary>ブラシ オブジェクトからブラシの外観データを取得します。</summary>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.GetCanvasLeft(Infragistics.Portable.Components.UI.FrameworkElement)">
            <summary>要素の左位置を取得します。</summary>
            <param name="visual">左位置の取得対象の要素。</param>
            <returns>左位置。</returns>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.GetCanvasTop(Infragistics.Portable.Components.UI.FrameworkElement)">
            <summary>要素の上位置を取得します。</summary>
            <param name="visual">上位置の取得対象の要素。</param>
            <returns>上位置。</returns>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.GetCanvasZIndex(Infragistics.Portable.Components.UI.FrameworkElement)">
            <summary>要素の z インデックスを取得します。</summary>
            <param name="line">z インデックスの取得対象の要素。</param>
            <returns>要素の z インデックス。</returns>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.FromPathData(Infragistics.Portable.Graphics.Shapes.Path)">
            <summary>パスのジオメトリ データを取得します。</summary>
            <param name="path">データの取得対象のパス。</param>
            <returns>パスのジオメトリ データ。</returns>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.FromLineData(Infragistics.Portable.Graphics.Shapes.Line)">
            <summary>線のジオメトリ データを取得します。</summary>
            <param name="line">データの取得対象の線。</param>
            <returns>線のジオメトリ データ。</returns>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.FromGeometry(Infragistics.Portable.Graphics.Media.Geometry)">
            <summary>提供されたジオメトリに関するデータを取得します。</summary>
            <param name="data">データの取得対象のジオメトリ。</param>
            <returns>抽出するジオメトリデータのリスト。</returns>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.GetShapeAppearance(Infragistics.Portable.VisualData.PrimitiveAppearanceData,Infragistics.Portable.Graphics.Shapes.Shape)">
            <summary>形状の外観情報を取得します。</summary>
            <param name="appearance">生成する外観情報。</param>
            <param name="path">情報の取得元の形状。</param>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.FromTextElement(Infragistics.Portable.Components.UI.FrameworkElement,Infragistics.Portable.FontInfo)">
            <summary>テキスト要素から外観情報を取得します。</summary>
            <param name="frameworkElement">検査するテキスト要素。</param>
            <param name="fontInfo">検査するフォント情報。</param>
            <returns>取得したラベル外観情報。</returns>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.SerializeItems(System.Text.StringBuilder,System.String,System.Collections.Generic.IEnumerable{Infragistics.Portable.VisualData.IVisualData},System.Boolean)">
            <summary>項目を指定した文字列ビルダーにシリアル化します。</summary>
            <param name="sb">項目情報を追加する文字列ビルダー。</param>
            <param name="name">項目を返すプロパティの名前。</param>
            <param name="items">シリアル化する項目のコレクション。</param>
            <param name="isFirst">最初の項目の場合、行頭コンマは必要ありません。</param>
            <returns>項目が文字列ビルダーに追加した場合は True。それ以外の場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Portable.VisualData.AppearanceHelper.SerializeItem(System.Text.StringBuilder,System.String,Infragistics.Portable.VisualData.IVisualData,System.Boolean)">
            <summary>項目を指定した文字列ビルダーにシリアル化します。</summary>
            <param name="sb">項目情報を追加する文字列ビルダー。</param>
            <param name="name">項目を返すプロパティの名前。</param>
            <param name="item">シリアル化する項目。</param>
            <param name="isFirst">最初の項目の場合、行頭コンマは必要ありません。</param>
            <returns>項目が文字列ビルダーに追加した場合は True。それ以外の場合は False を返します。</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter">
            <summary>データ ソースを解析し、データに合わせるデータ視覚化のタイプを示します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.#ctor">
            <summary>DataSeriesAdapter を構築します。</summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.PropertyChanged">
            <summary>プロパティが変更されたことを示します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.ItemsSource">
            <summary>データ アダプターのバッキング データを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.SupportedSeriesTypes">
            <summary>アダプターが同じメンバー パスにバインドされる複製のデータ シリーズを解除するかどうかを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.IncludedProperties">
            <summary>アダプターに含まれる (その他のパスは除外) プロパティ パスのセットを取得または設定します。null の場合、すべてのプロパティが含まれます。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.ExcludedProperties">
            <summary>アダプターから除外されるプロパティ パスのセットを取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.Refresh">
            <summary>DataSeriesAdapter の解析を更新することになります。</summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.RemovingUnsupported">
            <summary>アダプターがサポートされていないシリーズを解析から取得されているときに呼び出されます。</summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.RemovingDuplicates">
            <summary>アダプターが重複したシリーズを解析から削除するときに呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.NotifyClearItems(System.Object)">
            <summary>データ ソースが項目をリセット/クリアされたことをアダプターに手動的に通知するために使用されます。そのデータ ソースが監視可能ではない場合に必要です。</summary>
            <param name="dataSource">クリア/リセットされたデータ ソース。</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.NotifyInsertItem(System.Object,System.Int32,System.Object)">
            <summary>データ ソースが項目を挿入されたことをアダプターに手動的に通知するために使用されます。そのデータ ソースが監視可能ではない場合に必要です。</summary>
            <param name="dataSource">データ ソースが変更されました。</param>
            <param name="index">新しい項目のインデックス。</param>
            <param name="newItem">新しい項目。</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.NotifyRemoveItem(System.Object,System.Int32,System.Object)">
            <summary>データ ソースに項目が削除されたことをアダプターに手動的に通知するために使用されます。そのデータ ソースが監視可能ではない場合に必要です。</summary>
            <param name="dataSource">データ ソースが変更されました。</param>
            <param name="index">以前の項目のインデックス。</param>
            <param name="oldItem">以前の項目。</param>
        </member>
        <member name="M:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapter.NotifySetItem(System.Object,System.Int32,System.Object,System.Object)">
            <summary>データ ソースに項目が設定されたことをアダプターに手動的に通知するために使用されます。そのデータ ソースが監視可能ではない場合に必要です。</summary>
            <param name="dataSource">データ ソースが変更されました。</param>
            <param name="index">変更のインデックス</param>
            <param name="oldItem">以前の項目。</param>
            <param name="newItem">新しい項目。</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRemovingDuplicatesEventArgs">
            <summary>アダプターで複製のシリーズについての情報を表します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRemovingDuplicatesEventArgs.RunContext">
            <summary>現在の解析実行についての情報を取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRemovingDuplicatesEventArgs.DataSourcePath">
            <summary>データ ソースの現在のパスを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRemovingDuplicatesEventArgs.DuplicatePath">
            <summary>複製されたパスを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRemovingDuplicatesEventArgs.MatchingSeries">
            <summary>複製されたパスと一致するすべてのシリーズを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRemovingDuplicatesEventArgs.Handled">
            <summary>この複製の処理が完了したかどうかを取得または設定します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRunEventArgs">
            <summary>実行中の解析実行についての情報を表示します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRunEventArgs.RunContext">
            <summary>実行中の解析についての情報を取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRunEventArgs.Handled">
            <summary>現在のアクションが処理され、デフォルトの動作を回避するかどうかを取得または設定します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesCollection">
            <summary>DataSeries のコレクション。</summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRunEventHandler">
            <summary>データ シリーズ アダプターの解析の実行に関連するアクションで呼び出されます。</summary>
            <param name="sender">アダプター。</param>
            <param name="args">解析引数。</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRemovingDuplicatesEventHandler">
            <summary>データ シリーズ アダプターから複製のシリーズを削除するときに呼び出されます。</summary>
            <param name="sender">アダプター。</param>
            <param name="args">複製のシリーズについての情報。</param>
        </member>
        <member name="T:Infragistics.Controls.Charts.DataAdapters.Implementation.DataSeriesAdapterRuleCollection">
            <summary>DataSeriesAdapterRules のコレクション。</summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Implementation.DataContext">
            <summary>現在のコンテキスト内のデータを表します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Implementation.DataContext.Series">
            <summary>コンテキスト内のシリーズを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Implementation.DataContext.Item">
            <summary>コンテキスト内の項目を取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Implementation.DataContext.ActualItemBrush">
            <summary>コンテキスト内の項目に使用される実際の解決されたブラシを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Implementation.DataContext.Outline">
            <summary>コンテキスト内の項目に使用されるアウトラインを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Implementation.DataContext.ItemLabel">
            <summary>利用可能な場合、コンテキスト内の項目に使用されるラベルを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Implementation.DataContext.ItemBrush">
            <summary>コンテキスト内の項目に使用される可能なブラシを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Implementation.DataContext.Thickness">
            <summary>コンテキスト内の項目の太さを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Implementation.DataContext.LegendLabel">
            <summary>利用可能な場合、コンテキスト内の項目に使用する凡例ラベルを取得します。</summary>
        </member>
        <member name="E:Infragistics.Controls.Charts.Implementation.DataContext.PropertyChanged">
            <summary>プロパティが変更されたことを示します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Implementation.PropertyUpdatedEventArgs">
            <summary>プロパティが更新したイベントの EventArgs クラス。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Implementation.PropertyUpdatedEventArgs.PropertyName">
            <summary>更新中のプロパティの名前。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Implementation.PropertyUpdatedEventArgs.OldValue">
            <summary>更新されるプロパティの以前の値。</summary>
        </member>
        <member name="P:Infragistics.Controls.Charts.Implementation.PropertyUpdatedEventArgs.NewValue">
            <summary>更新されるプロパティの新しい値。</summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Implementation.TrendCalculators">
            <summary>トレンドライン値を計算するユーティリティ クラス。</summary>
        </member>
        <member name="M:Infragistics.Controls.Charts.Implementation.TrendCalculators.WMA(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>加重移動平均を計算します。</summary>
            <remarks>最初の期間値は蓄積によって計算され、無効と見なされる場合があります。</remarks>
            <param name="sequence">平均するシーケンス。</param>
            <param name="period">平均期間。</param>
            <returns>加重移動平均。</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Implementation.TrendCalculators.EMA(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>指数移動平均を計算します。</summary>
            <remarks>最初の期間値は蓄積によって計算され、無効と見なされる場合があります。</remarks>
            <param name="sequence">平均するシーケンス。</param>
            <param name="period">平均期間。</param>
            <returns>指数移動平均。</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Implementation.TrendCalculators.MMA(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>変更された移動平均を計算します。</summary>
            <remarks>最初の期間値は蓄積によって計算され、無効と見なされる場合があります。</remarks>
            <param name="sequence">平均するシーケンス。</param>
            <param name="period">平均期間。</param>
            <returns>変更された移動平均。</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Implementation.TrendCalculators.CMA(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>累積移動平均を計算します。</summary>
            <param name="sequence">平均するシーケンス。</param>
            <returns>累積移動平均。</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Implementation.TrendCalculators.SMA(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>単純移動平均を計算します。</summary>
            <remarks>最初の期間値は蓄積によって計算され、無効と見なされる場合があります。</remarks>
            <param name="sequence">平均するシーケンス。</param>
            <param name="period">平均期間。</param>
            <returns>単純移動平均。</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Implementation.TrendCalculators.MovingSum(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>指定した期間のシーケンスにわたる移動合計を計算します。</summary>
            <param name="sequence">移動合計を計算するシーケンス。</param>
            <param name="period">計算で使用する期間。</param>
            <returns>移動合計の値。</returns>
        </member>
        <member name="M:Infragistics.Controls.Charts.Implementation.TrendCalculators.STDEV(System.Collections.Generic.IEnumerable{System.Double},System.Int32)">
            <summary>指定した期間のシーケンスの標準偏差を計算します。</summary>
            <param name="sequence">標準偏差の値を計算するシーケンス。</param>
            <param name="period">計算で使用する期間。</param>
            <returns>計算された標準偏差の値のシーケンス。</returns>
        </member>
        <member name="T:Infragistics.Controls.Charts.Implementation.TrendLineType">
            <summary>シリーズでサポートされるトレンドラインの利用可能なタイプを説明します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.None">
            <summary>トレンド ラインは表示されません。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.LinearFit">
            <summary>リニア フィット。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.QuadraticFit">
            <summary>二次多項式フィット。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.CubicFit">
            <summary>三次多項式フィット。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.QuarticFit">
            <summary>四次多項式フィット。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.QuinticFit">
            <summary>五次多項式フィット。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.LogarithmicFit">
            <summary>対数フィット。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.ExponentialFit">
            <summary>指数フィット。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.PowerLawFit">
            <summary>べき乗フィット。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.SimpleAverage">
            <summary>単純移動平均。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.ExponentialAverage">
            <summary>指数移動平均。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.ModifiedAverage">
            <summary>変更された移動平均。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.CumulativeAverage">
            <summary>累積移動平均。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.TrendLineType.WeightedAverage">
            <summary>加重移動平均。</summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Implementation.UnknownValuePlotting">
            <summary>シリーズで不明な値を持つデータをプロットする利用可能な方法を説明します。<para>Double.NaN および null は不明な値の例です。</para>
            </summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.UnknownValuePlotting.LinearInterpolate">
            <summary>線形補間を使用すると、不明な値を囲む定義した値の中にプロットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Charts.Implementation.UnknownValuePlotting.DontPlot">
            <summary>不明な値はチャートにプロットしません。</summary>
        </member>
        <member name="T:Infragistics.Controls.Charts.Implementation.PropertyUpdatedEventHandler">
            <summary>プロパティが更新したイベントの EventHandler デリゲート。</summary>
            <param name="sender">イベントのソース。</param>
            <param name="e">コンテキスト上の PropertyUpdatedEventArgs。</param>
        </member>
        <member name="T:Infragistics.Controls.PointCollectionUtil">
            <summary>ポイントのコレクションの汎用ユーティリティ メソッド。</summary>
        </member>
        <member name="M:Infragistics.Controls.PointCollectionUtil.FlattenTo(System.Collections.Generic.IList{Infragistics.Portable.Point},System.Collections.Generic.IList{Infragistics.Portable.Point},System.Double)">
            <summary>指定されたエラー耐性で内部ポイントを削除することによって現在のポイントによって形成されるオープンの simplex また線分群の簡略版を作成します。</summary>
            <param name="points">平面化する多角形または線分群。</param>
            <param name="list">平面化された多角形または線分群が書き込まれる宛先（null の場合、新しく作成されます）。</param>
            <param name="E">最大の平面化エラー。</param>
            <returns>平面化された多角形または線分群を含むポイントコレクション。</returns>
            <remarks>流れの最初のポイントと最後のポイントは常に返されるポイントの一部です。</remarks>
        </member>
        <member name="M:Infragistics.Controls.PointCollectionUtil.GetBounds(System.Collections.Generic.IEnumerable{Infragistics.Portable.Point})">
            <summary>無数のポイントで軸に平行な境界ボックスを取得します。</summary>
            <param name="points"></param>
            <returns>軸に平行な境界矩形または Rect.Empty</returns>
        </member>
        <member name="M:Infragistics.Controls.PointCollectionUtil.GetBounds(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{Infragistics.Portable.Point}})">
            <summary>指定した点リストに含まれるすべての点の境界枠を表す Rect を返します。</summary>
            <param name="points">点リストのリスト。</param>
            <returns>指定したすべての点の境界枠を表す Rect。</returns>
            <remarks>点データのリストを入れ子式にネストするというこの構造は、Shapefile 形式のファイルや他の地理空間データソースで採用されているネスト構造に対応したものです。</remarks>
        </member>
        <member name="M:Infragistics.Controls.PointCollectionUtil.GetBounds(System.Collections.Generic.IList{Infragistics.Portable.Point})">
            <summary>所定の Point をすべて収容する境界矩形を取得します。</summary>
            <param name="points">境界矩形を求める Point。</param>
            <returns>所定の Point をすべて収容する境界矩形。</returns>
        </member>
        <member name="M:Infragistics.Controls.PointCollectionUtil.GetBounds(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.Point}})">
            <summary>所定の点をすべて収容する境界矩形を取得します。</summary>
            <param name="points">境界矩形を求める Point。</param>
            <returns>所定の点をすべて収容する境界矩形。</returns>
        </member>
        <member name="M:Infragistics.Controls.PointCollectionUtil.GetBounds(System.Collections.Generic.List{Infragistics.Portable.PointCollection})">
            <summary>所定の点をすべて収容する境界矩形を取得します。</summary>
            <param name="points">境界矩形を求める Point。</param>
            <returns>所定の点をすべて収容する境界矩形。</returns>
        </member>
        <member name="M:Infragistics.Controls.PointCollectionUtil.ClipTo(System.Collections.Generic.IList{Infragistics.Portable.Point},System.Collections.Generic.IList{Infragistics.Portable.Point},Infragistics.Portable.Clipper)">
            <summary>所定の Clipper で所定の点をクリップします。</summary>
            <param name="points">所定の Clipper でクリップする点。</param>
            <param name="list">未使用。</param>
            <param name="clipper">所定のポイントをターゲット境界線にクリップするときに使用する Clipper。</param>
        </member>
        <member name="M:Infragistics.Controls.PointCollectionUtil.GetCentroid(System.Collections.Generic.IEnumerable{Infragistics.Portable.Point})">
            <summary>現在のポイントの集合の重心を取得します</summary>
            <param name="points">重心を計算するポイントの集合。</param>
            <returns>指定されたポイントの集合の重心。</returns>
        </member>
        <member name="M:Infragistics.Controls.PointCollectionUtil.ToPointCollection(System.Collections.Generic.IEnumerable{Infragistics.Portable.Point})">
            <summary>与えられた点のリストを PointCollection オブジェクトに変換します。</summary>
            <param name="points">作成される PointCollection にコピーする点。</param>
            <returns>与えられた点をすべて含んでいる PointCollection。</returns>
        </member>
        <member name="M:Infragistics.Controls.PointCollectionUtil.ToPointList(System.Collections.Generic.IEnumerable{Infragistics.Portable.Point})">
            <summary>Point の IEnumerable を Point の List に変換します。</summary>
            <param name="points">変換する Point の IEnumerable。</param>
            <returns>所定の Point の IEnumerable から構成した Point の List。</returns>
        </member>
        <member name="M:Infragistics.Controls.PointCollectionUtil.ToPointCollections(System.Collections.Generic.List{System.Collections.Generic.List{Infragistics.Portable.Point}})">
            <summary>Point の List の List を PointCollections の List に変換します。</summary>
            <param name="points">変換する Point の List の List。</param>
            <returns>所定の Point の List の List から構成した PointCollection の List。</returns>
        </member>
        <member name="T:Infragistics.Controls.Implementation.InteractionState">
            <summary>チャートまたは地理マップ コントロールのインタラクション状態を説明します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Implementation.InteractionState.None">
            <summary>ユーザー動作はチャートの状態を変更しません。</summary>
        </member>
        <member name="F:Infragistics.Controls.Implementation.InteractionState.DragZoom">
            <summary>ユーザー動作はチャートをズームするために矩形のドラッグを開始します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Implementation.InteractionState.DragPan">
            <summary>ユーザー操作によってパン操作を開始し、チャート ウインドウを移動します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Implementation.InteractionState.Auto">
            <summary>ユーザー動作はタッチ環境でパンニング操作を開始します。マウス環境でドラッグ矩形操作を開始します。</summary>
        </member>
        <member name="T:Infragistics.Controls.DataSource.Implementation.BaseDataSource">
            <summary>データ ソースの実装が拡張可能な IDataSource の基本実装を提供します。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.#ctor">
            <summary>BaseDataSource を構築します。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.IsPlaceholderItem(System.Int32)">
            <summary>要求されたインデックスにある項目がプレースホルダー項目で、実際項目になれなかった場合に True を返します。</summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.ActualSchema">
            <summary>データ ソースの解決されたスキーマを取得します。項目で利用可能なプロパティを表します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.ActualCount">
            <summary>データソース内の項目の実際数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.FirstVisibleIndexRequested">
            <summary>現在の最初の表示可能なインデックスにするデータ ソースのインデックス コンシューマーを取得または設定します。たとえば、グリッドは現在表示可能な一番上の行を示し、変更に基づいて更新します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.LastVisibleIndexRequested">
            <summary>現在の最後の表示可能なインデックスになりたいデータ ソースのインデックス コンシューマーを取得または設定します。たとえば、グリッドは現在表示可能な一番上の行を示し、変更に基づいて更新します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.UpdateNotifier">
            <summary>さまざまな変更があったことを示すためにデータ ソースがメソッドを呼び出す IDataSourceUpdateNotifier を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.GetItemAtIndex(System.Int32)">
            <summary>データ ソースに指定したインデックスにある項目を返します。このインデックスは、元のソースの基本インデックスではなく、データ ソースのデータの現在ビューに基づきます。</summary>
            <param name="index">要求された項目のインデックス。</param>
            <returns>要求されたインデックスにある項目。</returns>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.GetItemProperty(System.Object,System.String)">
            <summary>データ ソースに含まれる項目の名前付きプロパティの値を展開します。</summary>
            <param name="item">プロパティ値を展開する項目。</param>
            <param name="propertyName">値を展開するプロパティの名前。</param>
            <returns>指定したプロパティの値。</returns>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.GetItemPropertyAtIndex(System.Int32,System.String)">
            <summary>指定したインデックスにある項目から名前付きのプロパティ値を展開します。</summary>
            <param name="index">プロパティ値を展開する項目のインデックス。</param>
            <param name="valueName">値を展開するプロパティ値。</param>
            <returns>指定したプロパティの値。</returns>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.IsVirtual">
            <summary>現在のデータ ソースが仮想データ ソースかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.ExecutionContext">
            <summary>データ ソースが非同期操作と同期するか、遅延された操作を遅延するために使用する実行コンテキストを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.IsSortingSupported">
            <summary>データ ソースでの並べ替えがサポートされているかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.IsFilteringSupported">
            <summary>データ ソースでフィルターがサポートされているかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.SortDescriptions">
            <summary>並べ替え説明に追加するコレクションを取得します。このコレクションで並べ替え説明を変更すると、データ ソースに適用される並べ替えを変更します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.FilterExpressions">
            <summary>フィルター式に追加するコレクションを取得します。このコレクションでフィルター式を変更すると、データ ソースに適用されるフィルターを変更します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.DeferAutoRefresh">
            <summary>データ ソースの自動更新機能が遅延されているかどうかを取得または設定します。True に設定した場合、データ ソースはほとんどの設定変更に対応しません。代わりに処理を遅延します。この値を false に設定すると、新しい更新操作をキューします。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.PrimaryKey">
            <summary>ユーザーがデータ ソースの項目のプライマリ キーを指定したことを示すプロパティ参照のリストを取得または設定します。データ ソースのコンシューマーは通常データ ソースの項目を一意的に識別する必要があります。この目的のためにプライマリ キーを指定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.ActualPrimaryKey">
            <summary>データソースの現在の実際のプライマリ キーを取得します。可能な場合、自動検出されます。それ以外の場合、ユーザーにより提供されるかオーバーライドされます。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.PropertiesRequested">
            <summary>データ ソースのコンシューマーが要求されたプロパティへのプロパティ参照のリストを取得または設定します。指定された場合、このデータ ソースの型のデフォルト動作の代わりに、データ ソースがそのプロパティのみを要求するか、そのプロパティが含まれることを確認します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.NotifyUsingSourceIndexes">
            <summary>データ ソースの変更を手動的に通知する場合、実際のソース データに対するインデックス、またはデータ ソースが保存されているビューに対するインデックスを使用するかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.IsItemIndexLookupSupported">
            <summary>提供された項目のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.BaseDataSource.IsKeyIndexLookupSupported">
            <summary>提供されたプライマリ キー値のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.NotifySetItem(System.Int32,System.Object,System.Object)">
            <summary>バインドされるデータに項目が変更されたことをデータ ソースに手動的に通知します。データ ソースにバインドされるデータが監視可能な場合、これを呼び出す必要はありません。</summary>
            <param name="index">変更された項目のインデックス。</param>
            <param name="oldItem">指定したインデックスにある以前の項目。このデータ ソースで IsVirtual == true の場合のみ、値を設定する必要はありません。</param>
            <param name="newItem">指定したインデックスにある新しい項目。このデータ ソースで IsVirtual == true の場合のみ、値を設定する必要はありません。</param>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.NotifyClearItems">
            <summary>バインドされるデータがクリアされ、再検証する必要があることをデータ ソースに手動的に通知します。データ ソースにバインドされるデータが監視可能な場合、これを呼び出す必要はありません。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.NotifyInsertItem(System.Int32,System.Object)">
            <summary>バインドされるデータに項目が挿入されたことをデータ ソースに手動的に通知します。データ ソースにバインドされるデータが監視可能な場合、これを呼び出す必要はありません。</summary>
            <param name="index">挿入された項目のインデックス。</param>
            <param name="newItem">指定したインデックスにある新しい項目。このデータ ソースで IsVirtual == true の場合のみ、値を設定する必要はありません。</param>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.NotifyRemoveItem(System.Int32,System.Object)">
            <summary>バインドされるデータに項目が削除されたことをデータ ソースに手動的に通知します。データ ソースにバインドされるデータが監視可能な場合、これを呼び出す必要はありません。</summary>
            <param name="index">削除された項目のインデックス。</param>
            <param name="oldItem">指定したインデックスにある以前の項目。このデータ ソースで IsVirtual == true の場合のみ、値を設定する必要はありません。</param>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.QueueAutoRefresh">
            <summary>データ ソースの更新操作を手動的にキューするために呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.FlushAutoRefresh">
            <summary>キューされたデータ ソースの更新が続行する前に適用されたことを確認するために呼び出されます。データ ソースで設定の変更結果を同期的に表示するときのみ必要です。注: 仮想データ ソースの場合、データ ソースがその他の同期要求のデータ実装を待っている場合があります。この呼び出しはその要求の完了を待ちません。適切な要求が設定変更から送信されていることのみを確認します。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.Refresh">
            <summary>データ ソースを同期して更新するために呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.IndexOfItem(System.Object)">
            <summary>データ ソースに含まれている項目のインデックスを返すために呼び出されます。項目が見つからないか、この操作がサポートされていない場合は -1 を返します。</summary>
            <param name="item">インデックスを検索する項目。</param>
            <returns>インデックスまたは -1。</returns>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.BaseDataSource.IndexOfKey(System.Object[])">
            <summary>データ ソースに含まれているプライマリ キー値のインデックスを返すために呼び出されます。キーが見つからない、またはこの操作がサポートされていない場合は -1 を返します。</summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.DataSource.Implementation.LocalDataSource">
            <summary>そのデータ項目に同期アクセスがあるローカル データ ソース。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.LocalDataSource.DataProvider">
            <summary>このデータ ソースに使用するデータ プロバイダーを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.LocalDataSource.ActualDataProvider">
            <summary>このデータ ソースが使用されている解決のデータ プロバイダーを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.LocalDataSource.ItemsSource">
            <summary>データ ソースのバッキング データを取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.LocalDataSource.GetItemAtIndex(System.Int32)">
            <summary>データ ソースに指定したインデックスにある項目を返します。このインデックスは、元のソースの基本インデックスではなく、データ ソースのデータの現在ビューに基づきます。</summary>
            <param name="index">要求された項目のインデックス。</param>
            <returns>要求されたインデックスにある項目。</returns>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.LocalDataSource.GetItemPropertyAtIndex(System.Int32,System.String)">
            <summary>指定したインデックスにある項目から名前付きのプロパティ値を展開します。</summary>
            <param name="index">プロパティ値を展開する項目のインデックス。</param>
            <param name="valueName">値を展開するプロパティ値。</param>
            <returns>指定したプロパティの値。</returns>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.LocalDataSource.IsItemIndexLookupSupported">
            <summary>提供された項目のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.LocalDataSource.IsKeyIndexLookupSupported">
            <summary>提供されたプライマリ キー値のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.LocalDataSource.IndexOfItem(System.Object)">
            <summary>データ ソースに含まれている項目のインデックスを返すために呼び出されます。項目が見つからないか、この操作がサポートされていない場合は -1 を返します。</summary>
            <param name="item">インデックスを検索する項目。</param>
            <returns>インデックスまたは -1。</returns>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.LocalDataSource.IndexOfKey(System.Object[])">
            <summary>データ ソースに含まれているプライマリ キー値のインデックスを返すために呼び出されます。キーが見つからない、またはこの操作がサポートされていない場合は -1 を返します。</summary>
            <param name="key">検索するプライマリ キー値。</param>
            <returns>プライマリ キー値にあるインデックス。検索されていないか、利用可能ではない場合は -1。</returns>
        </member>
        <member name="T:Infragistics.Controls.DataSource.Implementation.VirtualDataSource">
            <summary>すべてのデータ項目への同期アクセスがない仮想データ ソース。結果として、初期化されていない項目のためにプレースホルダーを同期して返す可能性があります。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.DataProvider">
            <summary>このデータ ソースと使用する仮想データ プロバイダーを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.ActualDataProvider">
            <summary>このデータ ソースと使用されている実際のデータ プロバイダーを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.PageSizeRequested">
            <summary>要求されたページ サイズを取得または設定します。基本プロバイダーまたはその接続されるサービスで使用されていない可能性があります。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.MaxCachedPages">
            <summary>一番古いページが破棄される前に、データ ソースにキャッシュするデータ ページの最大数を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.ActualPageSize">
            <summary>使用される実際の解決されたページ サイズを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.IsVirtual">
            <summary>データ ソースが仮想かどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.IsPlaceholderItem(System.Int32)">
            <summary>要求されたインデックスにある項目はまだ読み込まれていない仮想項目のプレースホルダーであるかどうかを返します。</summary>
            <param name="index">チェックする項目のインデックス。</param>
            <returns>項目がプレースホルダーの場合は True。</returns>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.GetItemAtIndex(System.Int32)">
            <summary>要求したインデックスにある項目を取得します。null 値を返す可能性があります。その場合、null 値が仮想項目のプレースホルダーであるかどうかを確認します。</summary>
            <param name="index">取得する項目のインデックス。</param>
            <returns>要求されたインデックスにある項目。null 値はプレースホルダーを表す可能性があります。</returns>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.GetItemPropertyAtIndex(System.Int32,System.String)">
            <summary>要求されたインデックスにある項目のプロパティを取得します。</summary>
            <param name="index">プロパティ値を取得する項目のインデックス。</param>
            <param name="valueName">項目を取得するプロパティ名。</param>
            <returns>項目のプロパティの値。</returns>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.AddCandidate(System.Int32,Infragistics.Core.Controls.DataSource.DataSourcePageRequestPriority)">
            <summary>現在ページ候補にページ候補を追加します。</summary>
            <param name="pageIndex">追加するページ候補のインデックス。</param>
            <param name="priority">追加するページ候補の優先レベル。</param>
            <returns>ページ候補が追加された場合は True。</returns>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.RemoveCandidate(System.Int32)">
            <summary>現在ページ候補からページ候補を削除します。</summary>
            <param name="pageIndex">削除する候補のページ インデックス。</param>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.GetUnrealizedCount">
            <summary>読み込まれていない仮想項目数を取得します。</summary>
            <returns>読み込まれていない項目数。</returns>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.IsItemIndexLookupSupported">
            <summary>提供された項目のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.IsKeyIndexLookupSupported">
            <summary>提供されたプライマリ キー値のインデックスの検索がサポートされるかどうかを取得します。</summary>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.IndexOfItem(System.Object)">
            <summary>データ ソースに含まれている項目のインデックスを返すために呼び出されます。項目が見つからないか、この操作がサポートされていない場合は -1 を返します。</summary>
            <param name="item">インデックスを検索する項目。</param>
            <returns>インデックスまたは -1。</returns>
        </member>
        <member name="M:Infragistics.Controls.DataSource.Implementation.VirtualDataSource.IndexOfKey(System.Object[])">
            <summary>データ ソースに含まれているプライマリ キー値のインデックスを返すために呼び出されます。キーが見つからない、またはこの操作がサポートされていない場合は -1 を返します。</summary>
            <param name="key">検索するプライマリ キー値。</param>
            <returns>プライマリ キー値にあるインデックス。検索されていないか、利用可能ではない場合は -1。</returns>
        </member>
    </members>
</doc>