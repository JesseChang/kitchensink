<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics.Core.Platform</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Core.DeviceInfo">
            <summary>
            A class to provide device info
            </summary>
        </member>
        <member name="P:Infragistics.Core.DeviceInfo.PlatformType">
            <summary>
            Returns the platform type
            </summary>
            <seealso cref="T:Infragistics.Core.PlatformType"/>
        </member>
        <member name="T:Infragistics.Core.PlatformType">
            <summary>
            Identifies a specific platform
            </summary>
        </member>
        <member name="F:Infragistics.Core.PlatformType.Android">
            <summary>
            An Android platform
            </summary>
        </member>
        <member name="F:Infragistics.Core.PlatformType.iOS">
            <summary>
            An iOS platform
            </summary>
        </member>
        <member name="F:Infragistics.Core.PlatformType.UWP">
            <summary>
            A Universal Windows platform
            </summary>
        </member>
        <member name="F:Infragistics.Core.PlatformType.Unknown">
            <summary>
            Unknown platform
            </summary>
        </member>
        <member name="T:Infragistics.Core.EncodingUtilities">
            <summary>
            Static class used to expose utilty methods concerning encoding
            </summary>
        </member>
        <member name="M:Infragistics.Core.EncodingUtilities.RegisterEncodingProvider">
            <summary>
            Registers the encoding provider for this platform
            </summary>
        </member>
        <member name="T:Infragistics.Core.BitmapUtilities">
            <summary>
            A static class that exposes paltform utilities 
            </summary>
        </member>
        <member name="M:Infragistics.Core.BitmapUtilities.GetPixelAt(System.Object,System.Int32,System.Int32)">
            <summary>
            Gets a pixel value
            </summary>
            <param name="bitmap">The bitmap</param>
            <param name="x">x offset of the pixel</param>
            <param name="y">y offset of the pixel</param>
            <returns>The value at the specified x and y coordinate</returns>
        </member>
        <member name="T:Infragistics.Core.ImageType">
            <summary>
            The type of image
            </summary>
        </member>
        <member name="F:Infragistics.Core.ImageType.Jpeg">
            <summary>
            The image is a jpeg
            </summary>
        </member>
        <member name="F:Infragistics.Core.ImageType.Png">
            <summary>
            The image is a png
            </summary>
        </member>
        <member name="T:Infragistics.Core.ImageWrapper">
            <summary>
            a class that wraps a native image
            </summary>
        </member>
        <member name="M:Infragistics.Core.ImageWrapper.IsEquivalent(Infragistics.Core.ImageWrapper)">
            <summary>
            Detrimes if another image is equivalent
            </summary>
            <param name="other">The other ImageWrapper</param>
            <returns>True if they are equivalent, otherwise false</returns>
        </member>
        <member name="T:Infragistics.Core.PlatformPixelScaler">
            <summary>
            A static class that provides platform scaling utility functions
            </summary>
        </member>
        <member name="M:Infragistics.Core.PlatformPixelScaler.ToPixelUnits(System.Double)">
            <summary>
            Converts to pixel units
            </summary>
        </member>
        <member name="M:Infragistics.Core.PlatformPixelScaler.ToFontPixelUnits(System.Double)">
            <summary>
            Converts to font pixel units
            </summary>
        </member>
        <member name="M:Infragistics.Core.PlatformPixelScaler.ClampPixelScalingRatio(System.Double)">
            <summary>
            Clamps a pixel scaling ratio value to an acceptable value for the current platform.
            </summary>
            <param name="value">The value to clamp</param>
            <returns>The clamped value</returns>
        </member>
        <member name="T:Infragistics.CodePage437Encoding">
            <summary>
            Implementation of Code page 437 encoding
            </summary>
        </member>
        <member name="M:Infragistics.CodePage437Encoding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.CodePage437Encoding"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.CodePageDoubleByte">
            <summary>
            Encoding for code pages that have double byte representation
            </summary>
        </member>
        <member name="M:Infragistics.CodePageDoubleByte.#ctor(System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Nullable{System.Char}[]})">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.CodePageDoubleByte"/> class.
            </summary>
            <param name="codePage">The code page.</param>
            <param name="codePageLayouts">The code page layouts.</param>
        </member>
        <member name="P:Infragistics.CodePageDoubleByte.CodePage">
            <summary>
            Gets the code page.
            </summary>
            <value>The code page.</value>
        </member>
        <member name="M:Infragistics.CodePageDoubleByte.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            When overridden in a derived class, decodes a sequence of bytes from the specified byte array into the specified character array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="byteIndex">The zero-based Index of the first byte to decode.</param>
            <param name="byteCount">The number of bytes to decode.</param>
            <param name="chars">The character array to contain the resulting set of characters.</param>
            <param name="charIndex">The zero-based Index at which to start writing the resulting set of characters.</param>
            <returns>
            The actual number of characters written into <paramref name="chars"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="bytes"/> is null.-or- <paramref name="chars"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="byteIndex"/> or <paramref name="byteCount"/> or <paramref name="charIndex"/> is less than zero.-or- <paramref name="byteIndex"/> and <paramref name="byteCount"/> do not denote a valid range in <paramref name="bytes"/>.-or- <paramref name="charIndex"/> is not a valid Index in <paramref name="chars"/>. </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="chars"/> does not have enough capacity from <paramref name="charIndex"/> to the End of the array to accommodate the resulting characters. </exception>
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageDoubleByte.GetMaxByteCount(System.Int32)">
            <summary>
            When overridden in a derived class, calculates the maximum number of bytes produced by encoding the specified number of characters.
            </summary>
            <param name="charCount">The number of characters to encode.</param>
            <returns>
            The maximum number of bytes produced by encoding the specified number of characters.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="charCount"/> is less than zero. </exception>
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageDoubleByte.GetMaxCharCount(System.Int32)">
            <summary>
            When overridden in a derived class, calculates the maximum number of characters produced by decoding the specified number of bytes.
            </summary>
            <param name="byteCount">The number of bytes to decode.</param>
            <returns>
            The maximum number of characters produced by decoding the specified number of bytes.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="byteCount"/> is less than zero. </exception>
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for a complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageDoubleByte.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="index">The zero-based Index of the first character to encode.</param>
            <param name="count">The number of characters to encode.</param>
            <returns>
            The number of bytes produced by encoding the specified characters.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="chars"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="chars"/>. </exception>
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageDoubleByte.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            When overridden in a derived class, encodes a set of characters from the specified character array into the specified byte array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="charIndex">The zero-based Index of the first character to encode.</param>
            <param name="charCount">The number of characters to encode.</param>
            <param name="bytes">The byte array to contain the resulting sequence of bytes.</param>
            <param name="byteIndex">The zero-based Index at which to start writing the resulting sequence of bytes.</param>
            <returns>
            The actual number of bytes written into <paramref name="bytes"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="chars"/> is null.-or- <paramref name="bytes"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="charIndex"/> or <paramref name="charCount"/> or <paramref name="byteIndex"/> is less than zero.-or- <paramref name="charIndex"/> and <paramref name="charCount"/> do not denote a valid range in <paramref name="chars"/>.-or- <paramref name="byteIndex"/> is not a valid Index in <paramref name="bytes"/>. </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="bytes"/> does not have enough capacity from <paramref name="byteIndex"/> to the End of the array to accommodate the resulting bytes. </exception>
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageDoubleByte.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The zero-based Index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>
            The number of characters produced by decoding the specified sequence of bytes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="bytes"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="bytes"/>. </exception>
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageDoubleByte.GetString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a string.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The zero-based Index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>
            A <see cref="T:System.String"/> containing the results of decoding the specified sequence of bytes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="bytes"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="bytes"/>. </exception>
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="T:Infragistics.CodePageEncoding">
            <summary>
            Implementation for missing code pages support
            </summary>
        </member>
        <member name="M:Infragistics.CodePageEncoding.GetCodePage(System.Text.Encoding)">
            <summary>
            Gets the code page. Replaces Encoding.CodePage;
            </summary>
            <param name="encoding">The encoding.</param>
            <returns>The code page of the encoding</returns>
        </member>
        <member name="T:Infragistics.CodePageSingleByte">
            <summary>
            Encoding for code pages that have single byte representation
            </summary>
        </member>
        <member name="M:Infragistics.CodePageSingleByte.#ctor(System.Int32,System.Nullable{System.Char}[])">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.CodePageSingleByte"/> class.
            </summary>
            <param name="codePage">The code page.</param>
            <param name="codePageLayout">The code page layout.</param>
        </member>
        <member name="P:Infragistics.CodePageSingleByte.CodePage">
            <summary>
            Gets the code page.
            </summary>
            <value>The code page.</value>
        </member>
        <member name="M:Infragistics.CodePageSingleByte.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            When overridden in a derived class, decodes a sequence of bytes from the specified byte array into the specified character array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="byteIndex">The zero-based Index of the first byte to decode.</param>
            <param name="byteCount">The number of bytes to decode.</param>
            <param name="chars">The character array to contain the resulting set of characters.</param>
            <param name="charIndex">The zero-based Index at which to start writing the resulting set of characters.</param>
            <returns>
            The actual number of characters written into <paramref name="chars"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="bytes"/> is null.-or- <paramref name="chars"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="byteIndex"/> or <paramref name="byteCount"/> or <paramref name="charIndex"/> is less than zero.-or- <paramref name="byteIndex"/> and <paramref name="byteCount"/> do not denote a valid range in <paramref name="bytes"/>.-or- <paramref name="charIndex"/> is not a valid Index in <paramref name="chars"/>. </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="chars"/> does not have enough capacity from <paramref name="charIndex"/> to the End of the array to accommodate the resulting characters. </exception>
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageSingleByte.GetChars(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a set of characters.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The zero-based index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>
            A character array containing the results of decoding the specified sequence of bytes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="bytes"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="bytes"/>. </exception>
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageSingleByte.GetChars(System.Byte[])">
            <summary>
            When overridden in a derived class, decodes all the bytes in the specified byte array into a set of characters.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <returns>
            A character array containing the results of decoding the specified sequence of bytes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="bytes"/> is null. </exception>
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageSingleByte.GetMaxByteCount(System.Int32)">
            <summary>
            When overridden in a derived class, calculates the maximum number of bytes produced by encoding the specified number of characters.
            </summary>
            <param name="charCount">The number of characters to encode.</param>
            <returns>
            The maximum number of bytes produced by encoding the specified number of characters.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="charCount"/> is less than zero. </exception>
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageSingleByte.GetMaxCharCount(System.Int32)">
            <summary>
            When overridden in a derived class, calculates the maximum number of characters produced by decoding the specified number of bytes.
            </summary>
            <param name="byteCount">The number of bytes to decode.</param>
            <returns>
            The maximum number of characters produced by decoding the specified number of bytes.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="byteCount"/> is less than zero. </exception>
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for a complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageSingleByte.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="index">The zero-based Index of the first character to encode.</param>
            <param name="count">The number of characters to encode.</param>
            <returns>
            The number of bytes produced by encoding the specified characters.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="chars"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="chars"/>. </exception>
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageSingleByte.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            When overridden in a derived class, encodes a set of characters from the specified character array into the specified byte array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="charIndex">The zero-based Index of the first character to encode.</param>
            <param name="charCount">The number of characters to encode.</param>
            <param name="bytes">The byte array to contain the resulting sequence of bytes.</param>
            <param name="byteIndex">The zero-based Index at which to start writing the resulting sequence of bytes.</param>
            <returns>
            The actual number of bytes written into <paramref name="bytes"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="chars"/> is null.-or- <paramref name="bytes"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="charIndex"/> or <paramref name="charCount"/> or <paramref name="byteIndex"/> is less than zero.-or- <paramref name="charIndex"/> and <paramref name="charCount"/> do not denote a valid range in <paramref name="chars"/>.-or- <paramref name="byteIndex"/> is not a valid Index in <paramref name="bytes"/>. </exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="bytes"/> does not have enough capacity from <paramref name="byteIndex"/> to the End of the array to accommodate the resulting bytes. </exception>
            <exception cref="T:System.Text.EncoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageSingleByte.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The zero-based Index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>
            The number of characters produced by decoding the specified sequence of bytes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="bytes"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="bytes"/>. </exception>
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="M:Infragistics.CodePageSingleByte.GetString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a string.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The zero-based Index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>
            A <see cref="T:System.String"/> containing the results of decoding the specified sequence of bytes.
            </returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="bytes"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index"/> or <paramref name="count"/> is less than zero.-or- <paramref name="index"/> and <paramref name="count"/> do not denote a valid range in <paramref name="bytes"/>. </exception>
            <exception cref="T:System.Text.DecoderFallbackException">A fallback occurred (see Understanding Encodings for complete explanation).</exception>
        </member>
        <member name="T:Infragistics.Windows1251Encoding">
            <summary>
            Implementation of Windows-1252 encoding
            </summary>
        </member>
        <member name="M:Infragistics.Windows1251Encoding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows1251Encoding"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Windows1252Encoding">
            <summary>
            Implementation of Windows-1252 encoding
            </summary>
        </member>
        <member name="M:Infragistics.Windows1252Encoding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows1252Encoding"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Windows932Encoding">
            <summary>
            Implementation of Windows-31J (CP932) encoding
            </summary>
        </member>
        <member name="M:Infragistics.Windows932Encoding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows932Encoding"/> class.
            </summary>
        </member>
        <member name="T:Infragistics.Windows936Encoding">
            <summary>
            Implementation of Code Page 936 (CP936) encoding
            </summary>
        </member>
        <member name="M:Infragistics.Windows936Encoding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows936Encoding"/> class.
            </summary>
        </member>
        <member name="T:Android.Graphics.ColorExtensions">
            <summary>
            A static class that supplies extension methods for colors
            </summary>
        </member>
        <member name="M:Android.Graphics.ColorExtensions.ToIGColor(Android.Graphics.Color)">
            <summary>
            Converts an Android.Graphics.Color to a <see cref="T:Infragistics.Core.Graphics.Color"/>
            </summary>
        </member>
        <member name="M:Android.Graphics.ColorExtensions.ToBrush(Android.Graphics.Color)">
            <summary>
            Converts an Android.Graphics.Color to a <see cref="T:Infragistics.Core.Graphics.Brush"/>
            </summary>
        </member>
        <member name="M:Android.Graphics.ColorExtensions.ToIGColor(System.Int32)">
            <summary>
            Converts an integer value to a <see cref="T:Infragistics.Core.Graphics.Color"/>
            </summary>
        </member>
        <member name="M:Android.Graphics.ColorExtensions.ToBrush(System.Int32)">
            <summary>
            Converts an integer value to a <see cref="T:Infragistics.Core.Graphics.Brush"/>
            </summary>
        </member>
    </members>
</doc>
